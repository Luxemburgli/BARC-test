{
  "uid": "f0c1d013b43dc02b",
  "annotations": {
    "example": "bad",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_6_gpt-4o_temp1.00_maxtokens2048_rng0_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          8,
          8,
          0,
          8,
          8,
          9,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          8,
          8,
          0,
          8,
          8,
          0,
          0,
          0
        ],
        [
          1,
          9,
          9,
          0,
          1,
          1,
          0,
          0,
          8,
          0,
          0,
          0,
          0
        ],
        [
          0,
          9,
          9,
          0,
          1,
          1,
          0,
          4,
          0,
          0,
          0,
          0,
          4
        ],
        [
          0,
          0,
          0,
          8,
          0,
          0,
          0,
          4,
          0,
          1,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          1,
          1,
          0
        ],
        [
          1,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          8,
          0,
          0,
          0,
          8,
          8,
          0,
          4,
          0,
          1,
          0
        ],
        [
          1,
          1,
          0,
          0,
          0,
          0,
          8,
          8,
          0,
          0,
          9,
          9,
          0
        ],
        [
          1,
          1,
          4,
          0,
          0,
          0,
          0,
          9,
          9,
          4,
          0,
          0,
          4
        ],
        [
          1,
          1,
          8,
          0,
          0,
          1,
          4,
          9,
          9,
          0,
          0,
          8,
          0
        ],
        [
          0,
          0,
          0,
          0,
          9,
          4,
          0,
          8,
          0,
          0,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          8,
          0,
          8,
          0,
          0,
          1,
          1,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          1
        ],
        [
          0,
          0,
          1
        ],
        [
          0,
          0,
          1
        ],
        [
          0,
          0,
          1
        ],
        [
          0,
          0,
          1
        ],
        [
          0,
          0,
          1
        ],
        [
          8,
          0,
          1
        ],
        [
          8,
          0,
          1
        ],
        [
          8,
          9,
          1
        ],
        [
          8,
          9,
          1
        ],
        [
          8,
          9,
          1
        ],
        [
          8,
          9,
          1
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          8,
          0,
          0,
          3,
          3,
          0,
          7,
          0,
          0
        ],
        [
          7,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          0,
          0,
          3
        ],
        [
          3,
          3,
          0,
          0,
          3,
          3,
          0,
          0,
          0,
          0,
          8,
          0
        ],
        [
          3,
          3,
          8,
          7,
          3,
          3,
          0,
          8,
          8,
          7,
          0,
          0
        ],
        [
          0,
          7,
          0,
          3,
          0,
          0,
          0,
          8,
          8,
          0,
          3,
          7
        ],
        [
          0,
          8,
          8,
          8,
          7,
          8,
          8,
          0,
          8,
          0,
          8,
          8
        ],
        [
          7,
          8,
          8,
          0,
          8,
          8,
          8,
          0,
          0,
          0,
          8,
          8
        ],
        [
          0,
          8,
          8,
          8,
          8,
          0,
          0,
          8,
          8,
          0,
          0,
          0
        ],
        [
          0,
          8,
          8,
          8,
          8,
          0,
          8,
          0,
          8,
          0,
          0,
          0
        ],
        [
          0,
          7,
          0,
          0,
          8,
          8,
          0,
          0,
          8,
          0,
          0,
          8
        ],
        [
          8,
          8,
          0,
          0,
          8,
          8,
          0,
          8,
          3,
          3,
          0,
          0
        ],
        [
          8,
          8,
          0,
          0,
          0,
          0,
          0,
          7,
          3,
          3,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          8
        ],
        [
          0,
          8
        ],
        [
          0,
          8
        ],
        [
          0,
          8
        ],
        [
          0,
          8
        ],
        [
          0,
          8
        ],
        [
          0,
          8
        ],
        [
          0,
          8
        ],
        [
          0,
          8
        ],
        [
          0,
          8
        ],
        [
          0,
          8
        ],
        [
          0,
          8
        ],
        [
          0,
          8
        ],
        [
          0,
          8
        ],
        [
          3,
          8
        ],
        [
          3,
          8
        ],
        [
          3,
          8
        ],
        [
          3,
          8
        ],
        [
          3,
          8
        ],
        [
          3,
          8
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          3,
          3,
          0,
          0
        ],
        [
          0,
          0,
          0,
          3,
          3,
          3,
          5,
          5,
          3,
          3,
          0,
          0
        ],
        [
          0,
          5,
          0,
          3,
          3,
          0,
          5,
          5,
          0,
          0,
          6,
          0
        ],
        [
          0,
          6,
          6,
          5,
          5,
          0,
          0,
          0,
          5,
          0,
          0,
          0
        ],
        [
          3,
          6,
          6,
          5,
          5,
          0,
          0,
          0,
          0,
          3,
          0,
          5
        ],
        [
          0,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1
        ],
        [
          1,
          0,
          0,
          0,
          0,
          6,
          6,
          6,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          3,
          3,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          3,
          3,
          0,
          0,
          6,
          0,
          0,
          0,
          0,
          0
        ],
        [
          3,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          3,
          0,
          0
        ],
        [
          0,
          0,
          6,
          0,
          0,
          6,
          0,
          1,
          1,
          0,
          0,
          0
        ],
        [
          0,
          6,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          1,
          0,
          0
        ]
      ],
      "output": [
        [
          3,
          0,
          0,
          0
        ],
        [
          3,
          0,
          0,
          0
        ],
        [
          3,
          5,
          6,
          1
        ],
        [
          3,
          5,
          6,
          1
        ],
        [
          3,
          5,
          6,
          1
        ],
        [
          3,
          5,
          6,
          1
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2
        ],
        [
          0,
          0,
          2,
          2,
          0,
          0,
          9,
          0,
          9,
          0,
          0,
          0,
          2,
          2
        ],
        [
          0,
          0,
          9,
          0,
          0,
          0,
          0,
          0,
          2,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2,
          2,
          0,
          0,
          0,
          0
        ],
        [
          0,
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          9,
          9,
          0
        ],
        [
          0,
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          0
        ],
        [
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          0,
          0,
          9,
          0,
          0
        ],
        [
          0,
          9,
          0,
          0,
          9,
          9,
          9,
          0,
          2,
          2,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          9,
          9,
          9,
          0,
          2,
          2,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          0,
          0,
          0,
          0,
          2
        ]
      ],
      "output": [
        [
          2,
          0
        ],
        [
          2,
          0
        ],
        [
          2,
          0
        ],
        [
          2,
          0
        ],
        [
          2,
          0
        ],
        [
          2,
          0
        ],
        [
          2,
          9
        ],
        [
          2,
          9
        ],
        [
          2,
          9
        ],
        [
          2,
          9
        ],
        [
          2,
          9
        ],
        [
          2,
          9
        ],
        [
          2,
          9
        ],
        [
          2,
          9
        ]
      ]
    }
  ],
  "code": "from common import *\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# rectangular cells, topology, counting\n\n# description:\n# The input grid contains 2x2 cells of various colors scattered within the grid. Additionally, there are individually colored pixels.\n# The goal is to count the number of each 2x2 colored cell in the input.\n# The output will be a vertical bar for each distinct color with a length proportional to the count of that 2x2 colored cell multiplies by 2 (each 2x2 cell counts as 2 pixels in length).\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    # Count each 2x2 colored cell\n    color_counts = {}\n    for x in range(input_grid.shape[0] - 1):\n        for y in range(input_grid.shape[1] - 1):\n            cell = input_grid[x:x+2, y:y+2]\n            unique_colors = np.unique(cell)\n            if len(unique_colors) == 1 and unique_colors[0] != Color.BLACK:\n                color = unique_colors[0]\n                if color in color_counts:\n                    color_counts[color] += 1\n                else:\n                    color_counts[color] = 1\n\n    # Determine the output grid size, based on the number of unique colors and their counts\n    unique_colors = list(color_counts.keys())\n    max_count = max(color_counts.values(), default=0)\n    output_grid_height = max_count * 2\n    output_grid_width = len(unique_colors)\n\n    # Initialize the output grid\n    output_grid = np.zeros((output_grid_height, output_grid_width), dtype=int)\n\n    # Fill the vertical bars corresponding to each color\n    for col_index, color in enumerate(unique_colors):\n        for row_index in range(color_counts[color] * 2):\n            output_grid[output_grid_height - 1 - row_index, col_index] = color\n\n    return output_grid\n\n\ndef generate_input() -> np.ndarray:\n    # Create a grid size between 10x10 to 20x20\n    n = np.random.randint(10, 21)\n    grid = np.zeros((n, n), dtype=int)\n\n    # Randomly decide the colors to be used\n    colors = random.sample(Color.NOT_BLACK, np.random.randint(2, 5))\n\n    # Fill the grid with 2x2 colored cells\n    for _ in range(np.random.randint(5, 15)):\n        color = random.choice(colors)\n        x, y = random_free_location_for_sprite(grid, np.full((2, 2), color))\n        blit_sprite(grid, np.full((2, 2), color), x, y)\n\n    # Add some individually colored pixels\n    for _ in range(np.random.randint(10, 30)):\n        color = random.choice(colors)\n        x, y = random_free_location_for_sprite(grid, np.full((1, 1), color))\n        blit_sprite(grid, np.full((1, 1), color), x, y)\n    \n    return grid"
}