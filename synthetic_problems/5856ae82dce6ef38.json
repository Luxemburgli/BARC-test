{
  "uid": "5856ae82dce6ef38",
  "annotations": {
    "example": "ok",
    "code": "ok"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng0_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          6,
          6,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          6,
          6,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          7,
          7,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8,
          0,
          0,
          7,
          7,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          6,
          6,
          0,
          0,
          0,
          0
        ],
        [
          6,
          6,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          7,
          7,
          0,
          0
        ],
        [
          0,
          0,
          7,
          7,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          8,
          8
        ],
        [
          0,
          0,
          0,
          0,
          8,
          8
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          7,
          7,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          7,
          7,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          4,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          4,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          7,
          7,
          0,
          0,
          0,
          0
        ],
        [
          7,
          7,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          4,
          4,
          0,
          0
        ],
        [
          0,
          0,
          4,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          1
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          0,
          0,
          0
        ],
        [
          0,
          4,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          0,
          0,
          0
        ],
        [
          0,
          4,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          4,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          4,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          9,
          9,
          0,
          0,
          0,
          0
        ],
        [
          9,
          9,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          4,
          4,
          0,
          0
        ],
        [
          0,
          0,
          4,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          4
        ],
        [
          0,
          0,
          0,
          0,
          4,
          4
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          3,
          3,
          0,
          0,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          3,
          3,
          0,
          0,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          6,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          6,
          0
        ]
      ],
      "output": [
        [
          3,
          3,
          0,
          0,
          0,
          0
        ],
        [
          3,
          3,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          5,
          5,
          0,
          0
        ],
        [
          0,
          0,
          5,
          5,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          6,
          6
        ],
        [
          0,
          0,
          0,
          0,
          6,
          6
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# objects, alignment, sliding objects, color guide\n\n# description:\n# In the input grid, you will see a black grid with several 2x2 colored squares randomly placed in it. Each 2x2 square contains a single color.\n# To make the output, create a 6x6 grid. Align each 2x2 square from the input in a pattern\n# where the squares are positioned diagonally in the output grid.\n\ndef main(input_grid):\n    # Plan:\n    # 1. Extract the 2x2 colored squares from the input grid\n    # 2. Create the output grid\n    # 3. Arrange the 2x2 squares diagonally in the output grid\n    \n    # step 1: extract the 2x2 colored squares from the input grid\n    square_size = (2, 2)\n    square_objects = detect_objects(input_grid, background=Color.BLACK, \n                                    allowed_dimensions=[square_size],\n                                    predicate=lambda sprite: np.any(sprite != Color.BLACK) and np.all(sprite != Color.BLACK))\n    square_sprites = [crop(obj, background=Color.BLACK) for obj in square_objects]\n\n    # step 2: create the output grid, which is all black\n    output_grid = np.full((6, 6), Color.BLACK, dtype=int)\n\n    # step 3: arrange the 2x2 squares diagonally in the output grid\n    for i, square in enumerate(square_sprites):\n        x, y = i * 2, i * 2  # positioning squares diagonally\n        blit_sprite(output_grid, square, x, y)\n\n    return output_grid\n\ndef generate_input():\n    # create a black grid with size ranging from 10x10 to 15x15\n    n = np.random.randint(10, 16)\n    m = np.random.randint(10, 16)\n    input_grid = np.full((n, m), Color.BLACK, dtype=int)\n\n    n_objects = 3  # ensure we can place 3 squares diagonally in the 6x6 output grid\n\n    for _ in range(n_objects):\n        # make a colored 2x2 square\n        color = np.random.choice(list(Color.NOT_BLACK))\n        square = np.full((2, 2), color, dtype=int)\n\n        # place it randomly on the grid, assuming we can find a spot\n        try:\n            x, y = random_free_location_for_sprite(input_grid, square, background=Color.BLACK)\n        except:\n            continue\n\n        blit_sprite(input_grid, square, x, y, background=Color.BLACK)\n\n    return input_grid"
}