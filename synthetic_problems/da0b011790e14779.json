{
  "uid": "da0b011790e14779",
  "annotations": {
    "example": "ok",
    "code": "ok"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_anthropic_claude-3.5-sonnet:beta_temp1.00_maxtokens2048_rng2_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          2,
          2,
          2,
          2,
          2,
          0,
          0,
          2
        ],
        [
          0,
          7,
          2,
          0,
          2,
          7,
          7,
          2
        ],
        [
          0,
          7,
          2,
          0,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          0,
          0,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          0,
          0,
          2
        ],
        [
          0,
          2,
          7,
          0,
          2,
          2,
          2,
          2
        ],
        [
          0,
          2,
          7,
          0,
          2,
          7,
          7,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          0,
          0,
          2
        ]
      ],
      "output": [
        [
          2,
          2,
          2,
          2
        ],
        [
          0,
          7,
          2,
          0
        ],
        [
          0,
          7,
          2,
          0
        ],
        [
          2,
          2,
          2,
          2
        ]
      ]
    },
    {
      "input": [
        [
          0,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          5,
          0,
          0,
          0
        ],
        [
          0,
          0,
          6,
          0,
          0,
          5,
          0,
          0,
          6,
          0,
          0,
          5
        ],
        [
          0,
          0,
          6,
          6,
          6,
          5,
          0,
          0,
          6,
          6,
          6,
          5
        ],
        [
          5,
          6,
          6,
          6,
          0,
          0,
          5,
          6,
          6,
          6,
          0,
          0
        ],
        [
          5,
          0,
          0,
          6,
          0,
          0,
          5,
          0,
          0,
          6,
          0,
          0
        ],
        [
          0,
          0,
          0,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          5,
          0
        ],
        [
          0,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          5,
          0,
          0,
          0
        ],
        [
          0,
          0,
          6,
          0,
          0,
          5,
          0,
          0,
          6,
          0,
          0,
          5
        ],
        [
          0,
          0,
          6,
          6,
          6,
          5,
          0,
          0,
          6,
          6,
          6,
          5
        ],
        [
          5,
          6,
          6,
          6,
          0,
          0,
          5,
          6,
          6,
          6,
          0,
          0
        ],
        [
          5,
          0,
          0,
          6,
          0,
          0,
          5,
          0,
          0,
          6,
          0,
          0
        ],
        [
          0,
          0,
          0,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          5,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          5,
          5,
          0
        ],
        [
          5,
          0,
          0,
          6,
          0,
          0
        ],
        [
          5,
          6,
          6,
          6,
          0,
          0
        ],
        [
          0,
          0,
          6,
          6,
          6,
          5
        ],
        [
          0,
          0,
          6,
          0,
          0,
          5
        ],
        [
          0,
          5,
          5,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          0
        ],
        [
          0,
          0,
          6,
          0,
          0,
          6,
          0,
          0,
          6,
          0,
          0,
          6
        ],
        [
          0,
          0,
          6,
          6,
          6,
          6,
          0,
          0,
          6,
          6,
          6,
          6
        ],
        [
          6,
          6,
          6,
          6,
          0,
          0,
          6,
          6,
          6,
          6,
          0,
          0
        ],
        [
          6,
          0,
          0,
          6,
          0,
          0,
          6,
          0,
          0,
          6,
          0,
          0
        ],
        [
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          6,
          6,
          0
        ],
        [
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          0
        ],
        [
          0,
          0,
          6,
          0,
          0,
          6,
          0,
          0,
          6,
          0,
          0,
          6
        ],
        [
          0,
          0,
          6,
          6,
          6,
          6,
          0,
          0,
          6,
          6,
          6,
          6
        ],
        [
          6,
          6,
          6,
          6,
          0,
          0,
          6,
          6,
          6,
          6,
          0,
          0
        ],
        [
          6,
          0,
          0,
          6,
          0,
          0,
          6,
          0,
          0,
          6,
          0,
          0
        ],
        [
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          6,
          6,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          6,
          6,
          0
        ],
        [
          6,
          0,
          0,
          6,
          0,
          0
        ],
        [
          6,
          6,
          6,
          6,
          0,
          0
        ],
        [
          0,
          0,
          6,
          6,
          6,
          6
        ],
        [
          0,
          0,
          6,
          0,
          0,
          6
        ],
        [
          0,
          6,
          6,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          3,
          3,
          8,
          0,
          0,
          0,
          3,
          3,
          8,
          0,
          0
        ],
        [
          0,
          0,
          8,
          8,
          0,
          3,
          0,
          0,
          8,
          8,
          0,
          3
        ],
        [
          8,
          8,
          8,
          8,
          8,
          3,
          8,
          8,
          8,
          8,
          8,
          3
        ],
        [
          3,
          8,
          8,
          8,
          8,
          8,
          3,
          8,
          8,
          8,
          8,
          8
        ],
        [
          3,
          0,
          8,
          8,
          0,
          0,
          3,
          0,
          8,
          8,
          0,
          0
        ],
        [
          0,
          0,
          8,
          3,
          3,
          0,
          0,
          0,
          8,
          3,
          3,
          0
        ],
        [
          0,
          3,
          3,
          8,
          0,
          0,
          0,
          3,
          3,
          8,
          0,
          0
        ],
        [
          0,
          0,
          8,
          8,
          0,
          3,
          0,
          0,
          8,
          8,
          0,
          3
        ],
        [
          8,
          8,
          8,
          8,
          8,
          3,
          8,
          8,
          8,
          8,
          8,
          3
        ],
        [
          3,
          8,
          8,
          8,
          8,
          8,
          3,
          8,
          8,
          8,
          8,
          8
        ],
        [
          3,
          0,
          8,
          8,
          0,
          0,
          3,
          0,
          8,
          8,
          0,
          0
        ],
        [
          0,
          0,
          8,
          3,
          3,
          0,
          0,
          0,
          8,
          3,
          3,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          8,
          3,
          3,
          0
        ],
        [
          3,
          0,
          8,
          8,
          0,
          0
        ],
        [
          3,
          8,
          8,
          8,
          8,
          8
        ],
        [
          8,
          8,
          8,
          8,
          8,
          3
        ],
        [
          0,
          0,
          8,
          8,
          0,
          3
        ],
        [
          0,
          3,
          3,
          8,
          0,
          0
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# translational symmetry, reflection, rotation, objects\n\n# description:\n# In the input, you will see a sprite repeated in a 2x2 grid pattern. Each repetition might be rotated by 0, 90, 180, or 270 degrees.\n# To make the output, extract the original sprite and reflect it vertically (top to bottom).\n\ndef main(input_grid):\n    # Find the size of the sprite (half of the input grid size)\n    sprite_size = input_grid.shape[0] // 2\n\n    # Extract the four quadrants\n    quadrants = [\n        input_grid[:sprite_size, :sprite_size],\n        input_grid[:sprite_size, sprite_size:],\n        input_grid[sprite_size:, :sprite_size],\n        input_grid[sprite_size:, sprite_size:]\n    ]\n\n    # Find the original sprite (the one that wasn't rotated)\n    original_sprite = None\n    for q in quadrants:\n        if all(np.array_equal(q, np.rot90(other, k)) for other, k in zip(quadrants, range(4))):\n            original_sprite = q\n            break\n\n    assert original_sprite is not None, \"No valid original sprite found\"\n\n    # Reflect the original sprite vertically\n    return np.flipud(original_sprite)\n\ndef generate_input():\n    # Create the sprite to be duplicated; pick a trio of random colors\n    n = random.randint(3, 8)\n    sprite = random_sprite(n, n, color_palette=random.sample(list(Color.NOT_BLACK), 3))\n    \n    # Create a 2x2 grid of the sprite with random rotations\n    grid = np.zeros((2*n, 2*n), dtype=int)\n    for i in range(2):\n        for j in range(2):\n            rotated_sprite = np.rot90(sprite, k=random.randint(0, 3))\n            blit_sprite(grid, rotated_sprite, x=i*n, y=j*n)\n\n    return grid"
}