{
  "uid": "0ae8a58744ffa8f2",
  "annotations": {
    "example": "bad",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng1_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          1,
          5,
          0,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          1,
          5,
          0,
          1,
          1,
          1
        ],
        [
          1,
          0,
          1,
          1,
          5,
          1,
          1,
          1,
          0
        ],
        [
          1,
          1,
          0,
          0,
          5,
          0,
          1,
          1,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          1,
          1,
          1,
          5,
          0,
          1,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          5,
          0,
          1,
          1,
          1
        ],
        [
          1,
          0,
          0,
          1,
          5,
          1,
          1,
          1,
          0
        ],
        [
          0,
          1,
          0,
          1,
          5,
          0,
          1,
          1,
          1
        ]
      ],
      "output": [
        [
          0,
          2,
          0,
          2,
          0,
          0,
          2,
          0,
          2
        ],
        [
          0,
          0,
          0,
          2,
          0,
          0,
          0,
          0,
          2
        ],
        [
          2,
          0,
          2,
          0,
          0,
          2,
          0,
          2,
          0
        ],
        [
          0,
          2,
          0,
          0,
          0,
          0,
          2,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          2,
          0,
          2,
          0,
          0,
          2,
          0,
          2
        ],
        [
          0,
          0,
          0,
          2,
          0,
          0,
          0,
          0,
          2
        ],
        [
          2,
          0,
          2,
          0,
          0,
          2,
          0,
          2,
          0
        ],
        [
          0,
          2,
          0,
          0,
          0,
          0,
          2,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          1,
          0,
          1,
          1,
          5,
          0,
          1,
          0,
          0
        ],
        [
          0,
          1,
          0,
          1,
          5,
          0,
          1,
          0,
          1
        ],
        [
          0,
          1,
          0,
          1,
          5,
          1,
          1,
          1,
          1
        ],
        [
          1,
          0,
          1,
          1,
          5,
          1,
          1,
          1,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          0,
          0,
          0,
          5,
          1,
          1,
          1,
          0
        ],
        [
          1,
          0,
          1,
          1,
          5,
          1,
          0,
          0,
          1
        ],
        [
          1,
          1,
          0,
          1,
          5,
          0,
          1,
          1,
          0
        ],
        [
          1,
          1,
          0,
          0,
          5,
          0,
          0,
          1,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          2,
          0,
          0,
          0,
          0,
          2
        ],
        [
          0,
          2,
          0,
          2,
          0,
          0,
          2,
          0,
          2
        ],
        [
          2,
          0,
          2,
          0,
          0,
          2,
          0,
          2,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          2,
          0,
          0,
          0,
          0,
          2
        ],
        [
          0,
          2,
          0,
          2,
          0,
          0,
          2,
          0,
          2
        ],
        [
          2,
          0,
          2,
          0,
          0,
          2,
          0,
          2,
          0
        ]
      ]
    },
    {
      "input": [
        [
          1,
          1,
          1,
          1,
          5,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          1,
          5,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          5,
          1,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          5,
          1,
          1,
          1,
          1
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          1,
          0,
          1,
          1,
          5,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          1,
          1,
          5,
          0,
          1,
          1,
          0
        ],
        [
          1,
          0,
          1,
          0,
          5,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          5,
          0,
          1,
          0,
          1
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          2,
          0,
          0,
          0,
          0,
          2
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          2,
          0,
          2,
          0,
          0,
          2,
          0,
          2
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          2,
          0,
          0,
          0,
          0,
          2
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          2,
          0,
          2,
          0,
          0,
          2,
          0,
          2
        ]
      ]
    },
    {
      "input": [
        [
          1,
          1,
          0,
          0,
          5,
          0,
          1,
          0,
          0
        ],
        [
          1,
          0,
          1,
          1,
          5,
          1,
          0,
          1,
          0
        ],
        [
          0,
          0,
          1,
          1,
          5,
          1,
          0,
          0,
          1
        ],
        [
          0,
          1,
          1,
          1,
          5,
          0,
          0,
          0,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          1,
          1,
          0,
          5,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          1,
          5,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          5,
          1,
          1,
          1,
          0
        ],
        [
          1,
          1,
          0,
          1,
          5,
          0,
          1,
          1,
          1
        ]
      ],
      "output": [
        [
          0,
          2,
          0,
          0,
          0,
          0,
          2,
          0,
          0
        ],
        [
          2,
          0,
          2,
          0,
          0,
          2,
          0,
          2,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          2,
          0,
          2,
          0,
          0,
          2,
          0,
          2
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          2,
          0,
          0,
          0,
          0,
          2,
          0,
          0
        ],
        [
          2,
          0,
          2,
          0,
          0,
          2,
          0,
          2,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          2,
          0,
          2,
          0,
          0,
          2,
          0,
          2
        ]
      ]
    }
  ],
  "code": "import numpy as np\nfrom typing import *\nfrom common import *\n\n# concepts:\n# rectangular cells, color guide, boolean logical operations, bitmasks with separator\n\n# description:\n# In the input, you will see two grey bars forming four quadrants. Each quadrant contains a bitmask where cells are either blue or black.\n# To create the output, color red the cells that are set (blue) in at least three of the four quadrants.\n\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    # Identify the positions of the vertical and horizontal bars\n    for x_bar in range(input_grid.shape[0]):\n        if np.all(input_grid[x_bar, :] == Color.GREY):\n            break\n\n    for y_bar in range(input_grid.shape[1]):\n        if np.all(input_grid[:, y_bar] == Color.GREY):\n            break\n\n    # Identify each quadrant\n    top_left = input_grid[:x_bar, :y_bar]\n    top_right = input_grid[:x_bar, y_bar+1:]\n    bottom_left = input_grid[x_bar+1:, :y_bar]\n    bottom_right = input_grid[x_bar+1:, y_bar+1:]\n\n    # Create an empty output grid\n    output_grid = np.zeros_like(input_grid)\n\n    # Mark intersections that are blue in at least 3 out of 4 quadrants\n    condition = ((top_left == Color.BLUE).astype(int) +\n                 (top_right == Color.BLUE).astype(int) +\n                 (bottom_left == Color.BLUE).astype(int) +\n                 (bottom_right == Color.BLUE).astype(int)) >= 3\n\n    output_grid[:x_bar, :y_bar][condition] = Color.RED\n    output_grid[:x_bar, y_bar+1:][condition] = Color.RED\n    output_grid[x_bar+1:, :y_bar][condition] = Color.RED\n    output_grid[x_bar+1:, y_bar+1:][condition] = Color.RED\n\n    return output_grid\n\n\ndef generate_input() -> np.ndarray:\n    # Create a grid with a separator\n    width, height = 9, 9\n    grid = np.zeros((width, height), dtype=int)\n\n    # Add vertical and horizontal grey bars to form four quadrants\n    x_bar, y_bar = 4, 4\n    grid[x_bar, :] = Color.GREY\n    grid[:, y_bar] = Color.GREY\n\n    # Fill each quadrant with random blue or black values\n    for region in [(0, 0, x_bar, y_bar), (0, y_bar+1, x_bar, height), (x_bar+1, 0, width, y_bar), (x_bar+1, y_bar+1, width, height)]:\n        region_x_start, region_y_start, region_x_end, region_y_end = region\n        for x in range(region_x_start, region_x_end):\n            for y in range(region_y_start, region_y_end):\n                grid[x, y] = np.random.choice([Color.BLUE, Color.BLACK])\n\n    return grid"
}