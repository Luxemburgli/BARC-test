{
  "uid": "be5ed15484e4295c",
  "annotations": {
    "example": "bad",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng1_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          6,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          6,
          6,
          6,
          0,
          0
        ],
        [
          0,
          0,
          0,
          6,
          6,
          6,
          0,
          0
        ],
        [
          0,
          0,
          0,
          6,
          6,
          6,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          4,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          4,
          4,
          4,
          0,
          0,
          0,
          0
        ],
        [
          4,
          4,
          4,
          0,
          0,
          0,
          0
        ],
        [
          4,
          4,
          4,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          6,
          6,
          6,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          6,
          6,
          6,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          6,
          6,
          6,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# repetition, patterns, connecting colors\n\n# description:\n# The input consists of a 3 x 3 grid with a single color pixel surrounded by black pixels. \n# To create the output, identify the color pixel and use it as a center pixel to draw concentric squares around it. \n# The output consists of concentric squares with alternating colors, starting from the color of the input pixel then alternating with black. \n# Stop expanding the pattern when the square reaches the boundary of the grid.\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    output_grid = np.copy(input_grid)\n    n, m = input_grid.shape\n\n    # Find the single color pixel\n    center_colors = input_grid[input_grid != Color.BLACK]\n    assert len(center_colors) == 1\n    center_color = center_colors[0]\n    \n    center_x, center_y = np.where(input_grid == center_color)\n    center_x, center_y = center_x[0], center_y[0]\n    \n    max_iter = min(center_x, n - 1 - center_x, center_y, m - 1 - center_y)\n\n    for i in range(1, max_iter + 1):\n        # Decide color based on current iteration\n        color = center_color if i % 2 == 1 else Color.BLACK\n\n        for offset in range(-i, i + 1):\n            # Top and bottom edges\n            output_grid[center_x + offset, center_y - i] = color\n            output_grid[center_x + offset, center_y + i] = color\n            # Left and right edges \n            output_grid[center_x - i, center_y + offset] = color\n            output_grid[center_x + i, center_y + offset] = color\n    \n    return output_grid\n\n\ndef generate_input() -> np.ndarray:\n    grid_size = np.random.randint(5, 10)\n    grid = np.full((grid_size, grid_size), Color.BLACK)\n    \n    # Choose random position in the grid for center pixel\n    center_x = np.random.randint(1, grid_size - 1)\n    center_y = np.random.randint(1, grid_size - 1)\n    \n    # Choose a random color for the center pixel\n    color = np.random.choice(list(Color.NOT_BLACK))\n    grid[center_x, center_y] = color\n    \n    return grid"
}