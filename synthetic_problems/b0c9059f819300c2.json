{
  "uid": "b0c9059f819300c2",
  "annotations": {
    "example": "good",
    "code": "ok"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng0_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          6,
          9,
          8,
          5,
          0,
          8,
          9,
          6
        ],
        [
          6,
          7,
          9,
          3,
          3,
          9,
          7,
          6
        ],
        [
          3,
          7,
          7,
          9,
          9,
          7,
          7,
          3
        ],
        [
          7,
          5,
          7,
          1,
          0,
          7,
          5,
          7
        ],
        [
          0,
          5,
          0,
          0,
          7,
          8,
          5,
          0
        ],
        [
          4,
          8,
          0,
          0,
          7,
          2,
          8,
          4
        ],
        [
          7,
          3,
          7,
          1,
          1,
          7,
          3,
          7
        ],
        [
          8,
          3,
          3,
          0,
          3,
          3,
          0,
          8
        ]
      ],
      "output": [
        [
          6,
          9,
          8,
          5,
          5,
          8,
          9,
          6
        ],
        [
          6,
          7,
          9,
          3,
          3,
          9,
          7,
          6
        ],
        [
          3,
          7,
          7,
          9,
          9,
          7,
          7,
          3
        ],
        [
          7,
          5,
          7,
          1,
          1,
          7,
          5,
          7
        ],
        [
          0,
          5,
          8,
          7,
          7,
          8,
          5,
          0
        ],
        [
          4,
          8,
          2,
          7,
          7,
          2,
          8,
          4
        ],
        [
          7,
          3,
          7,
          1,
          1,
          7,
          3,
          7
        ],
        [
          8,
          3,
          3,
          3,
          3,
          3,
          3,
          8
        ]
      ]
    },
    {
      "input": [
        [
          4,
          1,
          2,
          0,
          2,
          1,
          4
        ],
        [
          3,
          6,
          1,
          0,
          1,
          6,
          3
        ],
        [
          5,
          2,
          7,
          0,
          7,
          2,
          5
        ],
        [
          9,
          1,
          8,
          0,
          8,
          1,
          9
        ],
        [
          9,
          5,
          9,
          0,
          9,
          5,
          9
        ],
        [
          9,
          8,
          8,
          0,
          8,
          8,
          9
        ],
        [
          0,
          6,
          7,
          0,
          7,
          6,
          9
        ]
      ],
      "output": [
        [
          4,
          1,
          2,
          0,
          2,
          1,
          4
        ],
        [
          3,
          6,
          1,
          0,
          1,
          6,
          3
        ],
        [
          5,
          2,
          7,
          0,
          7,
          2,
          5
        ],
        [
          9,
          1,
          8,
          0,
          8,
          1,
          9
        ],
        [
          9,
          5,
          9,
          0,
          9,
          5,
          9
        ],
        [
          9,
          8,
          8,
          0,
          8,
          8,
          9
        ],
        [
          9,
          6,
          7,
          0,
          7,
          6,
          9
        ]
      ]
    },
    {
      "input": [
        [
          9,
          4,
          4,
          2,
          0,
          0,
          4,
          4,
          9
        ],
        [
          3,
          1,
          7,
          8,
          0,
          8,
          0,
          1,
          0
        ],
        [
          0,
          7,
          5,
          6,
          0,
          6,
          5,
          7,
          6
        ],
        [
          0,
          8,
          4,
          7,
          0,
          7,
          0,
          8,
          1
        ],
        [
          0,
          8,
          0,
          0,
          0,
          1,
          1,
          0,
          0
        ],
        [
          9,
          3,
          7,
          5,
          0,
          0,
          7,
          3,
          9
        ],
        [
          2,
          4,
          6,
          8,
          0,
          8,
          6,
          0,
          2
        ]
      ],
      "output": [
        [
          9,
          4,
          4,
          2,
          0,
          2,
          4,
          4,
          9
        ],
        [
          3,
          1,
          7,
          8,
          0,
          8,
          7,
          1,
          3
        ],
        [
          6,
          7,
          5,
          6,
          0,
          6,
          5,
          7,
          6
        ],
        [
          1,
          8,
          4,
          7,
          0,
          7,
          4,
          8,
          1
        ],
        [
          0,
          8,
          1,
          1,
          0,
          1,
          1,
          8,
          0
        ],
        [
          9,
          3,
          7,
          5,
          0,
          5,
          7,
          3,
          9
        ],
        [
          2,
          4,
          6,
          8,
          0,
          8,
          6,
          4,
          2
        ]
      ]
    },
    {
      "input": [
        [
          6,
          0,
          3,
          0,
          0,
          0,
          3,
          5,
          6
        ],
        [
          9,
          5,
          9,
          1,
          0,
          0,
          9,
          0,
          9
        ],
        [
          6,
          0,
          0,
          5,
          0,
          5,
          6,
          0,
          6
        ],
        [
          0,
          9,
          9,
          7,
          0,
          7,
          0,
          9,
          6
        ],
        [
          6,
          6,
          6,
          8,
          0,
          8,
          0,
          6,
          6
        ],
        [
          9,
          4,
          1,
          7,
          0,
          7,
          1,
          4,
          9
        ],
        [
          7,
          6,
          5,
          1,
          0,
          1,
          5,
          6,
          7
        ],
        [
          2,
          6,
          0,
          2,
          0,
          2,
          0,
          0,
          2
        ],
        [
          8,
          7,
          1,
          0,
          0,
          7,
          0,
          7,
          8
        ]
      ],
      "output": [
        [
          6,
          5,
          3,
          0,
          0,
          0,
          3,
          5,
          6
        ],
        [
          9,
          5,
          9,
          1,
          0,
          1,
          9,
          5,
          9
        ],
        [
          6,
          0,
          6,
          5,
          0,
          5,
          6,
          0,
          6
        ],
        [
          6,
          9,
          9,
          7,
          0,
          7,
          9,
          9,
          6
        ],
        [
          6,
          6,
          6,
          8,
          0,
          8,
          6,
          6,
          6
        ],
        [
          9,
          4,
          1,
          7,
          0,
          7,
          1,
          4,
          9
        ],
        [
          7,
          6,
          5,
          1,
          0,
          1,
          5,
          6,
          7
        ],
        [
          2,
          6,
          0,
          2,
          0,
          2,
          0,
          6,
          2
        ],
        [
          8,
          7,
          1,
          7,
          0,
          7,
          1,
          7,
          8
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\ndef main(input_grid):\n    # Get the grid dimensions\n    n, m = input_grid.shape\n\n    # Create the output grid by making a copy of the input grid\n    output_grid = np.copy(input_grid)\n    \n    # Identify the vertical mirrored axis (we will assume it's the central vertical line)\n    mirrored_axis = m // 2  # This works for both even and odd width grids\n    \n    for i in range(n):\n        for j in range(mirrored_axis):\n            # Mirrored index in same row\n            mirrored_j = m - 1 - j\n            \n            # Fill in occluded pixels using mirrored symmetry\n            if output_grid[i, j] == Color.BLACK:\n                output_grid[i, j] = output_grid[i, mirrored_j]\n            elif output_grid[i, mirrored_j] == Color.BLACK:\n                output_grid[i, mirrored_j] = output_grid[i, j]\n\n    return output_grid\n\ndef generate_input():\n    # Randomly generate grid size\n    n = np.random.randint(5, 10)\n    m = np.random.randint(5, 10)\n    \n    # Create an empty grid with all black pixels\n    grid = np.full((n, m), Color.BLACK)\n    \n    # Choose a random color palette\n    color_palette = list(Color.NOT_BLACK)\n    \n    # Create a mirrored sprite and place it in the grid\n    mid_point = m // 2\n    for i in range(n):\n        for j in range(mid_point):\n            color = np.random.choice(color_palette)\n            grid[i, j] = color\n            grid[i, m - 1 - j] = color\n\n    # Randomly occlude a few pixels\n    num_occlusions = np.random.randint(1, (n * m) // 3)\n    for _ in range(num_occlusions):\n        x = np.random.randint(0, n)\n        y = np.random.randint(0, m)\n        grid[x, y] = Color.BLACK\n\n    return grid"
}