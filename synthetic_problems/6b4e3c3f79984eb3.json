{
  "uid": "6b4e3c3f79984eb3",
  "annotations": {
    "example": "good",
    "code": "good"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng0_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          2,
          0,
          2,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          5
        ],
        [
          0,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8
        ],
        [
          0,
          2,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          9
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          0,
          1,
          0
        ],
        [
          0,
          8,
          0,
          9,
          0,
          0,
          0,
          4,
          0,
          9
        ],
        [
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          3
        ],
        [
          4,
          0,
          3,
          0,
          2,
          0,
          0,
          0,
          0,
          7
        ],
        [
          0,
          7,
          6,
          0,
          0,
          0,
          2,
          4,
          0,
          0
        ],
        [
          0,
          0,
          7,
          0,
          5,
          6,
          0,
          8,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          2,
          2
        ],
        [
          0,
          0,
          4,
          5
        ],
        [
          0,
          5,
          8,
          8
        ],
        [
          0,
          2,
          1,
          9
        ],
        [
          0,
          0,
          8,
          1
        ],
        [
          8,
          9,
          4,
          9
        ],
        [
          0,
          0,
          8,
          3
        ],
        [
          4,
          3,
          2,
          7
        ],
        [
          7,
          6,
          2,
          4
        ],
        [
          7,
          5,
          6,
          8
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          5,
          0
        ],
        [
          9,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          6,
          0,
          0,
          0,
          0,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          9,
          8
        ],
        [
          0,
          0,
          0
        ],
        [
          0,
          0,
          3
        ],
        [
          0,
          0,
          0
        ],
        [
          0,
          0,
          5
        ],
        [
          9,
          5,
          3
        ],
        [
          0,
          0,
          0
        ],
        [
          0,
          6,
          4
        ],
        [
          0,
          0,
          8
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          6,
          0,
          0,
          0,
          2,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          8,
          0,
          0,
          2,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          9,
          0,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          0,
          0,
          4
        ],
        [
          0,
          3,
          0,
          0,
          6,
          0,
          2,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          1
        ],
        [
          0,
          0,
          0
        ],
        [
          0,
          6,
          2
        ],
        [
          0,
          0,
          0
        ],
        [
          0,
          8,
          2
        ],
        [
          0,
          9,
          4
        ],
        [
          0,
          0,
          6
        ],
        [
          0,
          0,
          2
        ],
        [
          0,
          9,
          4
        ],
        [
          3,
          6,
          2
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          8,
          0,
          9,
          7,
          7,
          0
        ],
        [
          0,
          0,
          0,
          5,
          0,
          9,
          0,
          0,
          0,
          0
        ],
        [
          6,
          6,
          0,
          0,
          4,
          9,
          0,
          0,
          0,
          8
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          7,
          0,
          4,
          0
        ],
        [
          3,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          6,
          1,
          6,
          0,
          0,
          0,
          0,
          0
        ],
        [
          9,
          0,
          3,
          0,
          0,
          0,
          0,
          0,
          8,
          7
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          2
        ],
        [
          0,
          9,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0
        ]
      ],
      "output": [
        [
          0,
          8,
          9,
          7,
          7
        ],
        [
          0,
          0,
          0,
          5,
          9
        ],
        [
          6,
          6,
          4,
          9,
          8
        ],
        [
          0,
          0,
          0,
          7,
          4
        ],
        [
          0,
          0,
          0,
          3,
          5
        ],
        [
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          6,
          1,
          6
        ],
        [
          0,
          9,
          3,
          8,
          7
        ],
        [
          0,
          0,
          0,
          1,
          2
        ],
        [
          0,
          0,
          9,
          1,
          1
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# color, falling, cropping\n\n# description:\n# In the input, you should see colored pixels and solid color blocks acting as obstacles.\n# To create the output, make each pixel fall downward until it hits an obstacle or the bottom.\n# Crop the resulting grid to the smallest bounding box that contains all non-background pixels.\n\ndef main(input_grid):\n    output_grid = np.copy(input_grid)\n\n    width, height = output_grid.shape\n\n    # Find the color of the background, which is the most common color\n    background_color = np.argmax(np.bincount(output_grid.flatten()))\n\n    # Now make all the other colors fall down\n    for x in range(width):\n        for y in range(height-2, -1, -1):\n            if output_grid[x, y] != background_color:\n                # Make it fall to the bottom or until it hits an obstacle\n                for k in range(y+1, height):\n                    if output_grid[x, k] != background_color: \n                        output_grid[x, k-1] = output_grid[x, y]\n                        if k-1 != y:\n                            output_grid[x, y] = background_color\n                        break\n                else:\n                    output_grid[x, height-1] = output_grid[x, y]\n                    output_grid[x, y] = background_color\n\n    return crop(output_grid, background=background_color)\n\n\ndef generate_input():\n    width, height = 10, 10\n    input_grid = np.zeros((width, height), dtype=int)\n\n    # Add some solid color blocks acting as obstacles\n    num_obstacles = random.choice([5, 10, 15])\n    for _ in range(num_obstacles):\n        x = random.randint(0, width-1)\n        y = random.randint(5, height-1)  # ensuring obstacles are closer to the bottom\n        input_grid[x, y] = random.choice(Color.NOT_BLACK)\n\n    # Add colored pixels in random positions above obstacles\n    num_pixels = random.choice([5, 10, 15, 20])\n    for _ in range(num_pixels):\n        while True:\n            x = random.randint(0, width-1)\n            y = random.randint(0, height-6)  # placed above possible obstacles\n            if input_grid[x, y] == 0:\n                input_grid[x, y] = random.choice(Color.NOT_BLACK)\n                break\n\n    return input_grid"
}