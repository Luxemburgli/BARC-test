{
  "uid": "daf0632a8885b5c3",
  "annotations": {
    "example": "good",
    "code": "ok"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng1_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          8,
          8,
          0,
          0,
          0
        ],
        [
          0,
          0,
          5,
          4,
          4,
          5,
          0,
          0
        ],
        [
          9,
          5,
          5,
          2,
          2,
          5,
          5,
          9
        ],
        [
          9,
          5,
          5,
          2,
          2,
          5,
          5,
          9
        ],
        [
          0,
          0,
          5,
          4,
          4,
          5,
          0,
          0
        ],
        [
          0,
          0,
          0,
          8,
          8,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8,
          8,
          8,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8,
          8,
          8,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          5,
          5,
          4,
          4,
          4,
          4,
          5,
          5,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          5,
          5,
          4,
          4,
          4,
          4,
          5,
          5,
          0,
          0,
          0,
          0
        ],
        [
          9,
          9,
          5,
          5,
          5,
          5,
          2,
          2,
          2,
          2,
          5,
          5,
          5,
          5,
          9,
          9
        ],
        [
          9,
          9,
          5,
          5,
          5,
          5,
          2,
          2,
          2,
          2,
          5,
          5,
          5,
          5,
          9,
          9
        ],
        [
          9,
          9,
          5,
          5,
          5,
          5,
          2,
          2,
          2,
          2,
          5,
          5,
          5,
          5,
          9,
          9
        ],
        [
          9,
          9,
          5,
          5,
          5,
          5,
          2,
          2,
          2,
          2,
          5,
          5,
          5,
          5,
          9,
          9
        ],
        [
          0,
          0,
          0,
          0,
          5,
          5,
          4,
          4,
          4,
          4,
          5,
          5,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          5,
          5,
          4,
          4,
          4,
          4,
          5,
          5,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8,
          8,
          8,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8,
          8,
          8,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          1,
          1,
          8,
          8,
          1,
          1,
          0,
          0
        ],
        [
          0,
          0,
          5,
          8,
          8,
          8,
          8,
          5,
          0,
          0
        ],
        [
          0,
          0,
          0,
          8,
          0,
          0,
          8,
          0,
          0,
          0
        ],
        [
          1,
          5,
          3,
          3,
          2,
          2,
          3,
          3,
          5,
          1
        ],
        [
          1,
          0,
          3,
          1,
          4,
          4,
          1,
          3,
          0,
          1
        ],
        [
          1,
          0,
          3,
          1,
          4,
          4,
          1,
          3,
          0,
          1
        ],
        [
          1,
          5,
          3,
          3,
          2,
          2,
          3,
          3,
          5,
          1
        ],
        [
          0,
          0,
          0,
          8,
          0,
          0,
          8,
          0,
          0,
          0
        ],
        [
          0,
          0,
          5,
          8,
          8,
          8,
          8,
          5,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          8,
          8,
          1,
          1,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          8,
          8,
          8,
          8,
          1,
          1,
          1,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          8,
          8,
          8,
          8,
          1,
          1,
          1,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          5,
          5,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          5,
          5,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          5,
          5,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          5,
          5,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8,
          0,
          0,
          0,
          0,
          8,
          8,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8,
          0,
          0,
          0,
          0,
          8,
          8,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          5,
          5,
          3,
          3,
          3,
          3,
          2,
          2,
          2,
          2,
          3,
          3,
          3,
          3,
          5,
          5,
          1,
          1
        ],
        [
          1,
          1,
          5,
          5,
          3,
          3,
          3,
          3,
          2,
          2,
          2,
          2,
          3,
          3,
          3,
          3,
          5,
          5,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          3,
          3,
          1,
          1,
          4,
          4,
          4,
          4,
          1,
          1,
          3,
          3,
          0,
          0,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          3,
          3,
          1,
          1,
          4,
          4,
          4,
          4,
          1,
          1,
          3,
          3,
          0,
          0,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          3,
          3,
          1,
          1,
          4,
          4,
          4,
          4,
          1,
          1,
          3,
          3,
          0,
          0,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          3,
          3,
          1,
          1,
          4,
          4,
          4,
          4,
          1,
          1,
          3,
          3,
          0,
          0,
          1,
          1
        ],
        [
          1,
          1,
          5,
          5,
          3,
          3,
          3,
          3,
          2,
          2,
          2,
          2,
          3,
          3,
          3,
          3,
          5,
          5,
          1,
          1
        ],
        [
          1,
          1,
          5,
          5,
          3,
          3,
          3,
          3,
          2,
          2,
          2,
          2,
          3,
          3,
          3,
          3,
          5,
          5,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8,
          0,
          0,
          0,
          0,
          8,
          8,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8,
          0,
          0,
          0,
          0,
          8,
          8,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          5,
          5,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          5,
          5,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          5,
          5,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          5,
          5,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          8,
          8,
          8,
          8,
          1,
          1,
          1,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          8,
          8,
          8,
          8,
          1,
          1,
          1,
          1,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          3,
          8,
          3,
          0
        ],
        [
          0,
          9,
          8,
          9,
          0
        ],
        [
          4,
          4,
          8,
          4,
          4
        ],
        [
          4,
          4,
          8,
          4,
          4
        ],
        [
          4,
          4,
          8,
          4,
          4
        ],
        [
          4,
          4,
          8,
          4,
          4
        ],
        [
          0,
          9,
          8,
          9,
          0
        ],
        [
          0,
          3,
          8,
          3,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          3,
          3,
          8,
          8,
          3,
          3,
          0,
          0
        ],
        [
          0,
          0,
          3,
          3,
          8,
          8,
          3,
          3,
          0,
          0
        ],
        [
          0,
          0,
          9,
          9,
          8,
          8,
          9,
          9,
          0,
          0
        ],
        [
          0,
          0,
          9,
          9,
          8,
          8,
          9,
          9,
          0,
          0
        ],
        [
          4,
          4,
          4,
          4,
          8,
          8,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          8,
          8,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          8,
          8,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          8,
          8,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          8,
          8,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          8,
          8,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          8,
          8,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          8,
          8,
          4,
          4,
          4,
          4
        ],
        [
          0,
          0,
          9,
          9,
          8,
          8,
          9,
          9,
          0,
          0
        ],
        [
          0,
          0,
          9,
          9,
          8,
          8,
          9,
          9,
          0,
          0
        ],
        [
          0,
          0,
          3,
          3,
          8,
          8,
          3,
          3,
          0,
          0
        ],
        [
          0,
          0,
          3,
          3,
          8,
          8,
          3,
          3,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          3,
          3,
          3,
          8,
          8,
          8,
          4,
          4,
          5
        ],
        [
          0,
          8,
          7,
          0,
          1,
          1,
          0,
          1,
          9
        ],
        [
          0,
          8,
          7,
          0,
          1,
          1,
          0,
          1,
          9
        ],
        [
          3,
          3,
          3,
          8,
          8,
          8,
          4,
          4,
          5
        ],
        [
          3,
          3,
          3,
          8,
          8,
          8,
          4,
          4,
          5
        ],
        [
          0,
          8,
          7,
          0,
          1,
          1,
          0,
          1,
          9
        ],
        [
          0,
          8,
          7,
          0,
          1,
          1,
          0,
          1,
          9
        ],
        [
          3,
          3,
          3,
          8,
          8,
          8,
          4,
          4,
          5
        ]
      ],
      "output": [
        [
          3,
          3,
          3,
          3,
          3,
          3,
          8,
          8,
          8,
          8,
          8,
          8,
          4,
          4,
          4,
          4,
          5,
          5
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          8,
          8,
          8,
          8,
          8,
          8,
          4,
          4,
          4,
          4,
          5,
          5
        ],
        [
          0,
          0,
          8,
          8,
          7,
          7,
          0,
          0,
          1,
          1,
          1,
          1,
          0,
          0,
          1,
          1,
          9,
          9
        ],
        [
          0,
          0,
          8,
          8,
          7,
          7,
          0,
          0,
          1,
          1,
          1,
          1,
          0,
          0,
          1,
          1,
          9,
          9
        ],
        [
          0,
          0,
          8,
          8,
          7,
          7,
          0,
          0,
          1,
          1,
          1,
          1,
          0,
          0,
          1,
          1,
          9,
          9
        ],
        [
          0,
          0,
          8,
          8,
          7,
          7,
          0,
          0,
          1,
          1,
          1,
          1,
          0,
          0,
          1,
          1,
          9,
          9
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          8,
          8,
          8,
          8,
          8,
          8,
          4,
          4,
          4,
          4,
          5,
          5
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          8,
          8,
          8,
          8,
          8,
          8,
          4,
          4,
          4,
          4,
          5,
          5
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          8,
          8,
          8,
          8,
          8,
          8,
          4,
          4,
          4,
          4,
          5,
          5
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          8,
          8,
          8,
          8,
          8,
          8,
          4,
          4,
          4,
          4,
          5,
          5
        ],
        [
          0,
          0,
          8,
          8,
          7,
          7,
          0,
          0,
          1,
          1,
          1,
          1,
          0,
          0,
          1,
          1,
          9,
          9
        ],
        [
          0,
          0,
          8,
          8,
          7,
          7,
          0,
          0,
          1,
          1,
          1,
          1,
          0,
          0,
          1,
          1,
          9,
          9
        ],
        [
          0,
          0,
          8,
          8,
          7,
          7,
          0,
          0,
          1,
          1,
          1,
          1,
          0,
          0,
          1,
          1,
          9,
          9
        ],
        [
          0,
          0,
          8,
          8,
          7,
          7,
          0,
          0,
          1,
          1,
          1,
          1,
          0,
          0,
          1,
          1,
          9,
          9
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          8,
          8,
          8,
          8,
          8,
          8,
          4,
          4,
          4,
          4,
          5,
          5
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          8,
          8,
          8,
          8,
          8,
          8,
          4,
          4,
          4,
          4,
          5,
          5
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nimport random\nfrom typing import *\n\n# concepts:\n# reflection, symmetry detection, scaling\n\n# description:\n# In the input, you will see a grid with a pattern reflected around a central axis. \n# Your task is to identify the axis of reflection and scale the pattern by a factor of 2 along both dimensions, maintaining the reflection around the same axis.\n\ndef main(input_grid):\n    output_grid = np.copy(input_grid)  # Start with a copy of the input grid\n\n    # Identify the axis of reflection, which can be either vertical or horizontal\n    height, width = input_grid.shape\n    vertical_reflection = np.array_equal(input_grid[:, :width//2], np.flip(input_grid[:, width//2:], 1))\n    horizontal_reflection = np.array_equal(input_grid[:height//2, :], np.flip(input_grid[height//2:, :], 0))\n\n    if vertical_reflection:\n        # Extract the left half and scale it\n        left_half = input_grid[:, :width//2]\n        scaled_left_half = np.kron(left_half, np.ones((2,2), dtype=int))  # Scale by a factor of 2\n        \n        # Create the new reflected part\n        scaled_right_half = np.flip(scaled_left_half, 1)\n\n        # Combine them together with scaling\n        output_grid = np.zeros((height*2, width*2), dtype=int)\n        output_grid[:height*2, :width*2//2] = scaled_left_half\n        output_grid[:height*2, width*2//2:] = scaled_right_half\n\n    elif horizontal_reflection:\n        # Extract the top half and scale it\n        top_half = input_grid[:height//2, :]\n        scaled_top_half = np.kron(top_half, np.ones((2,2), dtype=int))\n        \n        # Create the new reflected part\n        scaled_bottom_half = np.flip(scaled_top_half, 0)\n\n        # Combine them together with scaling\n        output_grid = np.zeros((height*2, width*2), dtype=int)\n        output_grid[:height*2//2, :width*2] = scaled_top_half\n        output_grid[height*2//2:, :width*2] = scaled_bottom_half\n\n    return output_grid\n\ndef generate_input():\n    # Create a random size for grid within range 5 to 10 for both dimensions\n    height = random.randint(5, 10)\n    width = random.randint(5, 10)\n    \n    # Create a grid filled with a base color (black)\n    grid = np.zeros((height, width), dtype=int)\n    \n    # Random select horizontal_reflection or vertical_reflection\n    reflection_type = random.choice([\"vertical\", \"horizontal\"])\n    \n    # Create a random pattern on half of the grid\n    color_palette = list(Color.NOT_BLACK)\n    pattern_half = random_sprite(height//2 if reflection_type == \"horizontal\" else height, width//2 if reflection_type == \"vertical\" else width, color_palette=color_palette)\n    \n    if reflection_type == \"vertical\":\n        # Fill in the left half with the pattern\n        grid[:, :width//2] = pattern_half\n        \n        # Reflect to the right half\n        grid[:, width//2:] = np.flip(pattern_half, 1)\n    \n    elif reflection_type == \"horizontal\":\n        # Fill in the top half with the pattern\n        grid[:height//2, :] = pattern_half\n        \n        # Reflect to the bottom half\n        grid[height//2:, :] = np.flip(pattern_half, 0)\n\n    return grid"
}