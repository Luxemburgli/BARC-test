{
  "uid": "d2be1979f630681e",
  "annotations": {
    "example": "bad",
    "code": "ok"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_anthropic_claude-3.5-sonnet:beta_temp1.00_maxtokens2048_rng1_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          2,
          0,
          2,
          0,
          2,
          2,
          0,
          2,
          5,
          0,
          0,
          1,
          1,
          1,
          0,
          0,
          1
        ],
        [
          2,
          2,
          2,
          2,
          0,
          2,
          0,
          2,
          5,
          0,
          1,
          1,
          1,
          0,
          1,
          0,
          1
        ],
        [
          2,
          0,
          0,
          0,
          2,
          2,
          2,
          2,
          5,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          2,
          2,
          2,
          0,
          2,
          2,
          2,
          5,
          0,
          1,
          1,
          1,
          0,
          1,
          1,
          0
        ],
        [
          2,
          0,
          2,
          0,
          2,
          0,
          2,
          2,
          5,
          0,
          1,
          1,
          1,
          0,
          0,
          1,
          0
        ],
        [
          2,
          0,
          2,
          2,
          2,
          2,
          0,
          0,
          5,
          1,
          0,
          0,
          1,
          0,
          1,
          0,
          1
        ],
        [
          2,
          0,
          0,
          2,
          2,
          0,
          0,
          2,
          5,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          1
        ],
        [
          2,
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          1,
          0,
          1,
          1,
          0,
          1
        ],
        [
          0,
          0,
          2,
          2,
          2,
          2,
          2,
          0,
          5,
          1,
          1,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          2,
          0,
          2,
          5,
          1,
          1,
          0,
          0,
          0,
          1,
          1,
          0
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          0,
          2,
          5,
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          0
        ],
        [
          2,
          0,
          2,
          0,
          0,
          2,
          0,
          0,
          5,
          0,
          0,
          0,
          1,
          0,
          1,
          1,
          1
        ]
      ],
      "output": [
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          0
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ]
      ]
    },
    {
      "input": [
        [
          2,
          0,
          0,
          0,
          0,
          2,
          2,
          5,
          1,
          1,
          1,
          1,
          1,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          2,
          5,
          1,
          0,
          1,
          1,
          1,
          1,
          1
        ],
        [
          2,
          0,
          0,
          2,
          2,
          2,
          0,
          5,
          0,
          0,
          0,
          0,
          1,
          1,
          1
        ],
        [
          2,
          0,
          2,
          2,
          2,
          0,
          0,
          5,
          1,
          0,
          1,
          0,
          0,
          1,
          1
        ],
        [
          2,
          0,
          2,
          2,
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          1,
          0,
          1,
          0
        ],
        [
          0,
          2,
          0,
          2,
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          1,
          1,
          0,
          0
        ],
        [
          2,
          0,
          2,
          0,
          2,
          2,
          0,
          5,
          0,
          1,
          0,
          1,
          1,
          0,
          1
        ],
        [
          2,
          0,
          0,
          2,
          2,
          0,
          2,
          5,
          1,
          1,
          1,
          1,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          2,
          2,
          0,
          2,
          5,
          0,
          0,
          0,
          1,
          0,
          1,
          0
        ],
        [
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          1,
          0,
          0,
          0,
          1
        ]
      ],
      "output": [
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ]
      ]
    },
    {
      "input": [
        [
          2,
          0,
          0,
          0,
          0,
          2,
          2,
          5,
          1,
          0,
          1,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          2,
          0,
          2,
          0,
          2,
          5,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          2,
          2,
          2,
          0,
          2,
          2,
          2,
          5,
          1,
          0,
          1,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          2,
          0,
          5,
          0,
          0,
          0,
          1,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          2,
          2,
          2,
          0,
          5,
          1,
          1,
          1,
          0,
          0,
          0,
          1
        ],
        [
          2,
          2,
          0,
          2,
          2,
          0,
          2,
          5,
          0,
          1,
          1,
          0,
          1,
          0,
          1
        ],
        [
          0,
          0,
          0,
          2,
          2,
          2,
          2,
          5,
          0,
          1,
          0,
          1,
          1,
          1,
          0
        ],
        [
          0,
          2,
          0,
          2,
          2,
          0,
          0,
          5,
          1,
          0,
          0,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          2,
          2,
          2,
          2,
          2,
          5,
          0,
          0,
          1,
          1,
          1,
          0,
          1
        ],
        [
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          1,
          0,
          0,
          1,
          1
        ],
        [
          2,
          2,
          2,
          2,
          2,
          0,
          2,
          5,
          0,
          0,
          1,
          0,
          0,
          1,
          0
        ]
      ],
      "output": [
        [
          4,
          4,
          4,
          4,
          4,
          4,
          0
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          0,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ]
      ]
    },
    {
      "input": [
        [
          0,
          2,
          2,
          0,
          2,
          0,
          2,
          0,
          0,
          5,
          0,
          0,
          1,
          0,
          1,
          1,
          1,
          1,
          0
        ],
        [
          2,
          2,
          2,
          0,
          0,
          0,
          0,
          2,
          0,
          5,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          1
        ],
        [
          2,
          0,
          0,
          2,
          0,
          0,
          0,
          2,
          0,
          5,
          1,
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0
        ],
        [
          2,
          2,
          0,
          2,
          2,
          0,
          2,
          2,
          0,
          5,
          1,
          0,
          1,
          1,
          0,
          1,
          1,
          1,
          1
        ],
        [
          2,
          0,
          2,
          0,
          0,
          0,
          2,
          2,
          0,
          5,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          2,
          0,
          5,
          1,
          1,
          1,
          0,
          1,
          1,
          0,
          0,
          0
        ],
        [
          2,
          2,
          2,
          0,
          0,
          2,
          0,
          2,
          0,
          5,
          1,
          1,
          1,
          1,
          1,
          0,
          1,
          0,
          0
        ],
        [
          2,
          0,
          0,
          2,
          2,
          2,
          0,
          0,
          0,
          5,
          1,
          0,
          1,
          1,
          1,
          0,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          2,
          0,
          0,
          0,
          0,
          2,
          5,
          1,
          0,
          1,
          0,
          0,
          1,
          0,
          1,
          0
        ]
      ],
      "output": [
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ]
      ]
    }
  ],
  "code": "import numpy as np\nfrom typing import *\nfrom common import *\n\n# concepts:\n# boolean logical operations, bitmasks with separator, pixel manipulation, growing\n\n# description:\n# In the input you will see two bitmasks separated by a grey horizontal bar\n# The left bitmask uses red pixels, the right bitmask uses blue pixels\n# To make the output:\n# 1. Perform a logical XOR operation between the two bitmasks\n# 2. For each resulting 'true' pixel, grow it by 1 pixel in all 8 directions (if possible)\n# 3. Color the resulting pixels yellow\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    # Find the grey horizontal bar\n    for y_bar in range(input_grid.shape[1]):\n        if np.all(input_grid[:, y_bar] == Color.GREY):\n            break\n\n    top_mask = input_grid[:, :y_bar]\n    bottom_mask = input_grid[:, y_bar+1:]\n\n    # Perform XOR operation\n    xor_result = np.logical_xor(top_mask == Color.RED, bottom_mask == Color.BLUE)\n\n    # Create output grid\n    output_grid = np.full_like(top_mask, Color.BLACK)\n\n    # Grow and color the XOR result\n    height, width = xor_result.shape\n    for x in range(height):\n        for y in range(width):\n            if xor_result[x, y]:\n                for dx in [-1, 0, 1]:\n                    for dy in [-1, 0, 1]:\n                        nx, ny = x + dx, y + dy\n                        if 0 <= nx < height and 0 <= ny < width:\n                            output_grid[nx, ny] = Color.YELLOW\n\n    return output_grid\n\ndef generate_input() -> np.ndarray:\n    # create a pair of equally sized bitmasks\n    width, height = np.random.randint(5, 15), np.random.randint(5, 15)\n\n    grid1 = np.zeros((height, width), dtype=int)\n    grid2 = np.zeros((height, width), dtype=int)\n\n    for x in range(height):\n        for y in range(width):\n            grid1[x, y] = np.random.choice([Color.RED, Color.BLACK])\n            grid2[x, y] = np.random.choice([Color.BLUE, Color.BLACK])\n    \n    # create a grey horizontal bar\n    bar = np.zeros((height, 1), dtype=int)\n    bar[:, 0] = Color.GREY\n\n    grid = np.concatenate((grid1, bar, grid2), axis=1)\n\n    return grid"
}