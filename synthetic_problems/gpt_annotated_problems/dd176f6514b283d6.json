{
  "uid": "dd176f6514b283d6",
  "annotations": {
    "example": "ok",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_anthropic_claude-3.5-sonnet:beta_temp1.00_maxtokens2048_rng1_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          2,
          0,
          0
        ],
        [
          1,
          1,
          1,
          0,
          4,
          0,
          3,
          0,
          3,
          3,
          4,
          0,
          2,
          2,
          0
        ],
        [
          1,
          1,
          1,
          0,
          4,
          3,
          3,
          3,
          3,
          3,
          4,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          3,
          3,
          3,
          3,
          4,
          0,
          0,
          1,
          0
        ],
        [
          2,
          2,
          0,
          0,
          4,
          0,
          0,
          3,
          0,
          0,
          4,
          0,
          1,
          1,
          0
        ],
        [
          2,
          2,
          2,
          2,
          4,
          0,
          3,
          3,
          3,
          0,
          4,
          0,
          1,
          1,
          0
        ],
        [
          2,
          2,
          2,
          2,
          4,
          3,
          3,
          3,
          0,
          0,
          4,
          0,
          1,
          0,
          0
        ],
        [
          2,
          2,
          2,
          2,
          4,
          0,
          3,
          0,
          0,
          0,
          4,
          0,
          1,
          1,
          0
        ],
        [
          2,
          2,
          0,
          0,
          4,
          0,
          0,
          0,
          3,
          3,
          4,
          0,
          1,
          0,
          0
        ],
        [
          2,
          2,
          0,
          0,
          4,
          0,
          0,
          0,
          3,
          3,
          4,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          7,
          0,
          7,
          7
        ],
        [
          7,
          7,
          7,
          7,
          7
        ],
        [
          0,
          7,
          7,
          7,
          7
        ],
        [
          0,
          0,
          7,
          0,
          0
        ],
        [
          0,
          7,
          7,
          7,
          0
        ],
        [
          7,
          7,
          7,
          0,
          0
        ],
        [
          0,
          7,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          3,
          3
        ],
        [
          0,
          0,
          0,
          3,
          3
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          2,
          2,
          2
        ],
        [
          0,
          0,
          2,
          0,
          4,
          0,
          3,
          3,
          0,
          0,
          4,
          0,
          0,
          2,
          2
        ],
        [
          0,
          2,
          2,
          2,
          4,
          0,
          3,
          0,
          0,
          0,
          4,
          1,
          1,
          0,
          2
        ],
        [
          1,
          1,
          2,
          0,
          4,
          0,
          3,
          3,
          0,
          0,
          4,
          1,
          1,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          4,
          3,
          3,
          0,
          0,
          0,
          4,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          4,
          3,
          3,
          3,
          0,
          0,
          4,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          3,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          3,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          3,
          0,
          0,
          4,
          2,
          2,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          3,
          3,
          0,
          0,
          4,
          2,
          2,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          7,
          7,
          0,
          0
        ],
        [
          0,
          7,
          0,
          0,
          0
        ],
        [
          0,
          7,
          7,
          0,
          0
        ],
        [
          7,
          7,
          0,
          0,
          0
        ],
        [
          7,
          7,
          7,
          0,
          0
        ],
        [
          7,
          0,
          0,
          0,
          0
        ],
        [
          7,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          3,
          0,
          0
        ],
        [
          0,
          3,
          3,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          2,
          2,
          2,
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          4,
          2,
          2,
          0,
          0
        ],
        [
          2,
          2,
          2,
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          2,
          0,
          0
        ],
        [
          1,
          1,
          1,
          0,
          4,
          0,
          3,
          3,
          0,
          0,
          4,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          0,
          4,
          0,
          3,
          0,
          0,
          0,
          4,
          0,
          2,
          2,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          3,
          3,
          0,
          0,
          4,
          0,
          0,
          2,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          3,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          4,
          3,
          3,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          1,
          4,
          3,
          3,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          4,
          3,
          3,
          3,
          0,
          0,
          4,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          1,
          1
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          7,
          7,
          0,
          0
        ],
        [
          0,
          7,
          0,
          0,
          0
        ],
        [
          0,
          7,
          7,
          0,
          0
        ],
        [
          7,
          0,
          0,
          0,
          0
        ],
        [
          7,
          7,
          0,
          0,
          0
        ],
        [
          7,
          7,
          0,
          0,
          0
        ],
        [
          7,
          7,
          7,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          3,
          3,
          3,
          4,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          3,
          3,
          3,
          4,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          4,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          4,
          0,
          3,
          0,
          0,
          0,
          4,
          0,
          2,
          2,
          0
        ],
        [
          0,
          2,
          2,
          0,
          4,
          3,
          3,
          3,
          0,
          0,
          4,
          0,
          2,
          2,
          0
        ],
        [
          0,
          2,
          0,
          0,
          4,
          0,
          3,
          0,
          0,
          0,
          4,
          0,
          2,
          2,
          0
        ],
        [
          0,
          2,
          0,
          0,
          4,
          0,
          0,
          0,
          3,
          3,
          4,
          0,
          2,
          2,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          3,
          4,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          3,
          4,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          3,
          3,
          3
        ],
        [
          0,
          0,
          3,
          3,
          3
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          7,
          0,
          0,
          0
        ],
        [
          7,
          7,
          7,
          0,
          0
        ],
        [
          0,
          7,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          3,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          0
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# bitmasks with separator, boolean logical operations, objects, color\n\n# description:\n# In the input, you will see a grid divided into three sections by two horizontal yellow lines. \n# The top and bottom sections contain red and blue objects on a black background.\n# The middle section contains green objects on a black background.\n# To make the output:\n# 1. Overlay the top and bottom sections using the AND operation (both must be colored).\n# 2. For each green object in the middle section:\n#    - If it touches (4-connected) any pixel from the AND result, color it orange.\n#    - Otherwise, leave it green.\n# 3. The final output should only contain the modified middle section.\n\ndef main(input_grid):\n    width, height = input_grid.shape\n    \n    # Find the yellow horizontal lines\n    yellow_lines = [y for y in range(height) if np.all(input_grid[:, y] == Color.YELLOW)]\n    top_section = input_grid[:, :yellow_lines[0]]\n    middle_section = input_grid[:, yellow_lines[0]+1:yellow_lines[1]]\n    bottom_section = input_grid[:, yellow_lines[1]+1:]\n    \n    # Perform AND operation on top and bottom sections\n    and_result = np.logical_and(\n        np.logical_or(top_section == Color.RED, top_section == Color.BLUE),\n        np.logical_or(bottom_section == Color.RED, bottom_section == Color.BLUE)\n    )\n    \n    # Create output grid (same size as middle section)\n    output_grid = np.copy(middle_section)\n    \n    # Find green objects in the middle section\n    green_objects = find_connected_components(middle_section, background=Color.BLACK)\n    \n    # Check each green object\n    for obj in green_objects:\n        # Create a padded version of the object to check for neighbors\n        padded_obj = np.pad(obj, pad_width=1, mode='constant', constant_values=Color.BLACK)\n        \n        # Check if any pixel of the object touches the AND result\n        touches_and_result = False\n        for x in range(1, padded_obj.shape[0] - 1):\n            for y in range(1, padded_obj.shape[1] - 1):\n                if padded_obj[x, y] == Color.GREEN:\n                    # Check 4-connected neighbors\n                    neighbors = [\n                        (x-1, y), (x+1, y), (x, y-1), (x, y+1)\n                    ]\n                    for nx, ny in neighbors:\n                        if 0 <= nx-1 < and_result.shape[0] and 0 <= ny-1 < and_result.shape[1]:\n                            if and_result[nx-1, ny-1]:\n                                touches_and_result = True\n                                break\n                    if touches_and_result:\n                        break\n            if touches_and_result:\n                break\n        \n        # Color the object orange if it touches the AND result\n        if touches_and_result:\n            output_grid[obj == Color.GREEN] = Color.ORANGE\n    \n    return output_grid\n\ndef generate_input():\n    width = 10\n    height = 15\n    \n    input_grid = np.full((width, height), Color.BLACK)\n    \n    # Create yellow separator lines\n    line1 = np.random.randint(4, 6)\n    line2 = np.random.randint(9, 11)\n    input_grid[:, line1] = Color.YELLOW\n    input_grid[:, line2] = Color.YELLOW\n    \n    # Generate objects for top and bottom sections\n    for section in [input_grid[:, :line1], input_grid[:, line2+1:]]:\n        num_objects = np.random.randint(2, 5)\n        for _ in range(num_objects):\n            color = np.random.choice([Color.RED, Color.BLUE])\n            obj = random_sprite(np.random.randint(2, 4), np.random.randint(2, 4), color_palette=[color])\n            x, y = random_free_location_for_sprite(section, obj)\n            blit_sprite(section, obj, x, y)\n    \n    # Generate green objects for middle section\n    middle_section = input_grid[:, line1+1:line2]\n    num_objects = np.random.randint(3, 6)\n    for _ in range(num_objects):\n        obj = random_sprite(np.random.randint(2, 4), np.random.randint(2, 4), color_palette=[Color.GREEN])\n        x, y = random_free_location_for_sprite(middle_section, obj)\n        blit_sprite(middle_section, obj, x, y)\n    \n    return input_grid"
}