{
  "uid": "8f1281cd3cf9dbfb",
  "annotations": {
    "example": "bad",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_anthropic_claude-3.5-sonnet:beta_temp1.00_maxtokens2048_rng1_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          6,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          9,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          6,
          0,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6
        ],
        [
          9,
          0,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4
        ],
        [
          0,
          9,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          6
        ],
        [
          0,
          4,
          9,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          9,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          9,
          4,
          6,
          4,
          6,
          4
        ],
        [
          4,
          9,
          4,
          9,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          9,
          4,
          6,
          4,
          6,
          4,
          6,
          4,
          9,
          4,
          6,
          4,
          6
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          4,
          0,
          4,
          0,
          4,
          0,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4
        ],
        [
          4,
          0,
          4,
          0,
          4,
          0,
          4,
          0,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9
        ],
        [
          0,
          4,
          0,
          4,
          0,
          4,
          0,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4
        ],
        [
          4,
          0,
          4,
          0,
          4,
          0,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9
        ],
        [
          0,
          4,
          0,
          4,
          0,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4
        ],
        [
          4,
          0,
          4,
          0,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9
        ],
        [
          0,
          4,
          0,
          4,
          9,
          4,
          9,
          4,
          9,
          3,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          3,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          3
        ],
        [
          4,
          0,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          3,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          3,
          9,
          4,
          9,
          4,
          9,
          4,
          9,
          4,
          9
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          9,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          2,
          3,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          2,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          3,
          2,
          3,
          2,
          9,
          2,
          9,
          2,
          9,
          2,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          2,
          3,
          2,
          3,
          2,
          9,
          2,
          9,
          2,
          9,
          2,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          3,
          2,
          3,
          2,
          3,
          2,
          9,
          2,
          9,
          2,
          9,
          2,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          2,
          3,
          2,
          3,
          2,
          3,
          2,
          2,
          3,
          9,
          2,
          9,
          2,
          9,
          2,
          3,
          9,
          9,
          9,
          9,
          9
        ],
        [
          3,
          2,
          3,
          2,
          3,
          2,
          3,
          2,
          2,
          3,
          9,
          2,
          9,
          2,
          9,
          2,
          3,
          9,
          9,
          9,
          9
        ],
        [
          2,
          3,
          2,
          3,
          2,
          3,
          2,
          3,
          2,
          2,
          3,
          9,
          2,
          9,
          2,
          9,
          2,
          3,
          9,
          9,
          9
        ],
        [
          3,
          2,
          3,
          2,
          3,
          2,
          3,
          2,
          3,
          2,
          2,
          3,
          9,
          2,
          9,
          2,
          9,
          2,
          3,
          9,
          9
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          3,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          3
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          3,
          0,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          0,
          0,
          0,
          0,
          0,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          0,
          0,
          0,
          0,
          0,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          0,
          0,
          0,
          3,
          0,
          3,
          0,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# Coloring diagonal pixels, repetition, growing, patterns\n\n# description:\n# Given an input grid of arbitrary size with some colored pixels on it.\n# To produce the output, replicate the input grid 3 times horizontally.\n# For each colored pixel, grow a diagonal line in all four diagonal directions.\n# The diagonal lines should be the same color as the original pixel and should stop when they hit another colored pixel or the edge of the grid.\n\ndef main(input_grid):\n    # Replicate input grid 3 times horizontally to initialize output grid\n    output_grid = np.zeros((input_grid.shape[0], 3 * input_grid.shape[1]), dtype=int)\n    for i in range(3):\n        blit_sprite(output_grid, input_grid, 0, i * input_grid.shape[1])\n\n    # Create diagonal directions\n    diagonal_dx_dy = [(1,1), (-1,1), (1,-1), (-1,-1)]\n\n    # Grow diagonal lines from colored pixels\n    for y in range(output_grid.shape[1]):\n        for x in range(output_grid.shape[0]):\n            if output_grid[x,y] != Color.BLACK:\n                color = output_grid[x,y]\n                for dx, dy in diagonal_dx_dy:\n                    cx, cy = x, y\n                    while True:\n                        cx, cy = cx + dx, cy + dy\n                        if cx < 0 or cx >= output_grid.shape[0] or cy < 0 or cy >= output_grid.shape[1]:\n                            break\n                        if output_grid[cx, cy] != Color.BLACK:\n                            break\n                        output_grid[cx, cy] = color\n\n    return output_grid\n\ndef generate_input():\n    # Have 2 to 5 number of colored pixels in the initial grid\n    n_colored_pixels = random.randint(2, 5)\n    \n    # Random size of input grid\n    n, m = random.randint(5, 10), random.randint(5, 10)\n\n    # Initialize grid\n    grid = np.zeros((n, m), dtype=int)\n  \n    # Randomly place n_colored_pixels pixels on the grid\n    for _ in range(n_colored_pixels):\n        color = random.choice(list(Color.NOT_BLACK))\n        sprite = np.array([color]).reshape(1, 1)\n        x, y = random_free_location_for_sprite(grid, sprite)\n        blit_sprite(grid, sprite, x, y)\n\n    return grid"
}