{
  "uid": "92735ca4211717da",
  "annotations": {
    "example": "bad",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_6_gpt-4o_temp1.00_maxtokens2048_rng1_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          6,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          5,
          6,
          5,
          5,
          6,
          5
        ],
        [
          5,
          6,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          5,
          6,
          5,
          5,
          6,
          5
        ],
        [
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          6,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          5,
          6,
          5,
          5,
          6,
          5
        ],
        [
          5,
          6,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          5,
          6,
          5,
          5,
          6,
          5
        ],
        [
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          6,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          5,
          6,
          5,
          5,
          6,
          5
        ],
        [
          5,
          6,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          5,
          6,
          5,
          5,
          6,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          6,
          5,
          5,
          6,
          5,
          5,
          6,
          5,
          5,
          6,
          5,
          5,
          6,
          5
        ],
        [
          5,
          6,
          5,
          5,
          6,
          5,
          5,
          6,
          5,
          5,
          6,
          5,
          5,
          6,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ]
      ],
      "output": [
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          6,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          6,
          5,
          5,
          6,
          5
        ],
        [
          5,
          6,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          6,
          5,
          5,
          6,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          6,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          6,
          5,
          5,
          6,
          5
        ],
        [
          5,
          6,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          6,
          5,
          5,
          6,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          6,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          6,
          5,
          5,
          6,
          5
        ],
        [
          5,
          6,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          6,
          5,
          5,
          6,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          6,
          5,
          5,
          6,
          5,
          5,
          6,
          5,
          5,
          6,
          5,
          5,
          6,
          5
        ],
        [
          5,
          6,
          5,
          5,
          6,
          5,
          5,
          6,
          5,
          5,
          6,
          5,
          5,
          6,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ]
      ]
    },
    {
      "input": [
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ]
      ],
      "output": [
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ]
      ]
    },
    {
      "input": [
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ]
      ],
      "output": [
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ]
      ]
    },
    {
      "input": [
        [
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2
        ],
        [
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9
        ],
        [
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2
        ],
        [
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2
        ],
        [
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2
        ],
        [
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9
        ],
        [
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2
        ],
        [
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2
        ],
        [
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2
        ],
        [
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9
        ],
        [
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2
        ],
        [
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2
        ],
        [
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2
        ],
        [
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9
        ],
        [
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2
        ],
        [
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2
        ],
        [
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2
        ],
        [
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9
        ],
        [
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2
        ],
        [
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2
        ]
      ],
      "output": [
        [
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2
        ],
        [
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          9
        ],
        [
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          2
        ],
        [
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          2
        ],
        [
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          2
        ],
        [
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          9
        ],
        [
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          2
        ],
        [
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          2
        ],
        [
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          2
        ],
        [
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          9
        ],
        [
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          2
        ],
        [
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          2
        ],
        [
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          2
        ],
        [
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          9
        ],
        [
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          2
        ],
        [
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          2
        ],
        [
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          2
        ],
        [
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9
        ],
        [
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2
        ],
        [
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2,
          9,
          2,
          2,
          2
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# occlusion, counting, translational symmetry\n\n# description:\n# In the input grid, there is a translationally symmetric pattern and an occluding rectangular region of black pixels.\n# Count the number of colored pixels from the pattern inside the occluded region and replace each black pixel with a color representing the count: 1=Green, 2=Red, 3=Blue, etc.\n\ndef main(input_grid):\n    # Identify the translational symmetries\n    translations = detect_translational_symmetry(input_grid, ignore_colors=[Color.BLACK])\n    assert len(translations) > 0, \"No translational symmetry found\"\n\n    w, h = input_grid.shape\n    output_grid = np.copy(input_grid)\n\n    # Find the occluded region\n    occluders = find_connected_components(input_grid, background=Color.BLACK, connectivity=4, monochromatic=True)\n    occluder = max(occluders, key=lambda o: np.count_nonzero(o))\n\n    # Find the bounding box of the occluded region\n    min_x, min_y = np.min(occluder.nonzero(), axis=1)\n    max_x, max_y = np.max(occluder.nonzero(), axis=1)\n\n    # Count the number of colored pixels inside the occluded region\n    pixel_count = 0\n    for x in range(min_x, max_x + 1):\n        for y in range(min_y, max_y + 1):\n            if input_grid[x, y] != Color.BLACK:\n                pixel_count += 1\n\n    # Set the color based on the number of counted pixels\n    if pixel_count == 1:\n        fill_color = Color.GREEN\n    elif pixel_count == 2:\n        fill_color = Color.RED\n    elif pixel_count == 3:\n        fill_color = Color.BLUE\n    else:\n        fill_color = Color.GREY\n\n    # Replace each black pixel in the occluded region with the fill color\n    for x in range(min_x, max_x + 1):\n        for y in range(min_y, max_y + 1):\n            if input_grid[x, y] == Color.BLACK:\n                output_grid[x, y] = fill_color\n\n    return output_grid \n\ndef generate_input():\n    # Create a random canvas size between 15x15 and 20x20\n    grid = np.full((np.random.randint(15, 21), np.random.randint(15, 21)), Color.BLACK)\n\n    # Make the basic repeating pattern (sprite)\n    w, h = random.randint(3, 5), random.randint(3, 5)\n    pattern = random_sprite(w, h, density=1, color_palette=Color.NOT_BLACK)\n\n    # Place the sprite in the canvas repeated in a grid\n    for x in range(0, grid.shape[0], w):\n        for y in range(0, grid.shape[1], h):\n            blit_sprite(grid, pattern, x, y)\n\n    # Create one large occluding (black) rectangle in the grid\n    x, y = random.randint(0, grid.shape[0] - w), random.randint(0, grid.shape[1] - h)\n    occluder_width, occluder_height = random.randint(w, grid.shape[0] - x), random.randint(h, grid.shape[1] - y)\n    grid[x:x + occluder_width, y:y + occluder_height] = Color.BLACK\n\n    return grid"
}