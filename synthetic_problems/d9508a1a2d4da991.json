{
  "uid": "d9508a1a2d4da991",
  "annotations": {
    "example": "good",
    "code": "good"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng1_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          4,
          0,
          0,
          0,
          4,
          0,
          0,
          0
        ],
        [
          4,
          0,
          0,
          0,
          4,
          0,
          4,
          0
        ],
        [
          0,
          4,
          0,
          4,
          0,
          4,
          4,
          0
        ],
        [
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          4,
          0,
          0,
          0,
          0,
          0,
          4,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          7,
          2,
          9,
          2,
          9,
          2,
          8,
          8
        ],
        [
          7,
          6,
          2,
          7,
          9,
          1,
          9,
          5
        ],
        [
          6,
          1,
          1,
          4,
          8,
          1,
          1,
          7
        ],
        [
          8,
          2,
          8,
          3,
          3,
          1,
          9,
          2
        ],
        [
          1,
          2,
          8,
          7,
          3,
          9,
          7,
          6
        ],
        [
          6,
          4,
          2,
          7,
          6,
          3,
          9,
          9
        ],
        [
          8,
          7,
          8,
          7,
          2,
          4,
          2,
          1
        ],
        [
          2,
          5,
          7,
          6,
          4,
          9,
          6,
          2
        ]
      ],
      "output": [
        [
          8,
          2,
          9,
          2,
          9,
          2,
          8,
          8
        ],
        [
          7,
          6,
          2,
          7,
          9,
          1,
          9,
          5
        ],
        [
          8,
          1,
          1,
          4,
          8,
          1,
          1,
          7
        ],
        [
          8,
          2,
          8,
          3,
          8,
          1,
          8,
          2
        ],
        [
          1,
          8,
          8,
          8,
          3,
          8,
          8,
          6
        ],
        [
          6,
          8,
          2,
          7,
          6,
          3,
          9,
          9
        ],
        [
          8,
          7,
          8,
          7,
          2,
          4,
          8,
          1
        ],
        [
          2,
          5,
          7,
          6,
          4,
          9,
          6,
          2
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          4,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          4
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          4
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          4,
          0,
          0,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          4,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          7,
          6,
          7,
          7,
          9,
          9,
          8
        ],
        [
          8,
          8,
          2,
          4,
          5,
          7,
          5
        ],
        [
          8,
          8,
          7,
          3,
          2,
          2,
          9
        ],
        [
          3,
          1,
          6,
          4,
          6,
          2,
          8
        ],
        [
          8,
          5,
          1,
          1,
          1,
          8,
          9
        ],
        [
          3,
          3,
          2,
          6,
          3,
          8,
          3
        ],
        [
          7,
          4,
          8,
          4,
          7,
          8,
          3
        ]
      ],
      "output": [
        [
          7,
          6,
          7,
          7,
          8,
          9,
          8
        ],
        [
          8,
          8,
          2,
          8,
          5,
          7,
          5
        ],
        [
          8,
          8,
          7,
          3,
          8,
          2,
          8
        ],
        [
          3,
          1,
          6,
          4,
          6,
          2,
          8
        ],
        [
          8,
          5,
          1,
          1,
          1,
          8,
          9
        ],
        [
          3,
          8,
          2,
          6,
          8,
          8,
          3
        ],
        [
          7,
          4,
          8,
          8,
          7,
          8,
          3
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          4,
          0,
          0,
          4,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          4,
          4,
          0,
          0,
          0,
          0
        ],
        [
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0
        ],
        [
          4,
          0,
          4,
          4,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          4
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          5,
          6,
          9,
          4,
          6,
          6,
          8,
          6,
          3
        ],
        [
          2,
          3,
          1,
          3,
          8,
          8,
          2,
          1,
          6
        ],
        [
          8,
          6,
          4,
          9,
          4,
          3,
          1,
          3,
          4
        ],
        [
          4,
          8,
          2,
          7,
          1,
          3,
          5,
          9,
          8
        ],
        [
          1,
          4,
          8,
          5,
          4,
          7,
          5,
          7,
          3
        ],
        [
          8,
          6,
          1,
          4,
          3,
          6,
          4,
          3,
          3
        ],
        [
          8,
          3,
          5,
          8,
          1,
          2,
          9,
          6,
          9
        ]
      ],
      "output": [
        [
          5,
          6,
          9,
          4,
          6,
          6,
          8,
          6,
          3
        ],
        [
          2,
          3,
          8,
          3,
          8,
          8,
          2,
          1,
          6
        ],
        [
          8,
          6,
          4,
          8,
          8,
          3,
          1,
          3,
          4
        ],
        [
          4,
          8,
          2,
          7,
          1,
          3,
          5,
          9,
          8
        ],
        [
          1,
          4,
          8,
          5,
          4,
          8,
          5,
          7,
          3
        ],
        [
          8,
          6,
          8,
          8,
          3,
          6,
          4,
          3,
          3
        ],
        [
          8,
          3,
          5,
          8,
          8,
          2,
          9,
          6,
          8
        ]
      ]
    },
    {
      "input": [
        [
          4,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          4
        ],
        [
          4,
          0,
          0,
          4,
          0,
          4,
          0,
          0,
          0
        ],
        [
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          4,
          0,
          0,
          0,
          4,
          4,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0
        ],
        [
          0,
          0,
          4,
          0,
          0,
          0,
          4,
          4,
          4
        ],
        [
          4,
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          4
        ],
        [
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          4
        ],
        [
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          6,
          5,
          9,
          3,
          6,
          2,
          7,
          6,
          7
        ],
        [
          2,
          9,
          7,
          6,
          5,
          8,
          1,
          3,
          5
        ],
        [
          7,
          5,
          8,
          9,
          9,
          9,
          1,
          5,
          2
        ],
        [
          6,
          3,
          9,
          3,
          3,
          2,
          4,
          5,
          7
        ],
        [
          2,
          6,
          3,
          8,
          2,
          5,
          5,
          6,
          3
        ],
        [
          3,
          4,
          7,
          9,
          7,
          7,
          9,
          7,
          4
        ],
        [
          9,
          1,
          1,
          4,
          9,
          3,
          8,
          6,
          9
        ],
        [
          2,
          7,
          8,
          7,
          8,
          7,
          2,
          4,
          1
        ],
        [
          4,
          3,
          6,
          3,
          2,
          6,
          4,
          7,
          7
        ]
      ],
      "output": [
        [
          8,
          5,
          9,
          3,
          6,
          2,
          8,
          6,
          8
        ],
        [
          8,
          9,
          7,
          8,
          5,
          8,
          1,
          3,
          5
        ],
        [
          8,
          5,
          8,
          9,
          9,
          9,
          1,
          5,
          2
        ],
        [
          6,
          3,
          8,
          3,
          3,
          2,
          8,
          8,
          7
        ],
        [
          2,
          6,
          3,
          8,
          2,
          8,
          5,
          6,
          3
        ],
        [
          3,
          4,
          8,
          9,
          7,
          7,
          8,
          8,
          8
        ],
        [
          8,
          8,
          1,
          4,
          9,
          3,
          8,
          6,
          8
        ],
        [
          2,
          7,
          8,
          7,
          8,
          8,
          2,
          4,
          8
        ],
        [
          8,
          3,
          6,
          3,
          2,
          6,
          4,
          7,
          7
        ]
      ]
    }
  ],
  "code": "import numpy as np\nfrom typing import *\nfrom common import *\n\n# concepts:\n# objects, alignment by color, bitmasks with separator, boolean logical operations\n\n# description:\n# In the input you will see two grids separated by a blue vertical bar. The left grid acts as a stencil mask where yellow pixels are the stencil.\n# The right grid contains objects of varying colors.\n# In the output grid, pixels in the right grid are turned teal if they correspond to yellow pixels in the stencil.\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    # Find the blue vertical bar. Vertical means constant X\n    for x_bar in range(input_grid.shape[0]):\n        if np.all(input_grid[x_bar, :] == Color.BLUE):\n            break\n\n    stencil_mask = input_grid[:x_bar, :]\n    object_grid = input_grid[x_bar+1:, :]\n\n    # Create output grid which initially is a copy of the object grid\n    output_grid = np.copy(object_grid)\n\n    # Apply the stencil: if the corresponding pixel in the stencil_mask is yellow, turn the pixel teal in the output\n    teal_pixels = np.argwhere(stencil_mask == Color.YELLOW)\n    \n    for x, y in teal_pixels:\n        if x < output_grid.shape[0] and y < output_grid.shape[1]:\n            output_grid[x, y] = Color.TEAL\n\n    return output_grid\n\ndef generate_input() -> np.ndarray:\n    # Create two equally sized grids\n    width, height = np.random.randint(5, 10), np.random.randint(5, 10)\n\n    # Generate the stencil mask\n    stencil_mask = np.zeros((width, height), dtype=int)\n    colors = list(Color.NOT_BLACK)\n    \n    # Create random patterns with a specific frequency of yellow\n    for x in range(width):\n        for y in range(height):\n            if np.random.random() < 0.2:  # 20% chance to be yellow\n                stencil_mask[x, y] = Color.YELLOW\n            else:\n                stencil_mask[x, y] = Color.BLACK\n\n    # Generate the object grid\n    object_grid = np.zeros((width, height), dtype=int)\n    for x in range(width):\n        for y in range(height):\n            object_color = np.random.choice(colors)\n            object_grid[x, y] = object_color\n\n    # Create a blue vertical bar\n    bar = np.zeros((1, height), dtype=int)\n    bar[0, :] = Color.BLUE\n\n    # Combine the grids\n    grid = np.concatenate((stencil_mask, bar, object_grid), axis=0)\n    \n    return grid"
}