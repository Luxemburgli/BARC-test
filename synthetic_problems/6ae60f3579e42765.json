{
  "uid": "6ae60f3579e42765",
  "annotations": {
    "example": "ok",
    "code": "ok"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng1_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          1,
          1,
          5,
          1,
          0,
          1,
          0,
          1
        ],
        [
          1,
          0,
          0,
          1,
          0,
          5,
          1,
          0,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          0,
          1,
          5,
          1,
          1,
          0,
          1,
          0
        ],
        [
          0,
          1,
          1,
          0,
          1,
          5,
          1,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          5,
          1,
          1,
          1,
          1,
          0
        ],
        [
          0,
          1,
          1,
          1,
          0,
          5,
          1,
          1,
          1,
          0,
          1
        ],
        [
          1,
          1,
          0,
          0,
          1,
          5,
          1,
          1,
          1,
          0,
          1
        ]
      ],
      "output": [
        [
          4,
          0,
          4,
          4,
          4
        ],
        [
          4,
          0,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          0,
          4
        ],
        [
          4,
          4,
          4,
          4,
          0
        ],
        [
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          0,
          4
        ]
      ]
    },
    {
      "input": [
        [
          1,
          0,
          0,
          0,
          0,
          1,
          1,
          5,
          1,
          1,
          1,
          1,
          1,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          5,
          1,
          0,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          0,
          0,
          1,
          1,
          1,
          0,
          5,
          0,
          0,
          0,
          0,
          1,
          1,
          1
        ],
        [
          1,
          0,
          1,
          1,
          1,
          0,
          0,
          5,
          1,
          0,
          1,
          0,
          0,
          1,
          1
        ]
      ],
      "output": [
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          0,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          0,
          0,
          4,
          4,
          4,
          4
        ],
        [
          4,
          0,
          4,
          4,
          4,
          4,
          4
        ]
      ]
    },
    {
      "input": [
        [
          1,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          5,
          1,
          0,
          1,
          0,
          0,
          1,
          1,
          0
        ],
        [
          0,
          1,
          0,
          1,
          0,
          1,
          1,
          1,
          5,
          1,
          0,
          0,
          0,
          0,
          1,
          1,
          0
        ],
        [
          1,
          0,
          1,
          1,
          1,
          0,
          0,
          0,
          5,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          5,
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          0
        ]
      ],
      "output": [
        [
          4,
          0,
          4,
          0,
          0,
          4,
          4,
          0
        ],
        [
          4,
          4,
          0,
          4,
          0,
          4,
          4,
          4
        ],
        [
          4,
          0,
          4,
          4,
          4,
          0,
          0,
          0
        ],
        [
          4,
          4,
          4,
          0,
          4,
          4,
          4,
          4
        ]
      ]
    },
    {
      "input": [
        [
          0,
          1,
          1,
          0,
          1,
          0,
          5,
          0,
          0,
          1,
          0,
          1,
          1
        ],
        [
          1,
          0,
          0,
          1,
          1,
          1,
          5,
          1,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          5,
          1,
          0,
          0,
          1,
          0,
          1
        ],
        [
          1,
          0,
          0,
          1,
          0,
          0,
          5,
          1,
          0,
          0,
          1,
          1,
          0
        ],
        [
          0,
          1,
          0,
          1,
          1,
          0,
          5,
          0,
          0,
          0,
          1,
          0,
          1
        ],
        [
          1,
          1,
          0,
          1,
          1,
          0,
          5,
          1,
          0,
          1,
          1,
          1,
          1
        ]
      ],
      "output": [
        [
          0,
          4,
          4,
          0,
          4,
          4
        ],
        [
          4,
          4,
          0,
          4,
          4,
          4
        ],
        [
          4,
          0,
          0,
          4,
          4,
          4
        ],
        [
          4,
          0,
          0,
          4,
          4,
          0
        ],
        [
          0,
          4,
          0,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4
        ]
      ]
    }
  ],
  "code": "import numpy as np\nfrom typing import *\nfrom common import *\n\n# concepts:\n# boolean logical operations, pixel manipulation, occlusion, bitmasks with separator\n\n# description:\n# In the input you will see two blue bitmasks separated by a grey horizontal bar.\n# Some pixels of the bitmasks might be occluded by black pixels.\n# To make the output, perform a logical OR operation between the non-black pixels of the bitmasks\n# and color the resultant pixels with yellow.\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    # Find the grey horizontal bar. Horizontal means constant Y\n    for y_bar in range(input_grid.shape[1]):\n        if np.all(input_grid[:, y_bar] == Color.GREY):\n            break\n\n    top_mask = input_grid[:, :y_bar]\n    bottom_mask = input_grid[:, y_bar+1:]\n\n    output_grid = np.zeros_like(top_mask)\n    output_grid[\n        (top_mask != Color.BLACK) | (bottom_mask != Color.BLACK)\n    ] = Color.YELLOW\n    \n    return output_grid\n\n\ndef generate_input() -> np.ndarray:\n    width, height = np.random.randint(2, 10), np.random.randint(2, 10)\n\n    grid1 = np.zeros((width, height), dtype=int)\n    grid2 = np.zeros((width, height), dtype=int)\n\n    for x in range(width):\n        for y in range(height):\n            grid1[x, y] = np.random.choice([Color.BLUE, Color.BLACK])\n            grid2[x, y] = np.random.choice([Color.BLUE, Color.BLACK])\n    \n    # Create a grey horizontal bar\n    bar = np.zeros((width, 1), dtype=int)\n    bar[:, 0] = Color.GREY\n\n    grid = np.concatenate((grid1, bar, grid2), axis=1)\n\n    return grid"
}