{
  "uid": "6ab29ec83066defd",
  "annotations": {
    "example": "bad",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_6_gpt-4o_temp1.00_maxtokens2048_rng1_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          2,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          2,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          2,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          3,
          3,
          0,
          0,
          0,
          0,
          0
        ],
        [
          3,
          3,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          9,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          3,
          3,
          0,
          0,
          0,
          0,
          0
        ],
        [
          3,
          3,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          4,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          4,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# symmetry, color matching, geometric transformation\n\n# description:\n# The input consists of two separate objects made from different colored pixels - one object is always at the top-left and\n# the other is randomly placed somewhere else on the grid.\n# The task is to reflect the second object about the y-axis and match the reflection with the first object symmetrically,\n# then merge them together. If there's no overlap, just merge them. The result should be the merged object on an otherwise black background.\n\ndef main(input_grid):\n    # Identify distinct objects\n    non_black_pixels = np.argwhere(input_grid != Color.BLACK)\n    \n    # Extract the first object (from top-left)\n    first_object = np.zeros_like(input_grid)\n    first_object[input_grid == input_grid[non_black_pixels[0][0], non_black_pixels[0][1]]] = input_grid[non_black_pixels[0][0], non_black_pixels[0][1]]\n    \n    # Extract the second object\n    second_color = input_grid[non_black_pixels[-1][0], non_black_pixels[-1][1]]\n    second_object = np.zeros_like(input_grid)\n    second_object[input_grid == second_color] = second_color\n    \n    # Reflect the second object about the y-axis\n    reflected_second_object = np.fliplr(second_object)\n    \n    # Merge the objects\n    output_grid = np.zeros_like(input_grid)\n    merged_object = ((first_object != Color.BLACK) | (reflected_second_object != Color.BLACK)) * input_grid\n    \n    output_grid = merged_object\n    \n    return output_grid\n\ndef generate_input():\n    n, m = np.random.randint(5, 10, size=2)\n    grid = np.zeros((n, m), dtype=int)\n\n    # Create the first object (top-left)\n    first_color = random.choice(list(Color.NOT_BLACK))\n    obj1_size = np.random.randint(1, min(n, m)//2)\n    first_object = random_sprite(obj1_size, obj1_size, color_palette=[first_color])\n    blit_sprite(grid, first_object, 0, 0, background=Color.BLACK)\n    \n    # Create the second object and place it somewhere else randomly\n    second_color = random.choice([c for c in Color.NOT_BLACK if c != first_color])\n    obj2_size = np.random.randint(1, min(n, m)//2)\n    second_object = random_sprite(obj2_size, obj2_size, color_palette=[second_color])\n    x, y = random_free_location_for_sprite(grid, second_object, background=Color.BLACK, padding=1, border_size=1)\n    while (x, y) == (0, 0):\n        x, y = random_free_location_for_sprite(grid, second_object, background=Color.BLACK, padding=1, border_size=1)\n    blit_sprite(grid, second_object, x, y, background=Color.BLACK)\n\n    return grid"
}