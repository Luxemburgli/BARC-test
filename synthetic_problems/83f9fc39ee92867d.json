{
  "uid": "83f9fc39ee92867d",
  "annotations": {
    "example": "good",
    "code": "good"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng3_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          0
        ],
        [
          0,
          0,
          2,
          2,
          2,
          2,
          0
        ],
        [
          0,
          0,
          2,
          2,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          0
        ],
        [
          0,
          0,
          2,
          2,
          2,
          2,
          0
        ],
        [
          0,
          0,
          2,
          2,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          0
        ],
        [
          0,
          0,
          2,
          2,
          2,
          2,
          2
        ],
        [
          0,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          0,
          2,
          2,
          2,
          2,
          2,
          0
        ],
        [
          0,
          0,
          2,
          2,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          0
        ],
        [
          0,
          0,
          2,
          2,
          2,
          2,
          2
        ],
        [
          0,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          0,
          2,
          2,
          2,
          2,
          2,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          7,
          7,
          0,
          0
        ],
        [
          0,
          0,
          0,
          7,
          7,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          7,
          7,
          0
        ],
        [
          0,
          0,
          0,
          0,
          7,
          7,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          7,
          7,
          0,
          0
        ],
        [
          0,
          0,
          0,
          7,
          7,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          7,
          7,
          0
        ],
        [
          0,
          0,
          0,
          0,
          7,
          7,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          7,
          7,
          0,
          0
        ],
        [
          0,
          0,
          7,
          7,
          7,
          7,
          0
        ],
        [
          0,
          0,
          7,
          7,
          7,
          7,
          0
        ],
        [
          0,
          0,
          0,
          7,
          7,
          7,
          7
        ],
        [
          0,
          0,
          0,
          7,
          7,
          7,
          7
        ],
        [
          0,
          0,
          0,
          0,
          7,
          7,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          7,
          7,
          7,
          7,
          0
        ],
        [
          0,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          0,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          0,
          0,
          7,
          7,
          7,
          7,
          7
        ],
        [
          0,
          0,
          7,
          7,
          7,
          7,
          7
        ],
        [
          0,
          0,
          0,
          7,
          7,
          7,
          7
        ],
        [
          0,
          0,
          0,
          0,
          7,
          7,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0
        ],
        [
          2,
          2,
          0,
          0
        ],
        [
          2,
          2,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0
        ],
        [
          2,
          2,
          0,
          0
        ],
        [
          2,
          2,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          2,
          2,
          0,
          0
        ],
        [
          2,
          2,
          2,
          0
        ],
        [
          2,
          2,
          2,
          0
        ],
        [
          2,
          2,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          2,
          2,
          2,
          0
        ],
        [
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          0
        ],
        [
          2,
          2,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          9,
          9
        ],
        [
          0,
          0,
          0,
          0,
          0,
          9,
          9
        ],
        [
          0,
          0,
          0,
          9,
          9,
          9,
          9
        ],
        [
          0,
          0,
          0,
          9,
          9,
          9,
          9
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          9,
          9
        ],
        [
          0,
          0,
          0,
          0,
          0,
          9,
          9
        ],
        [
          0,
          0,
          0,
          9,
          9,
          9,
          9
        ],
        [
          0,
          0,
          0,
          9,
          9,
          9,
          9
        ],
        [
          0,
          0,
          0,
          0,
          9,
          9,
          9
        ],
        [
          0,
          0,
          0,
          9,
          9,
          9,
          9
        ],
        [
          0,
          0,
          9,
          9,
          9,
          9,
          9
        ],
        [
          0,
          0,
          9,
          9,
          9,
          9,
          9
        ],
        [
          0,
          0,
          0,
          9,
          9,
          9,
          9
        ],
        [
          0,
          0,
          9,
          9,
          9,
          9,
          9
        ],
        [
          0,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          0,
          9,
          9,
          9,
          9,
          9,
          9
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# Coloring diagonal pixels, repetition, objects\n\n# description:\n# Given an input grid of arbitrary size, with some small number of colored squares (objects) on it.\n# To produce the output, replicate the grid 3 times vertically.\n# Each replication adds a border around existing objects by coloring all the adjacent black pixels (north, south, east, and west) with the same color.\n# The first replication does nothing other than copying the input grid.\n# The second replication adds a border around the original colored squares in the input.\n# The third replication adds an additional border around the squares obtained in the second replication.\n\ndef main(input_grid):\n    height, width = input_grid.shape\n    output_grid = np.zeros((3 * height, width), dtype=int)\n\n    # Function to add border around objects\n    def add_border(grid, start_x, start_y):\n        expanded_grid = grid.copy()\n        for x in range(height):\n            for y in range(width):\n                if grid[x, y] != Color.BLACK:\n                    for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:\n                        nx, ny = x + dx, y + dy\n                        if 0 <= nx < height and 0 <= ny < width and expanded_grid[nx, ny] == Color.BLACK:\n                            expanded_grid[nx, ny] = grid[x, y]\n        return expanded_grid\n\n    # First copy is identical to the input grid\n    output_grid[:height, :width] = input_grid\n\n    # Second replication adds a border around original colored squares\n    bordered_grid = add_border(input_grid, 0, 0)\n    output_grid[height:2*height, :width] = bordered_grid\n\n    # Third replication adds further border around the new squares\n    double_bordered_grid = add_border(bordered_grid, height, 0)\n    output_grid[2*height:3*height, :width] = double_bordered_grid\n    \n    return output_grid\n\ndef generate_input():\n    # Have 1 to 4 number of colored squares (objects) in the initial grid\n    n_colored_squares = random.randint(1, 4)\n    \n    # Random color that is not black\n    object_color = random.choice(list(Color.NOT_BLACK))\n\n    # Random size of the input grid\n    n, m = random.randint(3, 8), random.randint(3, 8)\n\n    # Initialize grid\n    grid = np.zeros((n, m), dtype=int)\n    \n    # Create a 2x2 colored square (object)\n    sprite = np.full((2, 2), object_color)\n    \n    # Randomly place n_colored_squares objects on the grid\n    for _ in range(n_colored_squares):\n        x, y = random_free_location_for_sprite(grid, sprite)\n        blit_sprite(grid, sprite, x, y)\n\n    return grid"
}