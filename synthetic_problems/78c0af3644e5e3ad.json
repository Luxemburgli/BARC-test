{
  "uid": "78c0af3644e5e3ad",
  "annotations": {
    "example": "ok",
    "code": "ok"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng1_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          3,
          0,
          3,
          3,
          0,
          0,
          3,
          0
        ],
        [
          0,
          0,
          1,
          3,
          3,
          1,
          0,
          0
        ],
        [
          3,
          0,
          0,
          1,
          0,
          1,
          0,
          0
        ],
        [
          1,
          3,
          0,
          1,
          0,
          1,
          3,
          3
        ],
        [
          3,
          0,
          3,
          3,
          1,
          3,
          1,
          0
        ],
        [
          1,
          3,
          3,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          3,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          3,
          0,
          1
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          0,
          3,
          0,
          1,
          1,
          3,
          0,
          0
        ],
        [
          0,
          0,
          1,
          3,
          3,
          1,
          1,
          3
        ],
        [
          1,
          3,
          0,
          0,
          0,
          3,
          0,
          1
        ],
        [
          1,
          3,
          1,
          0,
          0,
          3,
          1,
          1
        ],
        [
          3,
          0,
          3,
          1,
          3,
          0,
          0,
          0
        ],
        [
          3,
          1,
          0,
          0,
          3,
          1,
          3,
          3
        ],
        [
          0,
          0,
          3,
          3,
          3,
          3,
          0,
          0
        ],
        [
          0,
          1,
          3,
          1,
          0,
          1,
          1,
          3
        ]
      ],
      "output": [
        [
          7,
          7,
          7,
          7,
          2,
          7,
          7,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          7
        ],
        [
          7,
          7,
          0,
          2,
          0,
          7,
          0,
          2
        ],
        [
          0,
          0,
          2,
          2,
          0,
          7,
          7,
          7
        ],
        [
          0,
          0,
          0,
          7,
          7,
          7,
          2,
          0
        ],
        [
          7,
          7,
          7,
          0,
          7,
          2,
          7,
          7
        ],
        [
          2,
          7,
          7,
          7,
          7,
          7,
          0,
          0
        ],
        [
          2,
          0,
          7,
          0,
          2,
          7,
          2,
          7
        ]
      ]
    },
    {
      "input": [
        [
          0,
          3,
          0,
          0,
          1,
          0,
          3,
          0
        ],
        [
          3,
          1,
          1,
          3,
          1,
          0,
          3,
          1
        ],
        [
          3,
          3,
          1,
          1,
          1,
          1,
          1,
          0
        ],
        [
          0,
          1,
          1,
          1,
          3,
          0,
          1,
          0
        ],
        [
          1,
          3,
          0,
          0,
          0,
          3,
          0,
          0
        ],
        [
          0,
          0,
          3,
          1,
          1,
          0,
          3,
          0
        ],
        [
          1,
          0,
          3,
          3,
          1,
          3,
          1,
          3
        ],
        [
          3,
          0,
          1,
          3,
          1,
          3,
          3,
          0
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          3,
          0,
          0,
          3,
          3,
          0,
          0,
          1
        ],
        [
          0,
          3,
          1,
          1,
          1,
          0,
          3,
          0
        ],
        [
          0,
          0,
          1,
          1,
          1,
          3,
          3,
          3
        ],
        [
          3,
          1,
          0,
          1,
          0,
          0,
          3,
          3
        ],
        [
          1,
          0,
          1,
          3,
          3,
          3,
          3,
          3
        ],
        [
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          3,
          1,
          0,
          0,
          0,
          3
        ],
        [
          3,
          1,
          3,
          0,
          0,
          0,
          3,
          0
        ]
      ],
      "output": [
        [
          7,
          7,
          0,
          7,
          7,
          0,
          7,
          2
        ],
        [
          7,
          7,
          0,
          7,
          0,
          0,
          0,
          2
        ],
        [
          7,
          7,
          0,
          0,
          0,
          7,
          7,
          7
        ],
        [
          7,
          0,
          2,
          0,
          7,
          0,
          7,
          7
        ],
        [
          0,
          7,
          2,
          7,
          7,
          0,
          7,
          7
        ],
        [
          0,
          0,
          7,
          0,
          0,
          2,
          7,
          2
        ],
        [
          2,
          0,
          0,
          7,
          2,
          7,
          2,
          0
        ],
        [
          0,
          2,
          7,
          7,
          2,
          7,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          1,
          1,
          0,
          3,
          3,
          3
        ],
        [
          3,
          1,
          0,
          1,
          0,
          3,
          0,
          1
        ],
        [
          3,
          3,
          3,
          1,
          3,
          0,
          0,
          0
        ],
        [
          1,
          0,
          1,
          1,
          3,
          1,
          0,
          0
        ],
        [
          1,
          3,
          3,
          3,
          3,
          3,
          0,
          3
        ],
        [
          0,
          1,
          3,
          3,
          0,
          1,
          3,
          1
        ],
        [
          1,
          1,
          3,
          0,
          3,
          1,
          1,
          3
        ],
        [
          0,
          1,
          3,
          0,
          1,
          1,
          1,
          3
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          1,
          0,
          3,
          0,
          3,
          1,
          0,
          0
        ],
        [
          1,
          1,
          1,
          0,
          3,
          0,
          1,
          3
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          3,
          1
        ],
        [
          0,
          0,
          0,
          1,
          1,
          0,
          1,
          0
        ],
        [
          1,
          3,
          1,
          3,
          3,
          1,
          3,
          3
        ],
        [
          0,
          3,
          0,
          0,
          3,
          0,
          1,
          0
        ],
        [
          0,
          0,
          3,
          1,
          1,
          3,
          3,
          0
        ],
        [
          1,
          3,
          1,
          1,
          0,
          1,
          0,
          1
        ]
      ],
      "output": [
        [
          2,
          0,
          7,
          2,
          7,
          7,
          7,
          7
        ],
        [
          7,
          0,
          2,
          2,
          7,
          7,
          2,
          7
        ],
        [
          7,
          7,
          7,
          2,
          7,
          2,
          7,
          2
        ],
        [
          2,
          0,
          2,
          0,
          7,
          2,
          2,
          0
        ],
        [
          0,
          0,
          7,
          0,
          0,
          7,
          7,
          0
        ],
        [
          0,
          7,
          7,
          7,
          7,
          2,
          7,
          2
        ],
        [
          2,
          2,
          0,
          2,
          7,
          7,
          7,
          7
        ],
        [
          2,
          7,
          7,
          2,
          2,
          0,
          2,
          7
        ]
      ]
    },
    {
      "input": [
        [
          1,
          1,
          3,
          3,
          1,
          3,
          1,
          0
        ],
        [
          3,
          1,
          1,
          0,
          1,
          1,
          3,
          1
        ],
        [
          3,
          1,
          3,
          1,
          1,
          3,
          0,
          3
        ],
        [
          3,
          3,
          1,
          0,
          1,
          0,
          0,
          3
        ],
        [
          3,
          1,
          1,
          3,
          1,
          3,
          3,
          3
        ],
        [
          3,
          1,
          3,
          0,
          1,
          0,
          0,
          0
        ],
        [
          1,
          0,
          3,
          3,
          1,
          0,
          1,
          0
        ],
        [
          1,
          0,
          0,
          1,
          0,
          3,
          3,
          3
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          1,
          0,
          1,
          3,
          3,
          1,
          3,
          1
        ],
        [
          1,
          1,
          1,
          1,
          3,
          0,
          3,
          1
        ],
        [
          3,
          3,
          0,
          0,
          1,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          3,
          3,
          0,
          0,
          3
        ],
        [
          0,
          0,
          3,
          3,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          3,
          1,
          1,
          3,
          0,
          3
        ],
        [
          3,
          1,
          0,
          3,
          3,
          1,
          1,
          1
        ],
        [
          3,
          0,
          3,
          1,
          1,
          0,
          1,
          1
        ]
      ],
      "output": [
        [
          0,
          2,
          7,
          0,
          7,
          7,
          7,
          2
        ],
        [
          7,
          0,
          0,
          2,
          7,
          2,
          0,
          0
        ],
        [
          0,
          7,
          7,
          2,
          0,
          7,
          2,
          7
        ],
        [
          7,
          7,
          2,
          7,
          7,
          0,
          0,
          0
        ],
        [
          7,
          2,
          7,
          0,
          0,
          7,
          7,
          7
        ],
        [
          7,
          2,
          0,
          2,
          0,
          7,
          0,
          7
        ],
        [
          7,
          2,
          7,
          0,
          7,
          2,
          0,
          2
        ],
        [
          7,
          0,
          7,
          0,
          2,
          7,
          7,
          7
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# bitmasks with separator, boolean logical operations, color, alignment by color\n\n# description:\n# In the input, you will see two 8x8 blue and green patterns side-by-side separated by a vertical yellow line in the middle of the grid.\n# To make the output, you have to overlap the two patterns. If a cell is blue in either the left or right patterns (but not both), then the corresponding cell in the output is colored red.\n# If a cell is green in either the left or right patterns (but not both), then the corresponding cell in the output is colored orange.\n# If the overlapping cells are both blue or both green, then the corresponding cell in the output is colored black.\n\ndef main(input_grid):\n\n    width, height = input_grid.shape\n   \n    # Find the yellow vertical line/bar\n    for x_bar in range(width):\n        if np.all(input_grid[x_bar, :] == Color.YELLOW):\n            break\n    \n    # Extract left and right patterns\n    left_pattern = input_grid[:x_bar, :]\n    right_pattern = input_grid[x_bar+1:, :] \n\n    output_grid = np.zeros_like(left_pattern)\n\n    # Applying the logical operations as per the description\n    red_pattern = (left_pattern == Color.BLUE) ^ (right_pattern == Color.BLUE)\n    orange_pattern = (left_pattern == Color.GREEN) ^ (right_pattern == Color.GREEN)\n    blue_pattern = (left_pattern == Color.BLUE) & (right_pattern == Color.BLUE)\n    green_pattern = (left_pattern == Color.GREEN) & (right_pattern == Color.GREEN)\n\n    output_grid[red_pattern] = Color.RED\n    output_grid[orange_pattern] = Color.ORANGE\n    output_grid[blue_pattern] = Color.BLACK\n    output_grid[green_pattern] = Color.BLACK\n\n    return output_grid\n\n\ndef generate_input():\n    \n    # Define the grid size\n    width = 17  # 8 left + 1 yellow line + 8 right\n    height = 8\n\n    # Initialize an empty grid\n    input_grid = np.full((width, height), Color.BLACK)\n\n    # Randomly assign blue or green to the left and right patterns\n    for x in range(width):\n        for y in range(height):\n            if x < 8 or x > 8:\n                input_grid[x, y] = np.random.choice([Color.BLUE, Color.GREEN, Color.BLACK])\n\n    # Set the yellow vertical line\n    input_grid[8, :] = Color.YELLOW\n\n    return input_grid"
}