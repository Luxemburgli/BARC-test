{
  "uid": "2e6242c645030562",
  "annotations": {
    "example": "ok",
    "code": "ok"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng1_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          1,
          1,
          0
        ],
        [
          1,
          0,
          0,
          1,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          1,
          0,
          0,
          1
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          0,
          1,
          0
        ],
        [
          0,
          0,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          0,
          0
        ],
        [
          0,
          1,
          0,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          8,
          8,
          0,
          0
        ],
        [
          0,
          0,
          8,
          8,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          8,
          8,
          0,
          0
        ],
        [
          0,
          0,
          8,
          8,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          1,
          1,
          1,
          1
        ],
        [
          0,
          1,
          0,
          1,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0
        ],
        [
          1,
          1,
          1,
          1,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          1,
          1,
          1,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          0,
          8,
          8,
          8,
          8
        ],
        [
          0,
          8,
          0,
          8,
          0,
          0,
          0
        ],
        [
          8,
          8,
          8,
          8,
          8,
          0,
          0
        ],
        [
          0,
          0,
          0,
          8,
          0,
          8,
          0
        ],
        [
          8,
          0,
          0,
          8,
          0,
          8,
          0
        ],
        [
          0,
          0,
          0,
          8,
          0,
          0,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          8,
          0,
          8,
          8,
          8,
          8
        ],
        [
          0,
          8,
          0,
          8,
          0,
          0,
          0
        ],
        [
          8,
          8,
          8,
          8,
          8,
          0,
          0
        ],
        [
          0,
          0,
          0,
          8,
          0,
          8,
          0
        ],
        [
          8,
          0,
          0,
          8,
          0,
          8,
          0
        ],
        [
          0,
          0,
          0,
          8,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          1,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          1,
          1,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          1,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          1,
          1,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          8,
          8,
          0,
          0
        ],
        [
          0,
          0,
          0,
          8,
          8,
          0,
          0
        ],
        [
          8,
          8,
          8,
          8,
          8,
          0,
          0
        ],
        [
          8,
          8,
          8,
          0,
          0,
          8,
          0
        ],
        [
          0,
          0,
          8,
          8,
          8,
          0,
          0
        ],
        [
          0,
          0,
          0,
          8,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          8,
          8,
          0,
          0
        ],
        [
          0,
          0,
          0,
          8,
          8,
          0,
          0
        ],
        [
          8,
          8,
          8,
          8,
          8,
          0,
          0
        ],
        [
          8,
          8,
          8,
          0,
          0,
          8,
          0
        ],
        [
          0,
          0,
          8,
          8,
          8,
          0,
          0
        ],
        [
          0,
          0,
          0,
          8,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          1,
          1,
          1,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          1,
          0,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          0,
          1,
          1,
          0
        ],
        [
          1,
          0,
          1,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          1,
          0,
          1
        ],
        [
          0,
          1,
          1,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          8,
          0,
          0
        ],
        [
          0,
          0,
          8,
          0,
          0
        ],
        [
          8,
          8,
          8,
          8,
          8
        ],
        [
          0,
          0,
          8,
          0,
          0
        ],
        [
          0,
          0,
          8,
          0,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          0,
          8,
          0,
          0
        ],
        [
          0,
          0,
          8,
          0,
          0
        ],
        [
          8,
          8,
          8,
          8,
          8
        ],
        [
          0,
          0,
          8,
          0,
          0
        ],
        [
          0,
          0,
          8,
          0,
          0
        ]
      ]
    }
  ],
  "code": "import numpy as np\nfrom typing import *\nfrom common import *\n\n# concepts:\n# boolean logical operations, bitmasks with separator, symmetry\n\n# description:\n# In the input, you will see two blue radial bitmasks separated by a vertical grey bar.\n# To make the output, detect the region which has symmetrical pattern in both bitmaps.\n# Color this overlapping symmetrical region with teal.\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    # Find the grey vertical bar to split the grid into two parts\n    for x_bar in range(input_grid.shape[0]):\n        if np.all(input_grid[x_bar, :] == Color.GREY):\n            break\n\n    left_mask = input_grid[:x_bar, :]\n    right_mask = input_grid[x_bar+1:, :]\n\n    # Detect symmetry in the left and right masks\n    left_sym = detect_rotational_symmetry(left_mask, ignore_colors=[Color.BLACK])\n    right_sym = detect_rotational_symmetry(right_mask, ignore_colors=[Color.BLACK])\n    \n    # Initialize the output grid\n    output_grid = np.zeros_like(left_mask)\n\n    # Determine the overlapping symmetrical region\n    left_blues = np.argwhere(left_mask == Color.BLUE)\n    right_blues = np.argwhere(right_mask == Color.BLUE)\n\n    for x, y in left_blues:\n        # Rotate the pixel to check symmetry\n        rotated_x, rotated_y = left_sym.apply(x, y, iters=1)\n        if right_mask[rotated_x, rotated_y] == Color.BLUE:\n            output_grid[x, y] = Color.TEAL\n            output_grid[rotated_x, rotated_y] = Color.TEAL\n\n    return np.concatenate((output_grid, np.full((1, output_grid.shape[1]), Color.GREY), output_grid), axis=0)\n\ndef generate_input() -> np.ndarray:\n    # Create pair of radial symmetric blue bitmasks\n    width, height = np.random.randint(10, 20, size=2)\n\n    sprite_size = min(width, height) // 2\n\n    grid1 = random_sprite(sprite_size, sprite_size, symmetry='radial', color_palette=[Color.BLUE], density=0.2)\n    grid2 = random_sprite(sprite_size, sprite_size, symmetry='radial', color_palette=[Color.BLUE], density=0.2)\n\n    # Create a vertical grey bar to separate the grids\n    bar = np.full((1, sprite_size), Color.GREY)\n\n    # Align grids with the vertical bar\n    grid = np.concatenate((grid1, bar, grid2), axis=0)\n\n    final_grid = np.zeros((width, grid.shape[1]), dtype=int)\n    start_x = (width - grid.shape[0]) // 2\n    final_grid[start_x:start_x+grid.shape[0], :] = grid\n\n    return final_grid"
}