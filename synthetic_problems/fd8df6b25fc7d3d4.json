{
  "uid": "fd8df6b25fc7d3d4",
  "annotations": {
    "example": "ok",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_anthropic_claude-3.5-sonnet:beta_temp1.00_maxtokens2048_rng2_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          4,
          0,
          0,
          0,
          4,
          0,
          4
        ],
        [
          0,
          0,
          0,
          0,
          0,
          4,
          2,
          2,
          0,
          0,
          0,
          4,
          0,
          4,
          0,
          0
        ],
        [
          4,
          4,
          4,
          2,
          2,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          2,
          2,
          4,
          4,
          1,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          1,
          1,
          1,
          0,
          0,
          1,
          0,
          0,
          4,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          1,
          4,
          0,
          1,
          1,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0
        ],
        [
          0,
          4,
          4,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          4,
          4,
          4,
          0,
          0
        ],
        [
          0,
          4,
          0,
          0,
          4,
          0,
          4,
          0,
          0,
          4,
          0,
          0,
          4,
          4,
          0,
          0
        ]
      ],
      "output": [
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          2,
          2
        ],
        [
          0,
          0,
          0,
          4,
          4,
          0,
          0,
          0,
          0,
          2,
          2
        ],
        [
          0,
          0,
          0,
          0,
          0,
          4,
          4,
          0,
          4,
          4,
          0
        ],
        [
          0,
          4,
          0,
          4,
          0,
          0,
          4,
          4,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          4
        ],
        [
          0,
          4,
          4,
          0,
          4,
          0,
          0,
          4,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0
        ],
        [
          4,
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0
        ],
        [
          0,
          4,
          4,
          0,
          2,
          2,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          4,
          1,
          1,
          1
        ],
        [
          4,
          4,
          0,
          4,
          4,
          4,
          4,
          4,
          0,
          1,
          0
        ],
        [
          4,
          4,
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          4
        ],
        [
          0,
          0,
          0,
          1,
          0,
          4,
          0,
          4,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ]
    },
    {
      "input": [
        [
          4,
          0,
          0,
          4,
          0,
          0,
          4,
          0,
          0,
          4,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          4,
          4,
          4,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          4,
          0,
          0,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0
        ],
        [
          0,
          4,
          0,
          4,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          0,
          2,
          2,
          4,
          2,
          2
        ],
        [
          0,
          4,
          0,
          0,
          0,
          1,
          4,
          4,
          2,
          2,
          0,
          2,
          2
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          4,
          4,
          0,
          4,
          4,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          4,
          0,
          4,
          0
        ],
        [
          4,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          4
        ],
        [
          0,
          4,
          1,
          1,
          1,
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          4
        ],
        [
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          4,
          0,
          0,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          1,
          4
        ],
        [
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          4,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          4,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          4,
          4,
          0,
          0,
          0,
          0,
          4,
          1,
          1,
          1
        ],
        [
          0,
          4,
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          4
        ],
        [
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          4,
          0,
          0,
          4,
          1,
          4,
          0,
          0
        ],
        [
          4,
          0,
          0,
          0,
          4,
          4,
          2,
          2,
          4,
          0,
          0,
          1,
          1,
          1,
          0,
          0
        ],
        [
          0,
          4,
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          4,
          4,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0
        ],
        [
          4,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          4,
          0,
          0,
          0,
          4,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          4,
          4,
          4,
          0,
          4,
          0,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          4,
          0,
          0,
          4,
          4,
          0,
          0,
          4,
          0,
          0
        ],
        [
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          4,
          4,
          0,
          0
        ],
        [
          0,
          4,
          4,
          0,
          4,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          4
        ]
      ],
      "output": [
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# connectivity, topology, boolean logical operations\n\n# description:\n# The input grid contains three types of objects: red squares (2x2), blue circles (3x3), and yellow pixels.\n# The yellow pixels form paths that may connect the red squares and blue circles.\n# To produce the output:\n# 1. If all red squares are connected by yellow paths, color the entire grid red.\n# 2. If all blue circles are connected by yellow paths, color the entire grid blue.\n# 3. If condition 1 and 2 are both true, perform a logical XOR operation:\n#    color pixels red where either red squares or blue circles are connected, but not both.\n# 4. If neither condition 1 nor 2 is true, output a black grid.\n\ndef main(input_grid):\n    output_grid = np.zeros_like(input_grid)\n    \n    # Find connected components\n    components = find_connected_components(input_grid, background=Color.BLACK, connectivity=4, monochromatic=False)\n    \n    red_connected = False\n    blue_connected = False\n    \n    for component in components:\n        red_squares = np.all(component[input_grid == Color.RED] == Color.RED)\n        blue_circles = np.all(component[input_grid == Color.BLUE] == Color.BLUE)\n        \n        if red_squares and np.sum(component == Color.RED) == np.sum(input_grid == Color.RED):\n            red_connected = True\n        \n        if blue_circles and np.sum(component == Color.BLUE) == np.sum(input_grid == Color.BLUE):\n            blue_connected = True\n    \n    if red_connected and blue_connected:\n        # XOR operation\n        red_component = np.zeros_like(input_grid, dtype=bool)\n        blue_component = np.zeros_like(input_grid, dtype=bool)\n        \n        for component in components:\n            if np.any(component == Color.RED):\n                red_component |= (component != Color.BLACK)\n            if np.any(component == Color.BLUE):\n                blue_component |= (component != Color.BLACK)\n        \n        output_grid[red_component ^ blue_component] = Color.RED\n    elif red_connected:\n        output_grid[:] = Color.RED\n    elif blue_connected:\n        output_grid[:] = Color.BLUE\n    # else: output remains black\n\n    return output_grid\n\ndef generate_input():\n    n, m = np.random.randint(10, 20), np.random.randint(10, 20)\n    grid = np.zeros((n, m), dtype=int)\n    \n    red_square = np.full((2, 2), Color.RED)\n    blue_circle = random_sprite(3, 3, color_palette=[Color.BLUE], symmetry='radial')\n    \n    # Place red squares\n    for _ in range(np.random.randint(2, 4)):\n        x, y = random_free_location_for_sprite(grid, red_square, padding=1)\n        blit_sprite(grid, red_square, x, y)\n    \n    # Place blue circles\n    for _ in range(np.random.randint(2, 4)):\n        x, y = random_free_location_for_sprite(grid, blue_circle, padding=1)\n        blit_sprite(grid, blue_circle, x, y)\n    \n    # Add yellow paths\n    for _ in range(n * m // 4):\n        x, y = np.random.randint(0, n), np.random.randint(0, m)\n        if grid[x, y] == Color.BLACK:\n            grid[x, y] = Color.YELLOW\n    \n    return grid"
}