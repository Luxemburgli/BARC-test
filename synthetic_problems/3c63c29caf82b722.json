{
  "uid": "3c63c29caf82b722",
  "annotations": {
    "example": "bad",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_anthropic_claude-3.5-sonnet:beta_temp1.00_maxtokens2048_rng3_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          0,
          0,
          2,
          0,
          1,
          1,
          5
        ],
        [
          5,
          0,
          0,
          2,
          0,
          0,
          0,
          5
        ],
        [
          5,
          0,
          0,
          2,
          2,
          0,
          0,
          5
        ],
        [
          5,
          0,
          0,
          0,
          0,
          2,
          0,
          5
        ],
        [
          5,
          0,
          0,
          2,
          0,
          0,
          2,
          5
        ],
        [
          5,
          0,
          1,
          2,
          0,
          1,
          0,
          5
        ],
        [
          5,
          0,
          0,
          2,
          2,
          0,
          0,
          5
        ],
        [
          5,
          0,
          1,
          0,
          0,
          0,
          0,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ]
      ],
      "output": [
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          0,
          0,
          2,
          0,
          2,
          1,
          5
        ],
        [
          5,
          0,
          0,
          2,
          0,
          2,
          1,
          5
        ],
        [
          5,
          2,
          2,
          2,
          2,
          2,
          2,
          5
        ],
        [
          5,
          2,
          2,
          2,
          0,
          2,
          0,
          5
        ],
        [
          5,
          1,
          0,
          2,
          2,
          0,
          1,
          5
        ],
        [
          5,
          1,
          1,
          2,
          2,
          2,
          1,
          5
        ],
        [
          5,
          1,
          0,
          2,
          2,
          2,
          1,
          5
        ],
        [
          5,
          1,
          1,
          2,
          2,
          2,
          1,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ]
      ]
    },
    {
      "input": [
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          0,
          0,
          2,
          0,
          0,
          0,
          0,
          0,
          5
        ],
        [
          5,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          5
        ],
        [
          5,
          0,
          0,
          0,
          2,
          0,
          2,
          0,
          0,
          5
        ],
        [
          5,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          5
        ],
        [
          5,
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ]
      ],
      "output": [
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          0,
          1,
          2,
          0,
          2,
          2,
          2,
          2,
          5
        ],
        [
          5,
          1,
          0,
          0,
          0,
          2,
          2,
          2,
          2,
          5
        ],
        [
          5,
          2,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          5
        ],
        [
          5,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          5
        ],
        [
          5,
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ]
      ]
    },
    {
      "input": [
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          1,
          0,
          2,
          0,
          0,
          0,
          1,
          5
        ],
        [
          5,
          1,
          0,
          0,
          0,
          2,
          0,
          0,
          5
        ],
        [
          5,
          0,
          0,
          0,
          0,
          2,
          1,
          0,
          5
        ],
        [
          5,
          0,
          0,
          0,
          1,
          1,
          0,
          2,
          5
        ],
        [
          5,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ]
      ],
      "output": [
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          1,
          1,
          2,
          0,
          0,
          0,
          1,
          5
        ],
        [
          5,
          1,
          0,
          0,
          0,
          2,
          0,
          0,
          5
        ],
        [
          5,
          2,
          0,
          0,
          0,
          2,
          1,
          0,
          5
        ],
        [
          5,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          5
        ],
        [
          5,
          2,
          2,
          2,
          1,
          1,
          1,
          1,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ]
      ]
    },
    {
      "input": [
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          0,
          0,
          0,
          2,
          1,
          0,
          0,
          5
        ],
        [
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          5
        ],
        [
          5,
          2,
          0,
          0,
          0,
          0,
          1,
          0,
          5
        ],
        [
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          5
        ],
        [
          5,
          0,
          2,
          0,
          0,
          0,
          0,
          0,
          5
        ],
        [
          5,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          5
        ],
        [
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ]
      ],
      "output": [
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          0,
          0,
          2,
          2,
          2,
          0,
          0,
          5
        ],
        [
          5,
          0,
          0,
          0,
          0,
          2,
          0,
          0,
          5
        ],
        [
          5,
          2,
          0,
          0,
          0,
          0,
          1,
          0,
          5
        ],
        [
          5,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          5
        ],
        [
          5,
          1,
          2,
          0,
          0,
          0,
          1,
          1,
          5
        ],
        [
          5,
          0,
          0,
          1,
          0,
          1,
          0,
          1,
          5
        ],
        [
          5,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# magnetism, lines, borders\n\n# description:\n# In the input, you will see a rectangular border made of grey pixels, with red and blue pixels scattered inside the border.\n# To make the output, draw lines from each of the red and blue pixels towards the nearest border. The lines from red pixels \n# should be red, and the lines from blue pixels should be blue. These lines should stop when they hit the grey border.\n# If a pixel is equidistant from two or more sides of the border, draw lines to all equidistant sides.\n\ndef main(input_grid):\n    # Copy the input grid to the output grid\n    output_grid = np.copy(input_grid)\n\n    # Find the dimensions of the grid\n    height, width = input_grid.shape\n\n    # Find the red and blue pixels\n    red_pixels = np.where(input_grid == Color.RED)\n    blue_pixels = np.where(input_grid == Color.BLUE)\n\n    # Function to draw lines to nearest borders\n    def draw_to_nearest_borders(x, y, color):\n        distances = [y, height-1-y, x, width-1-x]  # top, bottom, left, right\n        min_distance = min(distances)\n        \n        if distances[0] == min_distance:  # top\n            draw_line(output_grid, x, y, length=None, color=color, direction=(0, -1), stop_at_color=[Color.GREY])\n        if distances[1] == min_distance:  # bottom\n            draw_line(output_grid, x, y, length=None, color=color, direction=(0, 1), stop_at_color=[Color.GREY])\n        if distances[2] == min_distance:  # left\n            draw_line(output_grid, x, y, length=None, color=color, direction=(-1, 0), stop_at_color=[Color.GREY])\n        if distances[3] == min_distance:  # right\n            draw_line(output_grid, x, y, length=None, color=color, direction=(1, 0), stop_at_color=[Color.GREY])\n\n    # Draw lines from red pixels\n    for i in range(len(red_pixels[0])):\n        y, x = red_pixels[0][i], red_pixels[1][i]\n        draw_to_nearest_borders(x, y, Color.RED)\n\n    # Draw lines from blue pixels\n    for i in range(len(blue_pixels[0])):\n        y, x = blue_pixels[0][i], blue_pixels[1][i]\n        draw_to_nearest_borders(x, y, Color.BLUE)\n\n    return output_grid\n\ndef generate_input():\n    # Make a random sized grid (minimum 5x5, maximum 10x10)\n    height = np.random.randint(5, 11)\n    width = np.random.randint(5, 11)\n    grid = np.zeros((height, width), dtype=int)\n\n    # Create grey border\n    grid[0, :] = Color.GREY\n    grid[-1, :] = Color.GREY\n    grid[:, 0] = Color.GREY\n    grid[:, -1] = Color.GREY\n\n    # Scatter red and blue pixels inside the border\n    num_pixels = np.random.randint(3, (height-2)*(width-2)//2)\n    for _ in range(num_pixels):\n        y = np.random.randint(1, height-1)\n        x = np.random.randint(1, width-1)\n        color = np.random.choice([Color.RED, Color.BLUE])\n        if grid[y, x] == Color.BLACK:  # Only place if the spot is empty\n            grid[y, x] = color\n\n    return grid"
}