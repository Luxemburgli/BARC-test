{
  "uid": "fbe135808fd8a20d",
  "annotations": {
    "example": "good",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng2_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          6,
          9,
          8,
          5,
          6,
          7,
          9,
          3
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          0,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          0,
          8,
          8,
          8,
          8,
          8,
          8,
          8
        ],
        [
          0,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          0,
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          0,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          4,
          1,
          2,
          3,
          6,
          1,
          5
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          0,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          0,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          9,
          4,
          4,
          2,
          3,
          1,
          7
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          0,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          0,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          0,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          0,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          6,
          5,
          3,
          6,
          9,
          5,
          9,
          1,
          6
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          0,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          0,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          0,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          0,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          0,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    output_grid = np.copy(input_grid)\n\n    # Get the top row colors\n    top_row_colors = input_grid[0]\n\n    # Find the grey line column index (last grey appearance in the row)\n    grey_col_idx = np.where(input_grid == Color.GREY)[1][-1]\n\n    # For each column, copy the color from the top row until bottom of the grid, skipping grey line\n    for col in range(grey_col_idx):\n        color = top_row_colors[col]\n        if color != Color.BLACK:  # Only color non-black columns\n            draw_line(output_grid, col, 1, length=None, color=color, direction=(0, 1))\n\n    return output_grid\n\ndef generate_input() -> np.ndarray:\n\n    # Decide the grid size \n    n = np.random.randint(5, 10)\n    m = np.random.randint(5, 10)\n    grid = np.zeros((m, n), dtype=int)\n\n    # Select colors for the top row, excluding black\n    top_row_colors = np.random.choice(list(Color.NOT_BLACK), n, replace=True)\n    \n    # Assign these colors to the top row\n    grid[0, :] = top_row_colors\n\n    # Define the position of the grey line\n    grey_col_idx = np.random.randint(1, n)\n\n    # Draw the grey line vertically across the picked column\n    draw_line(grid, grey_col_idx, 1, length=None, color=Color.GREY, direction=(0, 1))\n\n    return grid"
}