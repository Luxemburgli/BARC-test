{
  "uid": "3b810c7fa69e39a8",
  "annotations": {
    "example": "good",
    "code": "ok"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng1_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          7,
          6,
          4,
          6,
          9,
          8,
          5,
          6,
          7,
          9,
          3,
          3
        ],
        [
          7,
          7,
          9,
          7,
          5,
          7,
          1,
          6,
          5,
          8,
          3,
          4
        ],
        [
          8,
          2,
          7,
          7,
          3,
          7,
          1,
          8,
          3,
          3,
          3,
          8
        ],
        [
          4,
          5,
          9,
          8,
          9,
          7,
          4,
          4,
          3,
          7,
          8,
          5
        ],
        [
          6,
          6,
          8,
          5,
          9,
          1,
          8,
          8,
          4,
          4,
          5,
          4
        ],
        [
          6,
          1,
          3,
          8,
          9,
          8,
          1,
          3,
          2,
          5,
          6,
          7
        ],
        [
          2,
          9,
          2,
          9,
          2,
          8,
          8,
          7,
          6,
          2,
          7,
          9
        ],
        [
          1,
          9,
          5,
          6,
          1,
          1,
          4,
          8,
          1,
          1,
          7,
          8
        ]
      ],
      "output": [
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          6,
          6,
          3,
          5,
          3,
          1,
          8,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          2,
          9,
          3,
          9,
          3,
          8,
          8,
          3,
          3,
          3,
          3,
          3
        ],
        [
          1,
          9,
          3,
          6,
          3,
          1,
          4,
          3,
          3,
          3,
          3,
          3
        ]
      ]
    },
    {
      "input": [
        [
          7,
          4,
          1,
          2,
          3,
          6,
          1,
          5,
          2,
          7
        ],
        [
          9,
          1,
          8,
          9,
          5,
          9,
          9,
          8,
          8,
          9
        ],
        [
          6,
          7,
          1,
          7,
          9,
          6,
          3,
          3,
          4,
          4
        ],
        [
          7,
          4,
          1,
          8,
          8,
          6,
          7,
          1,
          3,
          2
        ],
        [
          6,
          1,
          8,
          2,
          8,
          5,
          3,
          3,
          4,
          8
        ],
        [
          6,
          7,
          2,
          6,
          7,
          4,
          9,
          5,
          5,
          7
        ],
        [
          6,
          7,
          7,
          9,
          9,
          8,
          8,
          8,
          2,
          4
        ]
      ],
      "output": [
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          9,
          1,
          8,
          9,
          3,
          9,
          3,
          3,
          3,
          9
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          6,
          7,
          2,
          6,
          3,
          4,
          3,
          3,
          3,
          7
        ],
        [
          6,
          7,
          7,
          9,
          3,
          8,
          3,
          3,
          3,
          4
        ]
      ]
    },
    {
      "input": [
        [
          5,
          9,
          4,
          4,
          2,
          3,
          1,
          7,
          8,
          6,
          7
        ],
        [
          5,
          6,
          1,
          8,
          4,
          7,
          3,
          8,
          1,
          1,
          9
        ],
        [
          3,
          7,
          5,
          2,
          4,
          6,
          8,
          7,
          5,
          6,
          3
        ],
        [
          9,
          4,
          9,
          6,
          1,
          5,
          3,
          5,
          1,
          1,
          8
        ],
        [
          7,
          8,
          2,
          9,
          3,
          1,
          3,
          4,
          3,
          1,
          4
        ],
        [
          4,
          1,
          7,
          4,
          9,
          9,
          6,
          8,
          1,
          7,
          3
        ],
        [
          5,
          1,
          3,
          1,
          5,
          3,
          9,
          4,
          6,
          6,
          8
        ]
      ],
      "output": [
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ]
      ]
    },
    {
      "input": [
        [
          6,
          5,
          3,
          6,
          9,
          5,
          9,
          1,
          6
        ],
        [
          5,
          6,
          5,
          6,
          9,
          9,
          7,
          6,
          6
        ],
        [
          6,
          8,
          9,
          4,
          1,
          7,
          7,
          6,
          5
        ],
        [
          1,
          2,
          6,
          9,
          2,
          8,
          7,
          1,
          7
        ],
        [
          4,
          8,
          3,
          5,
          7,
          2,
          6,
          3,
          3
        ],
        [
          9,
          7,
          8,
          8,
          4,
          1,
          3,
          2,
          8
        ],
        [
          8,
          9,
          7,
          9,
          4,
          1,
          6,
          1,
          4
        ],
        [
          5,
          5,
          2,
          8,
          1,
          2,
          4,
          7,
          1
        ],
        [
          5,
          8,
          7,
          3,
          3,
          3,
          6,
          2,
          4
        ]
      ],
      "output": [
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          5,
          6,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          6,
          8,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          1,
          2,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          8,
          9,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          5,
          5,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# color guide, pixel manipulation\n\n# description:\n# In the input, you will see a rectangular grid filled with various colored pixels and one distinct \"guide color\".\n# For each pixel of the guide color, set the entire row and column containing that pixel to match that pixel's color in the output grid.\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    output_grid = np.copy(input_grid)\n    guide_color = Color.GREEN  # We'll use green as the guide color\n\n    rows, cols = input_grid.shape\n\n    # Find all positions of guide_color\n    guide_positions = [(x, y) for x in range(rows) for y in range(cols) if input_grid[x, y] == guide_color]\n\n    for x, y in guide_positions:\n        # Set the entire row to the guide color's original color\n        output_grid[x, :] = guide_color\n        # Set the entire column to the guide color's original color\n        output_grid[:, y] = guide_color\n        \n    return output_grid\n\ndef generate_input() -> np.ndarray:\n    # Define the grid size\n    rows = np.random.randint(5, 15)\n    cols = np.random.randint(5, 15)\n    \n    # Initialize an empty grid\n    input_grid = np.zeros((rows, cols), dtype=int)\n\n    # Fill the grid with random colors\n    for x in range(rows):\n        for y in range(cols):\n            input_grid[x, y] = np.random.choice(list(Color.NOT_BLACK))\n\n    # Place the guide color at a few random positions\n    num_guides = np.random.randint(1, min(rows, cols) // 2)\n    for _ in range(num_guides):\n        guide_x, guide_y = np.random.randint(rows), np.random.randint(cols)\n        input_grid[guide_x, guide_y] = Color.GREEN\n\n    return input_grid"
}