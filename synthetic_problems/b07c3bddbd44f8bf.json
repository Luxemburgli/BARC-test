{
  "uid": "b07c3bddbd44f8bf",
  "annotations": {
    "example": "bad",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng2_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          6,
          6,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          8,
          8,
          8,
          0,
          0,
          6,
          9,
          6,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          8,
          6,
          8,
          0,
          0,
          6,
          6,
          6,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          8,
          8,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2,
          2,
          2
        ],
        [
          0,
          0,
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2,
          2,
          2
        ],
        [
          0,
          0,
          5,
          5,
          8,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2,
          4,
          2
        ],
        [
          0,
          0,
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2,
          2,
          2
        ]
      ],
      "output": [
        [
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          4,
          2
        ],
        [
          2,
          2,
          2,
          2
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          4,
          2
        ],
        [
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          7,
          7,
          7,
          7
        ],
        [
          0,
          0,
          0,
          0,
          5,
          4,
          5,
          0,
          0,
          0,
          0,
          0,
          7,
          7,
          7,
          7
        ],
        [
          0,
          0,
          0,
          0,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          7,
          7,
          2,
          7
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          7,
          7,
          7,
          7
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          7,
          7,
          7,
          7
        ],
        [
          7,
          7,
          7,
          7
        ],
        [
          7,
          7,
          2,
          7
        ],
        [
          7,
          7,
          7,
          7
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          7,
          7,
          7,
          7
        ],
        [
          7,
          7,
          2,
          7
        ],
        [
          7,
          7,
          7,
          7
        ],
        [
          7,
          7,
          7,
          7
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          9,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          3,
          9,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          9,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          9,
          1,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          9,
          9,
          9
        ],
        [
          9,
          1,
          9
        ],
        [
          9,
          9,
          9
        ],
        [
          0,
          0,
          0
        ],
        [
          0,
          0,
          0
        ],
        [
          0,
          0,
          0
        ],
        [
          0,
          0,
          0
        ],
        [
          0,
          0,
          0
        ],
        [
          0,
          0,
          0
        ],
        [
          0,
          0,
          0
        ],
        [
          0,
          0,
          0
        ],
        [
          9,
          9,
          9
        ],
        [
          9,
          1,
          9
        ],
        [
          9,
          9,
          9
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          6,
          6,
          6,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          6,
          3,
          6,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          6,
          6,
          6,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2,
          2,
          2
        ],
        [
          0,
          0,
          3,
          3,
          3,
          0,
          0,
          3,
          3,
          3,
          3,
          0,
          0,
          0,
          0,
          2,
          2,
          2,
          2
        ],
        [
          0,
          0,
          3,
          9,
          3,
          0,
          0,
          3,
          3,
          3,
          3,
          0,
          0,
          0,
          0,
          2,
          2,
          9,
          2
        ],
        [
          0,
          0,
          3,
          3,
          3,
          0,
          0,
          3,
          3,
          1,
          3,
          0,
          0,
          0,
          0,
          2,
          2,
          2,
          2
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          3,
          3,
          3,
          3,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          1,
          3
        ],
        [
          3,
          3,
          3,
          3
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          1,
          3
        ],
        [
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# objects, alignment by color, reflection\n\n# description:\n# In the input you will see some objects scattered around on a black grid. Each object has a pixel of some unique color that distinguishes it.\n# To make the output, reflect the objects vertically, and place each reflected object such that the unique colored pixel in the reflection overlaps with the unique colored pixel in the original object.\n# The output grid should be the smallest possible size that contains all the objects (after they have been placed correctly), which for all the inputs here might be larger than the input but should be appropriately cropped.\n\ndef main(input_grid):\n    # Plan:\n    # 1. Find the objects from the input grid\n    # 2. Reflect each object vertically\n    # 3. Place the reflected objects in the output grid such that the unique colored pixel of the reflection overlaps with that of the original object\n    # 4. Crop the output grid to the smallest size that contains all the aligned objects\n\n    # Step 1: Find the objects from the input grid\n    objects = find_connected_components(input_grid, monochromatic=False, connectivity=8)\n    sprites = [crop(obj, background=Color.BLACK) for obj in objects]\n\n    # Step 2: Reflect each object vertically\n    reflected_sprites = [np.flipud(sprite) for sprite in sprites]\n\n    # Step 3: Create an empty output grid larger than or equal to the input grid\n    output_grid = np.full((input_grid.shape[0] * 2, input_grid.shape[1]), Color.BLACK)\n\n    for original_sprite, reflected_sprite in zip(sprites, reflected_sprites):\n        # Find the unique colored pixel in the original object\n        unique_color = next(color for color in np.unique(original_sprite) if color != Color.BLACK)\n        original_pixel_pos = np.argwhere(original_sprite == unique_color)[0]\n\n        # Find the point in the reflected sprite that should align with the original unique colored pixel\n        reflected_pixel_pos = np.argwhere(reflected_sprite == unique_color)[0]\n\n        # Offset to place the reflected sprite\n        x_offset = original_pixel_pos[0] - reflected_pixel_pos[0]\n        y_offset = original_pixel_pos[1] - reflected_pixel_pos[1] + input_grid.shape[0]\n\n        # Place both the original and reflected objects in their aligned positions in the output grid\n        blit_sprite(output_grid, original_sprite, 0, y_offset, background=Color.BLACK)\n        blit_sprite(output_grid, reflected_sprite, input_grid.shape[0], y_offset, background=Color.BLACK)\n\n    # Step 4: Crop the output grid to the smallest size that contains all the aligned objects\n    output_grid = crop(output_grid)\n\n    return output_grid\n\n\ndef generate_input():\n    n, m = np.random.randint(10, 20), np.random.randint(10, 20)\n    input_grid = np.full((n, m), Color.BLACK)\n\n    n_objects = np.random.randint(2, 5)\n    for _ in range(n_objects):\n        sprite_size = np.random.randint(3, 5)\n        sprite = np.full((sprite_size, sprite_size), Color.BLACK)\n\n        # Create a random object with a unique colored pixel\n        unique_color = np.random.choice(list(Color.NOT_BLACK))\n        other_color = np.random.choice([c for c in Color.NOT_BLACK if c != unique_color])\n\n        # Place unique colored pixel\n        sprite[sprite_size // 2, sprite_size // 2] = unique_color\n\n        # Fill the rest of the object with the other color\n        for i in range(sprite_size):\n            for j in range(sprite_size):\n                if sprite[i, j] != unique_color:\n                    sprite[i, j] = other_color\n\n        x, y = random_free_location_for_sprite(input_grid, sprite, padding=2, padding_connectivity=8)\n        blit_sprite(input_grid, sprite, x, y)\n\n    return input_grid"
}