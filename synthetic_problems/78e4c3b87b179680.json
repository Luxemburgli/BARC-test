{
  "uid": "78e4c3b87b179680",
  "annotations": {
    "example": "good",
    "code": "good"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng0_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          9,
          0,
          9,
          9,
          9,
          9,
          9,
          9,
          0,
          9,
          9,
          0,
          0
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          0,
          4,
          4,
          0,
          4
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          0
        ],
        [
          0,
          8,
          8,
          8,
          0,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          8
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          0,
          0
        ],
        [
          7,
          7,
          7,
          7,
          7,
          7,
          0,
          0,
          7,
          7,
          7,
          0,
          7
        ],
        [
          6,
          0,
          6,
          0,
          6,
          6,
          0,
          6,
          6,
          6,
          6,
          6,
          0
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          0,
          5,
          5,
          5,
          0,
          5,
          5
        ]
      ],
      "output": [
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          8
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          7,
          7,
          7,
          7,
          7,
          7,
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ]
      ]
    },
    {
      "input": [
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          0,
          3,
          3,
          3
        ],
        [
          7,
          7,
          7,
          7,
          0,
          7,
          7,
          0,
          7,
          7,
          7,
          7
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          0,
          0
        ],
        [
          0,
          3,
          3,
          0,
          3,
          0,
          3,
          0,
          0,
          3,
          3,
          3
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          0,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          0,
          4,
          4,
          4,
          4,
          0,
          0,
          4,
          0,
          4
        ],
        [
          3,
          3,
          3,
          3,
          0,
          3,
          0,
          3,
          0,
          3,
          3,
          3
        ]
      ],
      "output": [
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          7,
          7,
          7,
          7,
          7,
          7,
          7,
          7,
          7,
          7,
          7,
          7
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ]
      ]
    },
    {
      "input": [
        [
          0,
          5,
          5,
          0,
          5,
          5,
          5,
          5,
          0,
          5,
          5,
          5
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          0,
          6,
          6,
          6,
          6,
          6
        ],
        [
          5,
          5,
          0,
          5,
          5,
          0,
          0,
          0,
          5,
          5,
          0,
          5
        ],
        [
          2,
          2,
          2,
          0,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          8,
          8,
          8,
          0,
          8,
          0,
          8,
          0,
          8,
          8,
          8,
          8
        ],
        [
          9,
          9,
          9,
          0,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          0
        ],
        [
          2,
          2,
          0,
          0,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          0,
          0,
          3,
          3
        ],
        [
          0,
          6,
          6,
          0,
          0,
          6,
          6,
          0,
          0,
          0,
          6,
          6
        ]
      ],
      "output": [
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          8
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6
        ]
      ]
    },
    {
      "input": [
        [
          0,
          2,
          2,
          2,
          0,
          2,
          2,
          2,
          2,
          2,
          2,
          0,
          2,
          0
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          0,
          0,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          9,
          0,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          0,
          3,
          0,
          3,
          3,
          3,
          3,
          3,
          0,
          3,
          3,
          3,
          3,
          3
        ],
        [
          2,
          0,
          2,
          2,
          0,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          3,
          0,
          0,
          0,
          3,
          0,
          3,
          3,
          3,
          3,
          3,
          3,
          0,
          3
        ],
        [
          1,
          1,
          1,
          1,
          1,
          0,
          1,
          1,
          0,
          1,
          1,
          1,
          1,
          1
        ],
        [
          4,
          0,
          4,
          0,
          4,
          4,
          0,
          4,
          4,
          4,
          4,
          4,
          0,
          4
        ],
        [
          9,
          0,
          9,
          9,
          9,
          9,
          9,
          9,
          0,
          9,
          0,
          9,
          0,
          9
        ]
      ],
      "output": [
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9,
          9
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# patterns, lines, occlusion\n\n# description:\n# In the input, you will see vertical bars of different colors on a black background. Some pixels in the bars might be occluded by black pixels.\n# For each vertical line in the input, fill any black pixels by the color of the nearest non-black pixel above or below it in the same column.\n\ndef main(input_grid):\n    # Create output grid as a copy of the input\n    output_grid = np.copy(input_grid)\n    \n    # Get dimensions\n    n, m = input_grid.shape\n    \n    # Fill each column\n    for x in range(n):\n        for y in range(m):\n            if input_grid[x, y] == Color.BLACK:\n                # Look above\n                above_color = Color.BLACK\n                for k in range(y-1, -1, -1):\n                    if input_grid[x, k] != Color.BLACK:\n                        above_color = input_grid[x, k]\n                        break\n                        \n                # Look below\n                below_color = Color.BLACK\n                for k in range(y+1, m):\n                    if input_grid[x, k] != Color.BLACK:\n                        below_color = input_grid[x, k]\n                        break\n                \n                # Fill black pixels with the nearest non-black color\n                if above_color != Color.BLACK:\n                    output_grid[x, y] = above_color\n                elif below_color != Color.BLACK:\n                    output_grid[x, y] = below_color\n                # If both are black, leave it as black\n    \n    return output_grid\n\n\ndef generate_input():\n    # Parameters\n    height = np.random.randint(10, 20)\n    width = np.random.randint(5, 10)\n    \n    # Create a black grid\n    grid = np.zeros((width, height), dtype=int)\n    \n    # Draw vertical colored bars\n    for col in range(width):\n        color = random.choice(list(Color.NOT_BLACK))\n        draw_line(grid, col, 0, length=height, color=color, direction=(0, 1))\n    \n    # Randomly occlude some parts of the bars with black pixels\n    for col in range(width):\n        for row in range(height):\n            if random.random() < 0.2:\n                grid[col, row] = Color.BLACK\n\n    return grid"
}