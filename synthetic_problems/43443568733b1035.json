{
  "uid": "43443568733b1035",
  "annotations": {
    "example": "ok",
    "code": "ok"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_6_gpt-4o_temp1.00_maxtokens2048_rng0_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          9,
          0,
          0,
          0,
          0,
          0,
          9,
          0
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          5,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          9,
          0,
          9
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          9,
          9,
          0,
          0,
          0,
          0,
          9,
          9
        ],
        [
          9,
          0,
          0,
          0,
          4,
          4,
          5,
          5
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          5,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          9
        ],
        [
          0,
          0,
          0,
          0,
          0,
          9,
          0,
          9
        ],
        [
          4,
          4,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          4,
          0,
          0,
          4,
          4,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          4,
          8,
          0
        ],
        [
          0,
          0,
          0,
          7,
          0,
          0,
          0
        ],
        [
          0,
          8,
          7,
          0,
          0,
          0,
          0
        ],
        [
          7,
          0,
          0,
          4,
          0,
          0,
          0
        ],
        [
          7,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          4,
          0,
          0,
          4
        ],
        [
          8,
          0,
          0,
          0,
          4,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          4,
          8,
          8
        ],
        [
          0,
          0,
          0,
          7,
          7,
          8,
          0
        ],
        [
          0,
          8,
          7,
          7,
          0,
          0,
          0
        ],
        [
          7,
          7,
          7,
          4,
          4,
          0,
          0
        ],
        [
          7,
          7,
          0,
          4,
          0,
          0,
          0
        ],
        [
          7,
          0,
          0,
          4,
          4,
          0,
          4
        ],
        [
          8,
          8,
          0,
          4,
          4,
          4,
          4
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          8
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          7,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          8
        ],
        [
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          8
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          7,
          7
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          9,
          0,
          0,
          4,
          9
        ],
        [
          0,
          0,
          0,
          7,
          0,
          9,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          7
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          4,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          4,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          9,
          0,
          0,
          0,
          9,
          9,
          0,
          4,
          9
        ],
        [
          0,
          0,
          0,
          7,
          7,
          9,
          9,
          4,
          9
        ],
        [
          0,
          0,
          0,
          7,
          0,
          9,
          4,
          4,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          4,
          0,
          7
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# patterns, colors as indicators, repeating patterns\n\n# description:\n# In the input grid, you will find a random arrangement of colors on a black background.\n# Each color serves as an indicator for a unique pattern sprouting from that location.\n# For each colored pixel in the input grid, copy a predefined small pattern onto the corresponding position in the output grid.\n# Ensure that patterns can overlap but not overwrite each other, giving precedence to the first pattern placed.\n\ndef main(input_grid):\n    # First, get the grid size\n    n, m = input_grid.shape\n\n    # Determine the background color (most common color)\n    background_color = np.bincount(input_grid.flatten()).argmax()\n\n    # Define small unique patterns for each color except black\n    def create_pattern(color):\n        pattern_size = 3\n        pattern = np.full((pattern_size, pattern_size), background_color)\n        pattern[1, 1] = color\n        pattern[1, 2] = color\n        pattern[2, 1] = color\n        return pattern\n\n    patterns = {color: create_pattern(color) for color in Color.NOT_BLACK}\n\n    output_grid = np.full((n, m), background_color)\n\n    for x in range(n):\n        for y in range(m):\n            if input_grid[x, y] != background_color:\n                pattern = patterns[input_grid[x, y]]\n                blit_sprite(output_grid, pattern, x - 1, y - 1, background=background_color)\n\n    return output_grid\n\ndef generate_input():\n    # Define grid size\n    n, m = np.random.randint(5, 10, size=2)\n    input_grid = np.full((n, m), Color.BLACK)\n\n    # Randomly place colored pixels\n    num_colors = np.random.randint(3, 6)\n    colors = np.random.choice(list(Color.NOT_BLACK), num_colors, replace=False)\n    \n    for _ in range(np.random.randint(5, 15)):\n        x, y = np.random.randint(0, n), np.random.randint(0, m)\n        input_grid[x, y] = np.random.choice(colors)\n\n    return input_grid"
}