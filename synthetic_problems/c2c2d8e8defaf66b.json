{
  "uid": "c2c2d8e8defaf66b",
  "annotations": {
    "example": "bad",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng1_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          3,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          3,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          3,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          3,
          3,
          0
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          3,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          3,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          3,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          3,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          3,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          3,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          3,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          3,
          1,
          1,
          1,
          1
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          3,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          3,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          3,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          3
        ],
        [
          0,
          0,
          0,
          0,
          1,
          3,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          3,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          3,
          3,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          3,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\ndef main(input_grid):\n    # make output grid\n    output_grid = np.copy(input_grid)\n\n    # find the coordinates of all blue pixels in the grid\n    blue_coords = np.argwhere(input_grid == Color.BLUE)\n    \n    # find the coordinates of all green pixels in the grid\n    green_coords = np.argwhere(input_grid == Color.GREEN)\n    \n    if blue_coords.size > 0:\n        # Define the leftmost and rightmost blue pixel coordinates\n        leftmost_blue = blue_coords[np.argmin(blue_coords[:, 1])]\n        rightmost_blue = blue_coords[np.argmax(blue_coords[:, 1])]\n        \n        # Draw horizontal blue line\n        draw_line(output_grid, leftmost_blue[0], leftmost_blue[1], length=None, color=Color.BLUE, direction=(0, 1))\n\n    if green_coords.size > 0:\n        # Define the topmost and bottommost green pixel coordinates\n        topmost_green = green_coords[np.argmin(green_coords[:, 0])]\n        bottommost_green = green_coords[np.argmax(green_coords[:, 0])]\n        \n        # Draw vertical green line\n        draw_line(output_grid, topmost_green[0], topmost_green[1], length=None, color=Color.GREEN, direction=(1, 0))\n\n    # If a blue and green line intersect, color the intersection purple\n    if blue_coords.size > 0 and green_coords.size > 0:\n        blue_line_coords = np.argwhere(output_grid == Color.BLUE)\n        green_line_coords = np.argwhere(output_grid == Color.GREEN)\n        \n        # Find intersection points\n        intersection_coords = [tuple(x) for x in blue_line_coords if any((x == y).all() for y in green_line_coords)]\n        \n        for (x, y) in intersection_coords:\n            output_grid[x, y] = Color.PURPLE\n\n    return output_grid\n\ndef generate_input():\n    # Make a random sized grid\n    n, m = np.random.randint(5, 10), np.random.randint(5, 10)\n    grid = np.zeros((n, m), dtype=int)\n\n    # Place a random number of blue and green pixels\n    num_blue = np.random.randint(1, min(n, m) + 1)\n    num_green = np.random.randint(1, min(n, m) + 1)\n\n    blue_sprite = np.array([Color.BLUE]).reshape(1, 1)\n    for _ in range(num_blue):\n        x, y = random_free_location_for_sprite(grid, blue_sprite, padding=0)\n        blit_sprite(grid, blue_sprite, x, y)\n\n    green_sprite = np.array([Color.GREEN]).reshape(1, 1)\n    for _ in range(num_green):\n        x, y = random_free_location_for_sprite(grid, green_sprite, padding=0)\n        blit_sprite(grid, green_sprite, x, y)\n\n    return grid"
}