{
  "uid": "095371d218d98811",
  "annotations": {
    "example": "ok",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_anthropic_claude-3.5-sonnet:beta_temp1.00_maxtokens2048_rng2_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          6,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          2,
          1
        ],
        [
          2,
          1,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          1,
          2,
          2
        ],
        [
          2,
          1,
          2,
          1,
          1,
          1,
          1,
          1,
          2,
          1,
          2,
          1
        ],
        [
          2,
          1,
          2,
          1,
          2,
          2,
          2,
          1,
          2,
          1,
          2,
          2
        ],
        [
          2,
          1,
          2,
          1,
          2,
          6,
          2,
          1,
          2,
          1,
          2,
          0
        ],
        [
          2,
          1,
          2,
          1,
          2,
          2,
          2,
          1,
          2,
          1,
          2,
          2
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          0,
          0,
          0,
          2,
          1,
          1,
          1,
          1,
          1,
          2
        ],
        [
          0,
          0,
          0,
          2,
          1,
          2,
          2,
          2,
          1,
          2
        ],
        [
          0,
          0,
          0,
          2,
          1,
          2,
          1,
          2,
          1,
          2
        ],
        [
          0,
          0,
          0,
          2,
          1,
          2,
          2,
          2,
          1,
          2
        ],
        [
          0,
          0,
          0,
          2,
          1,
          1,
          1,
          1,
          1,
          2
        ],
        [
          0,
          0,
          0,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ],
        [
          2,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          2,
          1,
          1
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          1,
          2,
          2,
          2
        ],
        [
          2,
          1,
          1,
          1,
          1,
          1,
          2,
          1,
          2,
          1,
          1
        ],
        [
          2,
          1,
          2,
          2,
          2,
          1,
          2,
          1,
          2,
          2,
          2
        ],
        [
          2,
          1,
          2,
          4,
          2,
          1,
          2,
          1,
          2,
          0,
          0
        ],
        [
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          2
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          2,
          2,
          2,
          2,
          2,
          2,
          2,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          2,
          2,
          2,
          2,
          2,
          2,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          2,
          1,
          1
        ],
        [
          1,
          1,
          2,
          2,
          2,
          1,
          2,
          1,
          1
        ],
        [
          1,
          1,
          2,
          5,
          2,
          1,
          2,
          1,
          1
        ],
        [
          1,
          1,
          2,
          2,
          2,
          1,
          2,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# borders, growing, counting\n\n# description:\n# In the input, you will see a rectangular grid with a single non-black pixel of any color near the center.\n# To make the output, create a series of concentric borders around this pixel. Each border should be one pixel thick.\n# The colors of the borders should alternate between red and blue, starting with red for the innermost border.\n# The number of borders should equal the row number of the original colored pixel (counting from 0 at the top).\n\ndef main(input_grid):\n    n, m = input_grid.shape\n    output_grid = np.zeros((n, m), dtype=int)\n\n    # Find the non-black pixel\n    center = np.argwhere(input_grid != Color.BLACK)[0]\n    x, y = center\n\n    # Determine the number of borders to draw\n    num_borders = x\n\n    # Draw the borders\n    for i in range(num_borders):\n        color = Color.RED if i % 2 == 0 else Color.BLUE\n        \n        # Calculate the coordinates of the current border\n        top = max(0, x - i - 1)\n        bottom = min(n - 1, x + i + 1)\n        left = max(0, y - i - 1)\n        right = min(m - 1, y + i + 1)\n\n        # Draw the border\n        draw_line(output_grid, top, left, length=None, color=color, direction=(0, 1))\n        draw_line(output_grid, top, right, length=None, color=color, direction=(1, 0))\n        draw_line(output_grid, bottom, left, length=None, color=color, direction=(0, 1))\n        draw_line(output_grid, top, left, length=None, color=color, direction=(1, 0))\n\n    # Copy the original colored pixel\n    output_grid[x, y] = input_grid[x, y]\n\n    return output_grid\n\ndef generate_input():\n    # Make a rectangular black grid\n    n = np.random.randint(5, 15)\n    m = np.random.randint(5, 15)\n    grid = np.zeros((n, m), dtype=int)\n\n    # Place a single colored pixel near the center\n    center_x = n // 2 + np.random.randint(-2, 3)\n    center_y = m // 2 + np.random.randint(-2, 3)\n    \n    # Ensure the pixel is not on the edge\n    center_x = max(1, min(center_x, n-2))\n    center_y = max(1, min(center_y, m-2))\n\n    # Choose a random non-black color\n    color = np.random.choice(list(Color.NOT_BLACK))\n    grid[center_x, center_y] = color\n\n    return grid"
}