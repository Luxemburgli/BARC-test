{
  "uid": "866d36672ffa5b4d",
  "annotations": {
    "example": "ok",
    "code": "ok"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_anthropic_claude-3.5-sonnet:beta_temp1.00_maxtokens2048_rng3_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          5,
          5,
          0,
          0,
          1,
          1,
          0,
          0,
          3,
          3
        ],
        [
          0,
          0,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          3,
          3,
          3
        ],
        [
          0,
          0,
          0,
          7,
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          0
        ],
        [
          3,
          3,
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          0
        ],
        [
          3,
          3,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          5,
          5,
          0
        ],
        [
          0,
          0,
          0,
          0,
          5,
          5,
          0,
          0,
          0,
          5,
          5,
          0
        ],
        [
          0,
          1,
          1,
          0,
          5,
          5,
          0,
          6,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          3,
          3,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          3,
          3,
          4,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          1,
          9,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          1,
          1,
          1
        ],
        [
          0,
          0,
          0
        ],
        [
          5,
          5,
          5
        ],
        [
          0,
          0,
          0
        ],
        [
          3,
          3,
          3
        ],
        [
          0,
          0,
          0
        ],
        [
          2,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          8,
          8,
          0,
          0,
          0,
          0,
          0,
          5,
          5,
          0
        ],
        [
          0,
          0,
          8,
          8,
          0,
          4,
          4,
          0,
          0,
          5,
          5,
          4
        ],
        [
          0,
          0,
          0,
          0,
          0,
          4,
          4,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1
        ],
        [
          1,
          1,
          0,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          5,
          5,
          0,
          0,
          3,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          6,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0
        ],
        [
          0,
          3,
          0,
          3,
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          5,
          5
        ],
        [
          0,
          0
        ],
        [
          1,
          1
        ],
        [
          0,
          0
        ],
        [
          8,
          0
        ],
        [
          0,
          0
        ],
        [
          4,
          0
        ],
        [
          0,
          0
        ],
        [
          2,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          8,
          8,
          4,
          0,
          0,
          0,
          2,
          2,
          0,
          0
        ],
        [
          0,
          0,
          8,
          8,
          0,
          7,
          0,
          0,
          2,
          2,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          8,
          8,
          0,
          0,
          6,
          6,
          0,
          5,
          0,
          5,
          0,
          0
        ],
        [
          8,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          2,
          2
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          9,
          9,
          0
        ],
        [
          0,
          0,
          0,
          8,
          8,
          0,
          0,
          0,
          0,
          9,
          9,
          0
        ],
        [
          0,
          0,
          0,
          8,
          8,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          8,
          8,
          8
        ],
        [
          0,
          0,
          0
        ],
        [
          2,
          2,
          0
        ],
        [
          0,
          0,
          0
        ],
        [
          6,
          6,
          0
        ],
        [
          0,
          0,
          0
        ],
        [
          9,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          7,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          3,
          3,
          0,
          0,
          4,
          4,
          0,
          0,
          2,
          2,
          0,
          0
        ],
        [
          3,
          3,
          0,
          8,
          4,
          4,
          0,
          5,
          2,
          2,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          0,
          0,
          0,
          0
        ],
        [
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          2,
          2,
          0,
          0,
          1,
          1,
          0,
          0,
          2,
          2,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          2,
          2,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          7
        ],
        [
          0,
          4,
          4,
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          4,
          4
        ],
        [
          0,
          4,
          4,
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          4,
          4
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          4,
          4,
          0,
          0,
          7
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          4,
          4,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          4,
          4,
          4,
          4
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          2,
          2,
          2,
          2
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          3,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# counting, connecting colors, repeating pattern\n\n# description:\n# In the input, you will see a grid with multiple 2x2 squares of various colors and some single-pixel dots of various colors.\n# To create the output:\n# 1. Count the number of 2x2 squares for each color.\n# 2. For each color with at least one 2x2 square, create a horizontal line in the output grid.\n# 3. The length of each line should be equal to the count of 2x2 squares of that color.\n# 4. The lines should be ordered from top to bottom based on the count (longest line at the top).\n# 5. There should be one empty row between each colored line.\n# The output grid should be just large enough to contain all the lines with the required spacing.\n\ndef main(input_grid):\n    # Count 2x2 squares of each color\n    color_counts = {}\n    for x in range(input_grid.shape[0] - 1):\n        for y in range(input_grid.shape[1] - 1):\n            color = input_grid[x, y]\n            if color != Color.BLACK and np.all(input_grid[x:x+2, y:y+2] == color):\n                color_counts[color] = color_counts.get(color, 0) + 1\n    \n    # Sort colors by count (descending order)\n    sorted_colors = sorted(color_counts.items(), key=lambda x: x[1], reverse=True)\n    \n    # Calculate output grid size\n    max_count = sorted_colors[0][1] if sorted_colors else 0\n    output_height = len(sorted_colors) * 2 - 1 if sorted_colors else 0\n    output_grid = np.zeros((output_height, max_count), dtype=int)\n    \n    # Fill output grid\n    for i, (color, count) in enumerate(sorted_colors):\n        output_grid[i*2, :count] = color\n    \n    return output_grid\n\ndef generate_input():\n    # Create a 12x12 black background grid\n    grid = np.zeros((12, 12), dtype=int)\n    \n    # List of colors to use (excluding black)\n    colors = list(Color.NOT_BLACK)\n    np.random.shuffle(colors)\n    \n    # Create 2x2 squares\n    square = np.ones((2, 2), dtype=int)\n    for color in colors[:np.random.randint(3, 6)]:  # Use 3-5 colors\n        for _ in range(np.random.randint(1, 5)):  # 1-4 squares per color\n            x, y = random_free_location_for_sprite(grid, square, padding=1)\n            blit_sprite(grid, square * color, x, y)\n    \n    # Add single-pixel dots\n    for _ in range(np.random.randint(5, 10)):\n        color = np.random.choice(colors)\n        x, y = random_free_location_for_sprite(grid, np.array([[1]]))\n        grid[x, y] = color\n    \n    return grid"
}