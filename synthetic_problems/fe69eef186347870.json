{
  "uid": "fe69eef186347870",
  "annotations": {
    "example": "good",
    "code": "good"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_anthropic_claude-3.5-sonnet:beta_temp1.00_maxtokens2048_rng2_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          2,
          2,
          0,
          2,
          2,
          5,
          0,
          3,
          0,
          3,
          0,
          3,
          5,
          0,
          1,
          1,
          1,
          0,
          1
        ],
        [
          2,
          2,
          0,
          0,
          0,
          2,
          5,
          0,
          3,
          0,
          0,
          0,
          3,
          5,
          1,
          0,
          0,
          1,
          0,
          1
        ],
        [
          2,
          2,
          0,
          2,
          2,
          2,
          5,
          3,
          3,
          3,
          3,
          3,
          0,
          5,
          1,
          1,
          0,
          1,
          1,
          0
        ],
        [
          2,
          2,
          2,
          0,
          0,
          2,
          5,
          0,
          3,
          3,
          3,
          3,
          3,
          5,
          0,
          0,
          1,
          1,
          0,
          0
        ],
        [
          2,
          0,
          0,
          2,
          2,
          2,
          5,
          0,
          3,
          0,
          0,
          3,
          3,
          5,
          1,
          0,
          0,
          1,
          1,
          1
        ],
        [
          2,
          0,
          0,
          0,
          2,
          0,
          5,
          3,
          0,
          3,
          3,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          0,
          1
        ]
      ],
      "output": [
        [
          0,
          6,
          7,
          7,
          6,
          6
        ],
        [
          7,
          7,
          0,
          6,
          0,
          6
        ],
        [
          6,
          6,
          6,
          6,
          6,
          6
        ],
        [
          6,
          7,
          6,
          7,
          6,
          7
        ],
        [
          7,
          6,
          0,
          7,
          6,
          6
        ],
        [
          7,
          0,
          6,
          6,
          6,
          6
        ]
      ]
    },
    {
      "input": [
        [
          0,
          2,
          0,
          2,
          0,
          5,
          3,
          3,
          0,
          0,
          0,
          5,
          0,
          1,
          0,
          1,
          1
        ],
        [
          2,
          0,
          2,
          2,
          0,
          5,
          0,
          0,
          3,
          0,
          3,
          5,
          0,
          0,
          0,
          1,
          0
        ],
        [
          2,
          2,
          0,
          2,
          0,
          5,
          3,
          3,
          3,
          0,
          3,
          5,
          1,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          2,
          0,
          2,
          5,
          3,
          3,
          0,
          0,
          3,
          5,
          1,
          0,
          0,
          0,
          0
        ],
        [
          2,
          2,
          2,
          2,
          2,
          5,
          3,
          3,
          0,
          3,
          0,
          5,
          1,
          0,
          0,
          0,
          1
        ]
      ],
      "output": [
        [
          6,
          6,
          0,
          7,
          6
        ],
        [
          6,
          0,
          7,
          7,
          6
        ],
        [
          6,
          6,
          6,
          6,
          6
        ],
        [
          7,
          6,
          6,
          0,
          7
        ],
        [
          6,
          7,
          6,
          7,
          7
        ]
      ]
    },
    {
      "input": [
        [
          2,
          0,
          0,
          0,
          2,
          0,
          0,
          5,
          3,
          3,
          3,
          0,
          3,
          0,
          0,
          5,
          0,
          1,
          1,
          0,
          1,
          1,
          0
        ],
        [
          0,
          0,
          2,
          2,
          2,
          2,
          0,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          3,
          5,
          1,
          1,
          0,
          0,
          1,
          1,
          0
        ],
        [
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          5,
          0,
          3,
          3,
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          1,
          0,
          0,
          1,
          1
        ],
        [
          2,
          0,
          0,
          0,
          2,
          2,
          2,
          5,
          3,
          0,
          3,
          0,
          3,
          3,
          0,
          5,
          1,
          1,
          1,
          1,
          1,
          0,
          0
        ],
        [
          2,
          2,
          0,
          2,
          2,
          0,
          0,
          5,
          3,
          0,
          3,
          0,
          0,
          3,
          3,
          5,
          1,
          1,
          0,
          0,
          0,
          1,
          1
        ]
      ],
      "output": [
        [
          7,
          7,
          7,
          0,
          6,
          6,
          0
        ],
        [
          6,
          6,
          6,
          6,
          7,
          7,
          6
        ],
        [
          0,
          6,
          6,
          6,
          0,
          6,
          6
        ],
        [
          6,
          6,
          7,
          6,
          6,
          7,
          6
        ],
        [
          6,
          7,
          6,
          6,
          6,
          7,
          7
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          2,
          0,
          2,
          2,
          0,
          5,
          0,
          3,
          0,
          0,
          0,
          3,
          3,
          5,
          1,
          1,
          0,
          1,
          0,
          0,
          1
        ],
        [
          0,
          2,
          2,
          0,
          2,
          2,
          2,
          5,
          3,
          0,
          0,
          3,
          3,
          3,
          3,
          5,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ],
        [
          0,
          2,
          0,
          0,
          2,
          0,
          2,
          5,
          0,
          0,
          3,
          3,
          3,
          3,
          3,
          5,
          1,
          1,
          0,
          1,
          0,
          1,
          1
        ],
        [
          0,
          2,
          0,
          0,
          2,
          0,
          0,
          5,
          0,
          3,
          3,
          0,
          0,
          0,
          3,
          5,
          0,
          0,
          1,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          5,
          3,
          0,
          0,
          0,
          0,
          0,
          0,
          5,
          1,
          1,
          0,
          0,
          0,
          1,
          1
        ],
        [
          2,
          2,
          2,
          0,
          0,
          0,
          0,
          5,
          3,
          0,
          3,
          3,
          0,
          0,
          0,
          5,
          1,
          1,
          1,
          1,
          0,
          0,
          1
        ],
        [
          2,
          2,
          0,
          2,
          0,
          0,
          0,
          5,
          3,
          0,
          3,
          0,
          3,
          3,
          0,
          5,
          0,
          1,
          0,
          0,
          0,
          1,
          0
        ]
      ],
      "output": [
        [
          6,
          7,
          6,
          6,
          6,
          7,
          7
        ],
        [
          6,
          6,
          6,
          7,
          6,
          6,
          6
        ],
        [
          6,
          7,
          6,
          7,
          7,
          7,
          6
        ],
        [
          0,
          7,
          7,
          6,
          6,
          0,
          6
        ],
        [
          7,
          6,
          0,
          6,
          6,
          6,
          6
        ],
        [
          6,
          7,
          6,
          7,
          0,
          0,
          6
        ],
        [
          7,
          7,
          6,
          6,
          6,
          7,
          0
        ]
      ]
    }
  ],
  "code": "import numpy as np\nfrom typing import *\nfrom common import *\n\n# concepts:\n# bitmasks with separator, boolean logical operations, color guide, counting\n\n# description:\n# In the input you will see three colored bitmasks separated by two grey horizontal bars\n# The top bitmask is always red, the middle is always green, and the bottom is always blue\n# To make the output, apply the following rules:\n# 1. If all three bitmasks have a pixel set (logical AND), color that pixel yellow\n# 2. If exactly two bitmasks have a pixel set, color that pixel orange\n# 3. If only one bitmask has a pixel set, color that pixel pink\n# 4. If no bitmasks have a pixel set, leave that pixel black\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    # Find the grey horizontal bars\n    bar_indices = []\n    for y in range(input_grid.shape[1]):\n        if np.all(input_grid[:, y] == Color.GREY):\n            bar_indices.append(y)\n    \n    assert len(bar_indices) == 2, \"Expected two grey horizontal bars\"\n\n    # Extract the three bitmasks\n    red_mask = input_grid[:, :bar_indices[0]]\n    green_mask = input_grid[:, bar_indices[0]+1:bar_indices[1]]\n    blue_mask = input_grid[:, bar_indices[1]+1:]\n\n    # Create the output grid\n    output_grid = np.zeros_like(red_mask)\n\n    # Apply the rules\n    all_set = (red_mask == Color.RED) & (green_mask == Color.GREEN) & (blue_mask == Color.BLUE)\n    two_set = ((red_mask == Color.RED) & (green_mask == Color.GREEN) & (blue_mask != Color.BLUE)) | \\\n              ((red_mask == Color.RED) & (green_mask != Color.GREEN) & (blue_mask == Color.BLUE)) | \\\n              ((red_mask != Color.RED) & (green_mask == Color.GREEN) & (blue_mask == Color.BLUE))\n    one_set = (red_mask == Color.RED) ^ (green_mask == Color.GREEN) ^ (blue_mask == Color.BLUE)\n\n    output_grid[all_set] = Color.YELLOW\n    output_grid[two_set] = Color.ORANGE\n    output_grid[one_set] = Color.PINK\n\n    return output_grid\n\ndef generate_input() -> np.ndarray:\n    # Create three equally sized bitmasks\n    width, height = np.random.randint(3, 8), np.random.randint(3, 8)\n\n    red_mask = np.random.choice([Color.RED, Color.BLACK], size=(width, height))\n    green_mask = np.random.choice([Color.GREEN, Color.BLACK], size=(width, height))\n    blue_mask = np.random.choice([Color.BLUE, Color.BLACK], size=(width, height))\n\n    # Create grey horizontal bars\n    bar = np.full((width, 1), Color.GREY)\n\n    # Combine the masks and bars\n    grid = np.hstack((red_mask, bar, green_mask, bar, blue_mask))\n\n    return grid"
}