{
  "uid": "b61b94ce8ed2e2c5",
  "annotations": {
    "example": "bad",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng15_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          8,
          8
        ],
        [
          0,
          6,
          8,
          8,
          8
        ],
        [
          0,
          6,
          8,
          8,
          8
        ],
        [
          0,
          4,
          4,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          8,
          8,
          0,
          0,
          0
        ],
        [
          8,
          8,
          8,
          6,
          0
        ],
        [
          8,
          8,
          8,
          6,
          0
        ],
        [
          0,
          0,
          4,
          4,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          5,
          0,
          5
        ],
        [
          9,
          9,
          5,
          5,
          5
        ],
        [
          9,
          9,
          5,
          5,
          5
        ],
        [
          9,
          9,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          0,
          5,
          0,
          0
        ],
        [
          5,
          5,
          5,
          9,
          9
        ],
        [
          5,
          5,
          5,
          9,
          9
        ],
        [
          0,
          0,
          0,
          9,
          9
        ],
        [
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          7,
          7,
          1,
          4
        ],
        [
          0,
          7,
          7,
          7,
          4
        ],
        [
          0,
          0,
          7,
          7,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          1,
          0,
          0,
          0,
          0
        ],
        [
          4,
          1,
          7,
          7,
          0
        ],
        [
          4,
          7,
          7,
          7,
          0
        ],
        [
          0,
          7,
          7,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          8,
          8
        ],
        [
          0,
          0,
          0,
          8,
          8
        ],
        [
          0,
          0,
          0,
          8,
          8
        ],
        [
          0,
          0,
          0,
          9,
          0
        ],
        [
          0,
          0,
          9,
          9,
          9
        ],
        [
          0,
          0,
          0,
          9,
          0
        ]
      ],
      "output": [
        [
          8,
          8,
          0,
          0,
          0
        ],
        [
          8,
          8,
          0,
          0,
          0
        ],
        [
          8,
          8,
          0,
          0,
          0
        ],
        [
          0,
          9,
          0,
          0,
          0
        ],
        [
          9,
          9,
          9,
          0,
          0
        ],
        [
          0,
          9,
          0,
          0,
          0
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# symmetric mirroring, shapes, deterministic transformation\n\n# description:\n# In the input you will see a grid containing colored shapes.\n# The output grid should be the result of mirroring the input grid along a specified vertical axis.\n\ndef main(input_grid):\n    n, m = input_grid.shape\n    output_grid = np.zeros_like(input_grid)\n\n    # Define the axis for the symmetric mirroring; for simplicity, we will use the vertical center (m//2)\n    axis = m // 2\n    \n    for i in range(n):\n        for j in range(m):\n            # Mirroring across the vertical axis\n            mirrored_j = 2 * axis - j if j != axis else j\n            if 0 <= mirrored_j < m:\n                output_grid[i, mirrored_j] = input_grid[i, j]\n\n    return output_grid\n\ndef generate_input():\n    # Create a random grid with colored shapes\n    n, m = np.random.randint(5, 10, size=2)\n    grid = np.zeros((n, m), dtype=int)\n\n    # Populate the grid with random colored shapes\n    num_shapes = np.random.randint(1, 4)\n    for _ in range(num_shapes):\n        shape = random_sprite(np.random.randint(2, 4), np.random.randint(2, 4), color_palette=None)\n        x, y = random_free_location_for_object(grid, shape)\n        blit(grid, shape, x, y, background=Color.BLACK)\n\n    return grid\n\n# Example usage to test the implementation"
}