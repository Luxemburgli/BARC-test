{
  "uid": "f44928758cd8f9a2",
  "annotations": {
    "example": "good",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix0_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng14_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          8,
          8,
          8,
          8,
          4,
          7,
          7,
          7,
          7,
          4,
          6,
          6,
          6,
          6,
          4
        ],
        [
          8,
          8,
          8,
          8,
          4,
          7,
          7,
          7,
          7,
          4,
          6,
          6,
          6,
          6,
          4
        ],
        [
          8,
          8,
          8,
          8,
          4,
          7,
          7,
          7,
          7,
          4,
          6,
          6,
          6,
          6,
          4
        ],
        [
          8,
          8,
          8,
          8,
          4,
          7,
          7,
          7,
          7,
          4,
          6,
          6,
          6,
          6,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          6,
          6,
          6,
          6,
          4,
          9,
          9,
          9,
          9,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          6,
          6,
          6,
          6,
          4,
          9,
          9,
          9,
          9,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          6,
          6,
          6,
          6,
          4,
          9,
          9,
          9,
          9,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          6,
          6,
          6,
          6,
          4,
          9,
          9,
          9,
          9,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          8,
          8,
          8,
          8,
          4,
          5,
          5,
          5,
          5,
          4,
          6,
          6,
          6,
          6,
          4
        ],
        [
          8,
          8,
          8,
          8,
          4,
          5,
          5,
          5,
          5,
          4,
          6,
          6,
          6,
          6,
          4
        ],
        [
          8,
          8,
          8,
          8,
          4,
          5,
          5,
          5,
          5,
          4,
          6,
          6,
          6,
          6,
          4
        ],
        [
          8,
          8,
          8,
          8,
          4,
          5,
          5,
          5,
          5,
          4,
          6,
          6,
          6,
          6,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4
        ],
        [
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4,
          0,
          0,
          0,
          0,
          4
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ]
      ]
    },
    {
      "input": [
        [
          6,
          6,
          6,
          6,
          3,
          7,
          7,
          7,
          7,
          3,
          4,
          4,
          4,
          4,
          3
        ],
        [
          6,
          6,
          6,
          6,
          3,
          7,
          7,
          7,
          7,
          3,
          4,
          4,
          4,
          4,
          3
        ],
        [
          6,
          6,
          6,
          6,
          3,
          7,
          7,
          7,
          7,
          3,
          4,
          4,
          4,
          4,
          3
        ],
        [
          6,
          6,
          6,
          6,
          3,
          7,
          7,
          7,
          7,
          3,
          4,
          4,
          4,
          4,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          1,
          1,
          1,
          1,
          3,
          2,
          2,
          2,
          2,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          1,
          1,
          1,
          1,
          3,
          2,
          2,
          2,
          2,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          1,
          1,
          1,
          1,
          3,
          2,
          2,
          2,
          2,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          1,
          1,
          1,
          1,
          3,
          2,
          2,
          2,
          2,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          6,
          6,
          6,
          6,
          3,
          1,
          1,
          1,
          1,
          3,
          5,
          5,
          5,
          5,
          3
        ],
        [
          6,
          6,
          6,
          6,
          3,
          1,
          1,
          1,
          1,
          3,
          5,
          5,
          5,
          5,
          3
        ],
        [
          6,
          6,
          6,
          6,
          3,
          1,
          1,
          1,
          1,
          3,
          5,
          5,
          5,
          5,
          3
        ],
        [
          6,
          6,
          6,
          6,
          3,
          1,
          1,
          1,
          1,
          3,
          5,
          5,
          5,
          5,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ]
      ]
    },
    {
      "input": [
        [
          7,
          7,
          7,
          7,
          3,
          5,
          5,
          5,
          5,
          3,
          9,
          9,
          9,
          9,
          3
        ],
        [
          7,
          7,
          7,
          7,
          3,
          5,
          5,
          5,
          5,
          3,
          9,
          9,
          9,
          9,
          3
        ],
        [
          7,
          7,
          7,
          7,
          3,
          5,
          5,
          5,
          5,
          3,
          9,
          9,
          9,
          9,
          3
        ],
        [
          7,
          7,
          7,
          7,
          3,
          5,
          5,
          5,
          5,
          3,
          9,
          9,
          9,
          9,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          4,
          4,
          4,
          4,
          3,
          4,
          4,
          4,
          4,
          3,
          2,
          2,
          2,
          2,
          3
        ],
        [
          4,
          4,
          4,
          4,
          3,
          4,
          4,
          4,
          4,
          3,
          2,
          2,
          2,
          2,
          3
        ],
        [
          4,
          4,
          4,
          4,
          3,
          4,
          4,
          4,
          4,
          3,
          2,
          2,
          2,
          2,
          3
        ],
        [
          4,
          4,
          4,
          4,
          3,
          4,
          4,
          4,
          4,
          3,
          2,
          2,
          2,
          2,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          1,
          1,
          1,
          1,
          3,
          7,
          7,
          7,
          7,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          1,
          1,
          1,
          1,
          3,
          7,
          7,
          7,
          7,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          1,
          1,
          1,
          1,
          3,
          7,
          7,
          7,
          7,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          1,
          1,
          1,
          1,
          3,
          7,
          7,
          7,
          7,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          0,
          0,
          0,
          0,
          3,
          0,
          0,
          0,
          0,
          3
        ],
        [
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3,
          3
        ]
      ]
    },
    {
      "input": [
        [
          5,
          5,
          5,
          5,
          5,
          6,
          6,
          6,
          6,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          6,
          6,
          6,
          6,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          6,
          6,
          6,
          6,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          6,
          6,
          6,
          6,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          3,
          3,
          3,
          3,
          5,
          6,
          6,
          6,
          6,
          5,
          9,
          9,
          9,
          9,
          5
        ],
        [
          3,
          3,
          3,
          3,
          5,
          6,
          6,
          6,
          6,
          5,
          9,
          9,
          9,
          9,
          5
        ],
        [
          3,
          3,
          3,
          3,
          5,
          6,
          6,
          6,
          6,
          5,
          9,
          9,
          9,
          9,
          5
        ],
        [
          3,
          3,
          3,
          3,
          5,
          6,
          6,
          6,
          6,
          5,
          9,
          9,
          9,
          9,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          9,
          9,
          9,
          9,
          5,
          1,
          1,
          1,
          1,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          9,
          9,
          9,
          9,
          5,
          1,
          1,
          1,
          1,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          9,
          9,
          9,
          9,
          5,
          1,
          1,
          1,
          1,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          9,
          9,
          9,
          9,
          5,
          1,
          1,
          1,
          1,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ]
      ],
      "output": [
        [
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          5
        ],
        [
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          5
        ],
        [
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          5
        ],
        [
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          0,
          0,
          0,
          0,
          5,
          0,
          0,
          0,
          0,
          5
        ],
        [
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    # Find the partition color (the color that forms the grid partitions)\n    partition_color = None\n    for i in range(input_grid.shape[0]):\n        for j in range(input_grid.shape[1]):\n            color = input_grid[i, j]\n            if np.all(input_grid[:, j] == color) or np.all(input_grid[i, :] == color):\n                partition_color = color\n                break\n        if partition_color:\n            break\n\n    assert partition_color is not None, \"No partition color found\"\n\n    # Determine the regions by flood filling the areas between partitions\n    regions = find_connected_components(input_grid, background=partition_color, connectivity=4, monochromatic=True)\n\n    regions_cropped = [crop(region) for region in regions]\n\n    # Create an empty output grid with the same shape as the input_grid\n    output_grid = np.zeros_like(input_grid)\n\n    # Fill the output grid with the partition color\n    output_grid[input_grid == partition_color] = partition_color\n\n    # Reflect each region over the main diagonal and place it in the output grid\n    for region in regions_cropped:\n        x, y, w, h = bounding_box(region)\n        reflected_region = np.transpose(region)\n\n        # Find an appropriate position for the reflected region\n        for rx in range(input_grid.shape[0] - h + 1):\n            for ry in range(input_grid.shape[1] - w + 1):\n                # Check for collisions before placing the reflected region\n                if not collision(object1=output_grid, object2=reflected_region, x2=rx, y2=ry, background=Color.BLACK):\n                    blit(output_grid, reflected_region, rx, ry, background=Color.BLACK)\n                    break\n            else:\n                continue\n            break\n\n    return output_grid\n\ndef generate_input() -> np.ndarray:\n    # Make a 15x15 grid for the background\n    grid_size = 15\n    grid = np.zeros((grid_size, grid_size), dtype=int)\n\n    # Pick a non-black color for the partition lines\n    partition_color = np.random.choice(Color.NOT_BLACK)\n\n    # Create horizontal and vertical partition lines\n    for i in range(4, grid_size, 5):\n        grid[i, :] = partition_color\n        grid[:, i] = partition_color\n\n    # Fill each region with random colors\n    colors = list(Color.NOT_BLACK)\n    for x in range(0, grid_size, 5):\n        for y in range(0, grid_size, 5):\n            region_color = np.random.choice(colors)\n            for i in range(5):\n                for j in range(5):\n                    if grid[x + i, y + j] == 0:\n                        grid[x + i, y + j] = region_color\n\n    return grid"
}