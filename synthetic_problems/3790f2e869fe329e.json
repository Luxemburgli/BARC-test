{
  "uid": "3790f2e869fe329e",
  "annotations": {
    "example": "ok",
    "code": "good"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng2_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          3,
          3,
          3,
          0,
          7
        ],
        [
          0,
          0,
          3,
          0,
          0,
          7
        ],
        [
          0,
          0,
          3,
          0,
          0,
          7
        ],
        [
          0,
          0,
          3,
          0,
          0,
          5
        ],
        [
          0,
          0,
          0,
          0,
          0,
          6
        ],
        [
          7,
          7,
          7,
          5,
          6,
          2
        ]
      ],
      "output": [
        [
          0,
          0,
          3,
          3,
          3,
          3,
          3,
          3,
          0,
          0,
          7,
          7
        ],
        [
          0,
          0,
          3,
          3,
          3,
          3,
          3,
          3,
          0,
          0,
          7,
          7
        ],
        [
          0,
          0,
          0,
          0,
          3,
          3,
          0,
          0,
          0,
          0,
          7,
          7
        ],
        [
          0,
          0,
          0,
          0,
          3,
          3,
          0,
          0,
          0,
          0,
          7,
          7
        ],
        [
          0,
          0,
          0,
          0,
          3,
          3,
          0,
          0,
          0,
          0,
          7,
          7
        ],
        [
          0,
          0,
          0,
          0,
          3,
          3,
          0,
          0,
          0,
          0,
          7,
          7
        ],
        [
          0,
          0,
          0,
          0,
          3,
          3,
          0,
          0,
          0,
          0,
          5,
          5
        ],
        [
          0,
          0,
          0,
          0,
          3,
          3,
          0,
          0,
          0,
          0,
          5,
          5
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          6
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          6
        ],
        [
          7,
          7,
          7,
          7,
          7,
          7,
          5,
          5,
          6,
          6,
          2,
          2
        ],
        [
          7,
          7,
          7,
          7,
          7,
          7,
          5,
          5,
          6,
          6,
          2,
          2
        ]
      ]
    },
    {
      "input": [
        [
          0,
          6,
          6,
          6,
          0,
          1
        ],
        [
          0,
          0,
          6,
          0,
          0,
          1
        ],
        [
          0,
          0,
          6,
          0,
          0,
          1
        ],
        [
          0,
          0,
          6,
          0,
          0,
          5
        ],
        [
          0,
          0,
          0,
          0,
          0,
          5
        ],
        [
          1,
          1,
          1,
          5,
          5,
          3
        ]
      ],
      "output": [
        [
          0,
          0,
          6,
          6,
          6,
          6,
          6,
          6,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          6,
          6,
          6,
          6,
          6,
          6,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          5,
          5
        ],
        [
          0,
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          5,
          5
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          5,
          5
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          5,
          5
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          5,
          5,
          5,
          5,
          3,
          3
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          5,
          5,
          5,
          5,
          3,
          3
        ]
      ]
    },
    {
      "input": [
        [
          0,
          2,
          2,
          2,
          0,
          9
        ],
        [
          0,
          0,
          2,
          0,
          0,
          4
        ],
        [
          0,
          0,
          2,
          0,
          0,
          1
        ],
        [
          0,
          0,
          2,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          8
        ],
        [
          9,
          4,
          1,
          1,
          8,
          7
        ]
      ],
      "output": [
        [
          0,
          0,
          2,
          2,
          2,
          2,
          2,
          2,
          0,
          0,
          9,
          9
        ],
        [
          0,
          0,
          2,
          2,
          2,
          2,
          2,
          2,
          0,
          0,
          9,
          9
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          4,
          4
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          4,
          4
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8
        ],
        [
          9,
          9,
          4,
          4,
          1,
          1,
          1,
          1,
          8,
          8,
          7,
          7
        ],
        [
          9,
          9,
          4,
          4,
          1,
          1,
          1,
          1,
          8,
          8,
          7,
          7
        ]
      ]
    },
    {
      "input": [
        [
          0,
          6,
          6,
          6,
          0,
          4
        ],
        [
          0,
          0,
          6,
          0,
          0,
          4
        ],
        [
          0,
          0,
          6,
          0,
          0,
          4
        ],
        [
          0,
          0,
          6,
          0,
          0,
          8
        ],
        [
          0,
          0,
          0,
          0,
          0,
          8
        ],
        [
          4,
          4,
          4,
          8,
          8,
          7
        ]
      ],
      "output": [
        [
          0,
          0,
          6,
          6,
          6,
          6,
          6,
          6,
          0,
          0,
          4,
          4
        ],
        [
          0,
          0,
          6,
          6,
          6,
          6,
          6,
          6,
          0,
          0,
          4,
          4
        ],
        [
          0,
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          4,
          4
        ],
        [
          0,
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          4,
          4
        ],
        [
          0,
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          4,
          4
        ],
        [
          0,
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          4,
          4
        ],
        [
          0,
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          8,
          8
        ],
        [
          0,
          0,
          0,
          0,
          6,
          6,
          0,
          0,
          0,
          0,
          8,
          8
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          8,
          8,
          8,
          8,
          7,
          7
        ],
        [
          4,
          4,
          4,
          4,
          4,
          4,
          8,
          8,
          8,
          8,
          7,
          7
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# counting, resizing, objects, color, alignment\n\n# description:\n# In the input, you see a grid with a row of colored blocks at the bottom and the right.\n# There's also a \"T\"-shaped pattern in the top-left that is not touching the other colors.\n# To create the output:\n# 1. count the number of unique colors that aren't black\n# 2. enlarge every pixel in the input by a factor of the square root of the number of unique colors (round down)\n# 3. ensure the \"T\"-pattern in the top-left remains proportional and connected after transformation.\n\ndef main(input_grid):\n    # count the number of unique colors that aren't black\n    unique_colors = len(set(input_grid.flatten())) - 1\n\n    # calculate the enlargement factor\n    factor = int(np.sqrt(unique_colors))\n\n    # magnify the pixels\n    output_grid = np.repeat(np.repeat(input_grid, factor, axis=0), factor, axis=1)\n\n    return output_grid\n\ndef generate_input():\n    # make a 6x6 black grid for the background\n    n = m = 6\n    grid = np.zeros((n, m), dtype=int)\n\n    # generate the \"T\"-shape at the top-left\n    t_color = np.random.choice(list(Color.NOT_BLACK))\n    grid[0, 1:4] = t_color\n    grid[1:4, 2] = t_color\n\n    # pick the remaining colors\n    remaining_colors = list(set(Color.NOT_BLACK) - {t_color})\n\n    # create a sequence of colors for the bottom and right of the grid\n    sequence = []\n    while len(sequence) < 6:\n        color = np.random.choice(remaining_colors)\n        remaining_colors.remove(color)\n        length = np.random.randint(1, 6 - len(sequence) + 1)\n        sequence.extend([color] * length)\n\n    # ensure sequence is the same for the bottom row and the right column\n    bottom_sequence = sequence[:6]\n    grid[-1, :] = bottom_sequence\n    grid[:, -1] = bottom_sequence\n\n    return grid"
}