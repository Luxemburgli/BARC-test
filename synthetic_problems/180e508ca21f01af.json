{
  "uid": "180e508ca21f01af",
  "annotations": {
    "example": "bad",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng2_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8,
          8,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          8,
          8,
          8,
          0
        ],
        [
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          0,
          0,
          0
        ],
        [
          0,
          2,
          9,
          9,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          8,
          0,
          0,
          0
        ],
        [
          0,
          2,
          8,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          2,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          2,
          4,
          4,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          6,
          4,
          3,
          9,
          5,
          0,
          8,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          6,
          1,
          0,
          9,
          9,
          8,
          8,
          0,
          0,
          8,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          9,
          1,
          6,
          9,
          9,
          9,
          0,
          0,
          0,
          8,
          8,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          5,
          5,
          6,
          9,
          9,
          9,
          9,
          9,
          8,
          7,
          7,
          1,
          0,
          0
        ],
        [
          0,
          8,
          2,
          2,
          1,
          1,
          9,
          9,
          1,
          7,
          7,
          7,
          7,
          6,
          0,
          0
        ],
        [
          0,
          5,
          2,
          1,
          1,
          1,
          4,
          2,
          7,
          7,
          9,
          9,
          9,
          2,
          0,
          0
        ],
        [
          0,
          5,
          7,
          1,
          0,
          4,
          4,
          4,
          6,
          5,
          5,
          2,
          2,
          2,
          0,
          0
        ],
        [
          0,
          6,
          7,
          0,
          0,
          0,
          1,
          1,
          1,
          5,
          5,
          6,
          2,
          9,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          2,
          0,
          0,
          0
        ],
        [
          2,
          0,
          0,
          0
        ],
        [
          0,
          9,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          5,
          2,
          8,
          2,
          2,
          3,
          9,
          9,
          4,
          8,
          2,
          9,
          5,
          4,
          0,
          0
        ],
        [
          5,
          5,
          8,
          6,
          1,
          5,
          6,
          5,
          4,
          8,
          2,
          9,
          5,
          4,
          0,
          0
        ],
        [
          6,
          5,
          5,
          6,
          1,
          1,
          9,
          5,
          5,
          4,
          2,
          7,
          3,
          3,
          0,
          0
        ],
        [
          6,
          0,
          9,
          8,
          4,
          5,
          8,
          8,
          8,
          7,
          8,
          5,
          3,
          3,
          0,
          0
        ],
        [
          6,
          0,
          7,
          8,
          7,
          3,
          3,
          3,
          3,
          3,
          8,
          8,
          6,
          4,
          0,
          0
        ],
        [
          6,
          3,
          7,
          4,
          4,
          2,
          2,
          5,
          3,
          3,
          8,
          1,
          6,
          6,
          0,
          0
        ],
        [
          6,
          8,
          8,
          8,
          3,
          2,
          1,
          7,
          7,
          9,
          1,
          1,
          8,
          0,
          0,
          0
        ],
        [
          5,
          3,
          1,
          1,
          3,
          3,
          1,
          3,
          3,
          9,
          9,
          2,
          0,
          0,
          0,
          0
        ],
        [
          4,
          7,
          9,
          7,
          2,
          2,
          1,
          3,
          4,
          1,
          2,
          2,
          0,
          0,
          0,
          0
        ],
        [
          4,
          7,
          8,
          1,
          9,
          2,
          5,
          3,
          3,
          3,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          3,
          3,
          2,
          7,
          7,
          3,
          3,
          3,
          3,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          7,
          7,
          6,
          6,
          9,
          5,
          0,
          0,
          0,
          0,
          7,
          7,
          7,
          0,
          0
        ],
        [
          0,
          0,
          7,
          4,
          3,
          4,
          4,
          0,
          0,
          0,
          0,
          0,
          0,
          7,
          7,
          0
        ],
        [
          0,
          0,
          0,
          4,
          3,
          3,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          7,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          7,
          0
        ]
      ],
      "output": [
        [
          5,
          2,
          9,
          0
        ],
        [
          0,
          0,
          8,
          7
        ],
        [
          0,
          0,
          0,
          9
        ],
        [
          0,
          0,
          0,
          3
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          9,
          9,
          4,
          4,
          1,
          8,
          7,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          6,
          8,
          2,
          4,
          4,
          4,
          5,
          5,
          8,
          9,
          0,
          0,
          0
        ],
        [
          0,
          0,
          4,
          0,
          0,
          5,
          8,
          3,
          3,
          8,
          9,
          5,
          5,
          8,
          8,
          0,
          0,
          0
        ],
        [
          0,
          5,
          5,
          6,
          0,
          7,
          4,
          4,
          9,
          5,
          5,
          5,
          5,
          8,
          4,
          0,
          0,
          0
        ],
        [
          0,
          3,
          7,
          7,
          1,
          1,
          5,
          5,
          5,
          1,
          3,
          8,
          7,
          1,
          1,
          0,
          0,
          0
        ],
        [
          0,
          3,
          9,
          2,
          2,
          2,
          4,
          5,
          5,
          5,
          5,
          4,
          8,
          0,
          7,
          0,
          0,
          0
        ],
        [
          0,
          1,
          9,
          6,
          6,
          7,
          4,
          1,
          5,
          5,
          5,
          6,
          1,
          7,
          7,
          0,
          0,
          0
        ],
        [
          0,
          4,
          9,
          5,
          5,
          7,
          2,
          2,
          8,
          8,
          1,
          2,
          2,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          4,
          5,
          3,
          5,
          7,
          2,
          7,
          0,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          6,
          6,
          2,
          5,
          7,
          7,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          6,
          5,
          7,
          2,
          2,
          0,
          2,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          4,
          5,
          7,
          2,
          2,
          8,
          3,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          5,
          5,
          5
        ],
        [
          0,
          3,
          3,
          7,
          7,
          8,
          8,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          5,
          0,
          0
        ],
        [
          0,
          5,
          7,
          7,
          7,
          3,
          5,
          5,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          5,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          9
        ],
        [
          3,
          0,
          0
        ],
        [
          4,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          8,
          6,
          6,
          6,
          5,
          8,
          8,
          3,
          3,
          6,
          6,
          2,
          0
        ],
        [
          0,
          0,
          6,
          6,
          6,
          6,
          5,
          5,
          5,
          3,
          3,
          4,
          4,
          2,
          0
        ],
        [
          0,
          0,
          6,
          6,
          8,
          4,
          4,
          1,
          9,
          9,
          4,
          4,
          4,
          8,
          0
        ],
        [
          0,
          0,
          2,
          5,
          8,
          6,
          7,
          7,
          7,
          2,
          3,
          4,
          8,
          8,
          0
        ],
        [
          0,
          0,
          5,
          9,
          3,
          7,
          7,
          2,
          2,
          2,
          3,
          4,
          4,
          8,
          0
        ],
        [
          0,
          0,
          7,
          9,
          9,
          4,
          8,
          1,
          8,
          2,
          2,
          4,
          0,
          8,
          0
        ],
        [
          0,
          0,
          3,
          2,
          2,
          9,
          8,
          9,
          5,
          6,
          9,
          7,
          7,
          5,
          0
        ],
        [
          0,
          0,
          4,
          9,
          9,
          9,
          8,
          4,
          4,
          0,
          0,
          7,
          7,
          7,
          0
        ],
        [
          0,
          0,
          4,
          3,
          9,
          9,
          9,
          6,
          4,
          3,
          8,
          7,
          0,
          0,
          0
        ],
        [
          0,
          0,
          4,
          3,
          7,
          5,
          6,
          6,
          6,
          8,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          4,
          9,
          9,
          3,
          6,
          2,
          6,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          4,
          6,
          6,
          3,
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          6,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          6,
          6,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          6,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          3
        ],
        [
          5,
          7,
          3
        ],
        [
          0,
          0,
          8
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n# concepts:\n# scaling, masking, patterns\n\n# description:\n# In the input you will see a large patterned square object and a smaller monochromatic object.\n# To make the output, first downscale the large patterned square so that it is the same size as the small monochromatic object,\n# then use the smaller object as a binary mask to zero out pixels in the scaled-down square.\n\ndef main(input_grid):\n    # find all the objects in the input grid\n    objects = find_connected_components(input_grid, connectivity=8, monochromatic=False)\n\n    # figure out which object is the pattern square and which object is the monochromatic mask\n    pattern_square, mask_obj = None, None\n    for obj in objects:\n        unique_colors = set(obj.flatten())\n        if len(unique_colors.difference([Color.BLACK])) > 1:\n            pattern_square = obj\n        elif len(unique_colors.difference([Color.BLACK])) == 1:\n            mask_obj = obj\n    \n    # get the location and size of the pattern square\n    x, y, width, height = bounding_box(pattern_square)\n    pattern_sprite = pattern_square[x:x+width, y:y+height]\n\n    # get the location and size of the mask object\n    x2, y2, width2, height2 = bounding_box(mask_obj)\n    # make sure the mask object is square\n    if width2 != height2:\n        width2 = height2 = max(width2, height2)\n    mask_sprite = mask_obj[x2:x2+width2, y2:y2+height2]\n\n    # calculate the scaling factor\n    scale = width // width2\n    if scale == 0:\n        scale = 1\n\n    # scale down the pattern to fit the mask object\n    scaled_pattern = np.zeros((width2, height2), dtype=int)\n    for i in range(width2):\n        for j in range(height2):\n            scaled_pattern[i,j] = pattern_sprite[i * scale, j * scale]\n    \n    # apply the mask\n    output_grid = np.where(mask_sprite != Color.BLACK, scaled_pattern, Color.BLACK)\n\n    return output_grid\n\n\ndef generate_input():\n    # decide how big the large patterned square will be\n    size = np.random.randint(12, 16)\n\n    # make the large patterned square with random colors\n    pattern_square = random_sprite(size, size, density=0.7, symmetry=\"not_symmetric\", color_palette=list(Color.NOT_BLACK))\n    \n    # make sure the pattern is continuous, if not then try again\n    if not is_contiguous(pattern_square, connectivity=8):\n        return generate_input()\n\n    # decide how big the small monochromatic mask object will be\n    mask_size = np.random.randint(3, 5)\n\n    # make the monochromatic mask object with one random color\n    mask_color = np.random.choice(list(Color.NOT_BLACK))\n    mask_obj = random_sprite(mask_size, mask_size, density=0.5, symmetry=\"not_symmetric\", color_palette=[mask_color])\n    \n    # check that mask object is continuous, if not then try again\n    if not is_contiguous(mask_obj, connectivity=8):\n        return generate_input()\n\n    # make a grid large enough to fit both the patterned square and the monochromatic mask\n    n, m = max(size, mask_size + 1) + np.random.randint(2, 5), max(size, mask_size + 1) + np.random.randint(2, 5)\n    grid = np.zeros((n, m), dtype=int)\n\n    # put the patterned square on the grid randomly\n    x, y = np.random.randint(0, n - size), np.random.randint(0, m - size)\n    blit_sprite(grid, pattern_square, x=x, y=y)\n\n    # put the monochromatic mask object on the grid randomly but not touching the patterned square\n    x2, y2 = random_free_location_for_sprite(grid, mask_obj)\n    # make sure the mask object is not touching the patterned square, if it is then keep looking for a place to put it\n    while contact(object1=grid, object2=mask_obj, x2=x2, y2=y2, connectivity=8):\n        x2, y2 = random_free_location_for_sprite(grid, mask_obj)\n    blit_sprite(grid, mask_obj, x=x2, y=y2)\n\n    return grid"
}