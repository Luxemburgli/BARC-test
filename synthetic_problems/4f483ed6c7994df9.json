{
  "uid": "4f483ed6c7994df9",
  "annotations": {
    "example": "good",
    "code": "bad"
  },
  "metadata": {
    "source_file": "self_instruct_remix1_fewshot_4_gpt-4o_temp1.00_maxtokens2048_rng3_briefcommon_generated_problems.jsonl"
  },
  "examples": [
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          1,
          2,
          2,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          2,
          2,
          0,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          2,
          2,
          0,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          2,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          0
        ],
        [
          0,
          2,
          0,
          2,
          2,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          2,
          2,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          2,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0,
          0
        ],
        [
          0,
          2,
          0,
          2,
          2,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          2,
          2,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          2,
          2,
          0,
          1,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          2,
          0,
          1,
          1,
          0,
          2,
          2
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2
        ],
        [
          0,
          0,
          2,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          2,
          2,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          2,
          0,
          0,
          0,
          0,
          2,
          2
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          2,
          2
        ],
        [
          0,
          0,
          2,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0
        ],
        [
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          2,
          2,
          0,
          0,
          2,
          2,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          2,
          2,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          2,
          2,
          0,
          0,
          2,
          2,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          0
        ]
      ]
    },
    {
      "input": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          1
        ],
        [
          1,
          1,
          1,
          0,
          2,
          2,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          2,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "output": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          2,
          2,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          2,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          2,
          2,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ]
    }
  ],
  "code": "from common import *\n\nimport numpy as np\nfrom typing import *\n\n\n# concepts:\n# counting, surrounding, uniqueness\n\n# description:\n# In the input grid, there will be multiple 2x2 blue squares, multiple 2x2 red squares, and some red or blue dots sprinkled about.\n# To make the output, count the number of 2x2 blue squares. Find the largest 2x2 blue square in terms of its bounding box dimensions\n# and surround it with a border of green pixels. All other blue squares should be changed to black.\n\ndef main(input_grid):\n    output_grid = input_grid.copy()\n\n    # Find all 2x2 blue squares and keep track of their bounding boxes\n    blue_squares = []\n    for x in range(input_grid.shape[0]-1):\n        for y in range(input_grid.shape[1]-1):\n            if input_grid[x,y] == input_grid[x+1,y] == input_grid[x,y+1] == input_grid[x+1,y+1] == Color.BLUE:\n                blue_squares.append((x, y, x+1, y+1))\n\n    # Determining the largest 2x2 blue square by bounding box dimensions\n    max_bb = (0, 0, 1, 1)  # This will store the largest blue square's bounding box\n    for bb in blue_squares:\n        x0, y0, x1, y1 = bb\n        if (x1 - x0 + 1) * (y1 - y0 + 1) > (max_bb[2] - max_bb[0] + 1) * (max_bb[3] - max_bb[1] + 1):\n            max_bb = bb\n\n    # Surround the largest blue square with green pixels and turn others to black\n    x0, y0, x1, y1 = max_bb\n    for x in range(input_grid.shape[0]-1):\n        for y in range(input_grid.shape[1]-1):\n            if input_grid[x,y] == input_grid[x+1,y] == input_grid[x,y+1] == input_grid[x+1,y+1] == Color.BLUE:\n                if (x, y, x+1, y+1) == max_bb:\n                    for dx in range(-1, 3):\n                        for dy in range(-1, 3):\n                            if 0 <= x+dx < input_grid.shape[0] and 0 <= y+dy < input_grid.shape[1]:\n                                if dx in (-1, 2) or dy in (-1, 2):\n                                    output_grid[x+dx, y+dy] = Color.GREEN\n                else:\n                    output_grid[x:x+2, y:y+2] = Color.BLACK\n\n    return output_grid\n\n\ndef generate_input():\n    # make 9x9 black background grid first\n    n = m = 9\n    grid = np.zeros((n,m), dtype=int)\n\n    # make a random number of blue square sprites and place them at random places on the grid but don't have them touch\n    blue_square = np.full((2,2), Color.BLUE, dtype=int)\n    for _ in range(np.random.randint(2,6)):\n        x, y = random_free_location_for_sprite(grid, blue_square)\n        if not contact(object1=grid, object2=blue_square, x2=x, y2=y): # only place new squares that won't touch old ones\n          blit_sprite(grid, blue_square, x, y)\n    \n    # make a random number of red square sprites and place them at random places on the grid but don't have them touch\n    red_square = np.full((2,2), Color.RED, dtype=int)\n    for _ in range(np.random.randint(2,6)):\n        x, y = random_free_location_for_sprite(grid, red_square)\n        if not contact(object1=grid, object2=red_square, x2=x, y2=y): # only place new squares that won't touch old ones\n          blit_sprite(grid, red_square, x, y)\n        \n    # make a random number of blue pixel sprites and place them at random places on the grid\n    blue_pixel = np.full((1,1), Color.BLUE, dtype=int)\n    for _ in range(np.random.randint(4)):\n        x, y = random_free_location_for_sprite(grid, blue_pixel)\n        blit_sprite(grid, blue_pixel, x, y)\n\n    # make a random number of red pixel sprites and place them at random places on the grid\n    red_pixel = np.full((1,1), Color.RED, dtype=int)\n    for _ in range(np.random.randint(4)):\n        x, y = random_free_location_for_sprite(grid, red_pixel)\n        blit_sprite(grid, red_pixel, x, y)\n\n    return grid"
}